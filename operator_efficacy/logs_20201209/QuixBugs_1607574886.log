2020-12-10 05:34:46,825	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607574886
2020-12-10 05:34:46,825	[INFO]	========== EXPERIMENT FOR ['java_programs/MERGESORT.java.xml']  ==========
2020-12-10 05:34:46,825	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './while[1]', './while[1]/operator_comp[1]', './while[1]/operator_comp[2]', './while[1]/if[1]', './while[1]/if[1]/operator_comp[1]', './while[1]/if[1]/expr_stmt[1]', './while[1]/if[1]/expr_stmt[2]', './while[1]/expr_stmt[1]', './while[1]/expr_stmt[2]', './expr_stmt[1]', './return[1]', './if[1]', './if[1]/operator_comp[1]', './if[1]/return[1]', './decl_stmt[4]', './decl_stmt[5]', './expr_stmt[2]', './expr_stmt[3]', './decl_stmt[6]', './expr_stmt[4]', './expr_stmt[5]', './return[2]']
2020-12-10 05:34:46,825	[INFO]	number of statements and comparisons: 21, 4
2020-12-10 05:34:46,825	[INFO]	========== EPOCH 1 ==========
2020-12-10 05:34:46,826	[INFO]	==== WARMUP ====
2020-12-10 05:34:50,087	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:34:50,087	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:34:53,359	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:34:53,359	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:34:56,618	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:34:56,619	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:34:59,875	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 05:34:59,876	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:34:59,876	[INFO]	==== START ====
2020-12-10 05:35:00,746	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:35:01,672	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:35:02,404	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:35:03,114	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:35:06,437	[INFO]	5	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:35:06,439	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:35:07,284	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:35:07,285	[INFO]	7	SUCCESS	+13.0	
2020-12-10 05:35:07,286	[DEBUG]	
2020-12-10 05:35:10,621	[INFO]	8	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:35:10,622	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:35:10,623	[INFO]	9	SUCCESS	+13.0	
2020-12-10 05:35:10,623	[DEBUG]	
2020-12-10 05:35:11,472	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:35:12,184	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:35:13,085	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:35:13,944	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:35:14,836	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:35:15,730	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:35:16,636	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:35:17,557	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:35:18,452	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:35:21,712	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:35:21,713	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:35:22,563	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:35:23,261	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:35:24,143	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:35:25,021	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:35:25,023	[INFO]	24	SUCCESS	+13.0	
2020-12-10 05:35:25,023	[DEBUG]	
2020-12-10 05:35:25,959	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:35:26,864	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:35:27,771	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:35:28,697	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:35:32,006	[INFO]	29	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 05:35:32,007	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:35:32,008	[INFO]	30	SUCCESS	+13.0	
2020-12-10 05:35:32,008	[DEBUG]	
2020-12-10 05:35:32,859	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:35:33,725	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:35:34,603	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:35:35,587	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:35:36,511	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:35:39,827	[INFO]	36	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:35:39,828	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:35:40,717	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:35:40,718	[INFO]	38	SUCCESS	+13.0	
2020-12-10 05:35:40,718	[DEBUG]	
2020-12-10 05:35:40,719	[INFO]	39	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:35:40,719	[DEBUG]	
2020-12-10 05:35:40,720	[INFO]	40	SUCCESS	+13.0	
2020-12-10 05:35:40,720	[DEBUG]	
2020-12-10 05:35:41,605	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:35:42,329	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:35:43,235	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:35:46,516	[INFO]	44	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:35:46,517	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:35:46,518	[INFO]	45	SUCCESS	+13.0	
2020-12-10 05:35:46,518	[DEBUG]	
2020-12-10 05:35:47,217	[INFO]	46	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:35:48,084	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:35:48,955	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:35:48,957	[INFO]	49	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:35:48,957	[DEBUG]	
2020-12-10 05:35:48,958	[INFO]	50	SUCCESS	+13.0	
2020-12-10 05:35:48,958	[DEBUG]	
2020-12-10 05:35:49,881	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:35:53,224	[INFO]	52	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:35:53,225	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:35:53,226	[INFO]	53	SUCCESS	+13.0	
2020-12-10 05:35:53,227	[DEBUG]	
2020-12-10 05:35:54,062	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:35:57,286	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:35:57,287	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:35:58,150	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:35:58,152	[INFO]	57	SUCCESS	+13.0	
2020-12-10 05:35:58,152	[DEBUG]	
2020-12-10 05:36:01,385	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:36:01,386	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 05:36:02,105	[INFO]	59	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:36:02,974	[INFO]	60	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:36:02,975	[INFO]	61	SUCCESS	+13.0	
2020-12-10 05:36:02,976	[DEBUG]	
2020-12-10 05:36:03,878	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:36:04,618	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:36:04,621	[INFO]	64	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:36:04,622	[DEBUG]	
2020-12-10 05:36:05,478	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:36:08,811	[INFO]	66	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:36:08,812	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:36:08,813	[INFO]	67	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:36:08,813	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:36:09,691	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:36:10,569	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:36:10,570	[INFO]	70	SUCCESS	+13.0	
2020-12-10 05:36:10,571	[DEBUG]	
2020-12-10 05:36:10,572	[INFO]	71	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:36:10,573	[DEBUG]	
2020-12-10 05:36:10,574	[INFO]	72	SUCCESS	+13.0	
2020-12-10 05:36:10,574	[DEBUG]	
2020-12-10 05:36:11,524	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:36:12,413	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:36:13,295	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:36:14,182	[INFO]	76	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:36:14,913	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:36:15,765	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:36:19,070	[INFO]	79	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:36:19,071	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:36:22,380	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:36:22,381	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:36:23,254	[INFO]	81	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:36:26,521	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:36:26,522	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:36:26,523	[INFO]	83	SUCCESS	+13.0	
2020-12-10 05:36:26,523	[DEBUG]	
2020-12-10 05:36:27,374	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:36:28,267	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:36:31,546	[INFO]	86	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:36:31,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 05:36:32,439	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:36:33,332	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:36:33,333	[INFO]	89	SUCCESS	+13.0	
2020-12-10 05:36:33,333	[DEBUG]	
2020-12-10 05:36:36,653	[INFO]	90	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:36:36,655	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:36:37,518	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:36:38,429	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:36:38,432	[INFO]	93	SUCCESS	+13.0	
2020-12-10 05:36:38,433	[DEBUG]	
2020-12-10 05:36:39,327	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:36:40,260	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:36:43,459	[INFO]	96	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:36:43,460	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 05:36:44,339	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:36:44,341	[INFO]	98	SUCCESS	+13.0	
2020-12-10 05:36:44,341	[DEBUG]	
2020-12-10 05:36:44,342	[INFO]	99	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:36:44,343	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:36:44,343	[INFO]	100	SUCCESS	+13.0	
2020-12-10 05:36:44,343	[DEBUG]	
2020-12-10 05:36:47,665	[INFO]	101	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:36:47,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:36:47,667	[INFO]	102	SUCCESS	+13.0	
2020-12-10 05:36:47,667	[DEBUG]	
2020-12-10 05:36:48,556	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:36:49,469	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:36:49,470	[INFO]	105	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:36:49,471	[DEBUG]	
2020-12-10 05:36:50,428	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:36:53,756	[INFO]	107	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:36:53,757	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:36:53,758	[INFO]	108	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:36:53,758	[DEBUG]	
2020-12-10 05:36:54,603	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:36:57,840	[INFO]	110	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:36:57,842	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:36:57,843	[INFO]	111	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:36:57,843	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:36:58,744	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:36:59,663	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:36:59,665	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:36:59,665	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:37:00,547	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:37:00,549	[INFO]	116	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:37:00,549	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:37:00,550	[INFO]	117	SUCCESS	+13.0	
2020-12-10 05:37:00,550	[DEBUG]	
2020-12-10 05:37:01,460	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:37:04,724	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:37:04,725	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:37:08,129	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:37:08,130	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,42 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 05:37:08,801	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:37:08,802	[INFO]	122	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:37:08,803	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 05:37:09,714	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:37:10,581	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:37:11,483	[INFO]	125	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:37:12,367	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:37:13,269	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:37:13,271	[INFO]	128	SUCCESS	+13.0	
2020-12-10 05:37:13,272	[DEBUG]	
2020-12-10 05:37:16,511	[INFO]	129	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:37:16,512	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 05:37:19,829	[INFO]	130	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:37:19,830	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:37:20,692	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:37:23,947	[INFO]	132	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:37:23,948	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,32 ****
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 25,33 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
!                 j++;
                  j++;
              }
          }
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:37:27,275	[INFO]	133	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:37:27,277	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,32 ****
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 25,33 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
!                 j++;
                  j++;
              }
          }
***************
*** 42,50 ****
--- 43,54 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+ 
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 05:37:30,537	[INFO]	134	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:37:30,538	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 42,50 ****
--- 43,54 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+ 
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 05:37:33,814	[INFO]	135	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:37:33,815	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:37:34,735	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:37:38,116	[INFO]	137	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:37:38,117	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:37:38,117	[INFO]	138	SUCCESS	+13.0	
2020-12-10 05:37:38,118	[DEBUG]	
2020-12-10 05:37:38,788	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:37:41,972	[INFO]	140	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:37:41,973	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:37:41,974	[INFO]	141	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:37:41,975	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:37:42,844	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:37:42,846	[INFO]	143	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:37:42,846	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:37:42,847	[INFO]	144	SUCCESS	+13.0	
2020-12-10 05:37:42,847	[DEBUG]	
2020-12-10 05:37:43,759	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:37:44,642	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:37:45,539	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:37:48,783	[INFO]	148	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:37:48,784	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:37:48,785	[INFO]	149	SUCCESS	+13.0	
2020-12-10 05:37:48,785	[DEBUG]	
2020-12-10 05:37:49,701	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:37:50,639	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:37:53,831	[INFO]	152	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:37:53,834	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 05:37:56,993	[INFO]	153	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:37:56,995	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 05:37:57,919	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:38:01,249	[INFO]	155	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:38:01,250	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:38:01,251	[INFO]	156	SUCCESS	+13.0	
2020-12-10 05:38:01,251	[DEBUG]	
2020-12-10 05:38:02,135	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:38:03,049	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:38:03,955	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:38:03,956	[INFO]	160	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:38:03,957	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:38:04,864	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:38:08,104	[INFO]	162	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:38:08,105	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,35 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:38:08,106	[INFO]	163	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:38:08,106	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:38:08,107	[INFO]	164	SUCCESS	+13.0	
2020-12-10 05:38:08,107	[DEBUG]	
2020-12-10 05:38:11,414	[INFO]	165	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:38:11,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:38:11,416	[INFO]	166	SUCCESS	+13.0	
2020-12-10 05:38:11,417	[DEBUG]	
2020-12-10 05:38:12,269	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:38:13,174	[INFO]	168	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:38:13,175	[INFO]	169	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:38:13,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:38:13,177	[INFO]	170	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:38:13,178	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:38:13,179	[INFO]	171	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:38:13,179	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:38:13,180	[INFO]	172	SUCCESS	+13.0	
2020-12-10 05:38:13,180	[DEBUG]	
2020-12-10 05:38:14,045	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:38:17,265	[INFO]	174	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:38:17,266	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:38:18,148	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:38:21,424	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:38:21,425	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:38:22,319	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:38:23,283	[INFO]	178	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:38:23,285	[INFO]	179	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:38:23,286	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:38:23,286	[INFO]	180	SUCCESS	+13.0	
2020-12-10 05:38:23,287	[DEBUG]	
2020-12-10 05:38:24,180	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:38:25,039	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:38:25,955	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:38:29,294	[INFO]	184	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:38:29,294	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:38:32,621	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'})
2020-12-10 05:38:32,622	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,29 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) > right.get(j)) {
!                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:38:33,480	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:38:34,169	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:38:34,170	[INFO]	188	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:38:34,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:38:35,041	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:38:35,043	[INFO]	190	SUCCESS	+13.0	
2020-12-10 05:38:35,043	[DEBUG]	
2020-12-10 05:38:36,056	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:38:36,956	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:38:37,848	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:38:41,238	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:38:41,239	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:38:42,104	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:38:45,400	[INFO]	196	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:38:45,402	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 27,32 ****
--- 28,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 j++;
                  j++;
              }
          }

2020-12-10 05:38:45,402	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:38:45,403	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:38:48,632	[INFO]	198	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:38:48,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,36 ****
--- 28,38 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 05:38:51,901	[INFO]	199	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:38:51,902	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 05:38:51,903	[INFO]	200	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:38:51,904	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 05:38:55,135	[INFO]	201	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:38:55,136	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:38:55,137	[INFO]	202	SUCCESS	+13.0	
2020-12-10 05:38:55,137	[DEBUG]	
2020-12-10 05:38:58,439	[INFO]	203	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:38:58,441	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,52 ****
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 46,52 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 05:38:59,282	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:39:02,663	[INFO]	205	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:39:02,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
***************
*** 46,52 ****
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 47,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 05:39:05,950	[INFO]	206	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:39:05,951	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,32 ****
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
***************
*** 46,52 ****
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 48,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 05:39:09,173	[INFO]	207	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:39:09,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 46,52 ****
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 47,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 05:39:12,446	[INFO]	208	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:39:12,447	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:39:13,155	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:39:14,048	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:39:14,049	[INFO]	211	SUCCESS	+13.0	
2020-12-10 05:39:14,050	[DEBUG]	
2020-12-10 05:39:14,911	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:39:15,821	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:39:16,731	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:39:17,632	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:39:18,517	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:39:19,450	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:39:20,372	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:39:21,266	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:39:21,267	[INFO]	220	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:39:21,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:39:21,269	[INFO]	221	SUCCESS	+13.0	
2020-12-10 05:39:21,269	[DEBUG]	
2020-12-10 05:39:24,509	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:39:24,511	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:39:24,513	[INFO]	223	SUCCESS	+13.0	
2020-12-10 05:39:24,514	[DEBUG]	
2020-12-10 05:39:25,406	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:39:26,259	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:39:27,157	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:39:28,039	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:39:31,360	[INFO]	228	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:39:31,361	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:39:31,361	[INFO]	229	SUCCESS	+13.0	
2020-12-10 05:39:31,362	[DEBUG]	
2020-12-10 05:39:32,227	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:39:32,945	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:39:33,815	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:39:34,698	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:39:35,615	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:39:36,502	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:39:37,391	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:39:38,272	[INFO]	237	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:39:41,525	[INFO]	238	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:39:41,525	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:39:41,526	[INFO]	239	SUCCESS	+13.0	
2020-12-10 05:39:41,527	[DEBUG]	
2020-12-10 05:39:44,806	[INFO]	240	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:39:44,806	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:39:44,807	[INFO]	241	SUCCESS	+13.0	
2020-12-10 05:39:44,808	[DEBUG]	
2020-12-10 05:39:45,676	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:39:48,936	[INFO]	243	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:39:48,937	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:39:48,938	[INFO]	244	SUCCESS	+13.0	
2020-12-10 05:39:48,938	[DEBUG]	
2020-12-10 05:39:49,820	[INFO]	245	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:39:50,730	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:39:51,627	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:39:52,538	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:39:55,823	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:39:55,824	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 05:39:56,544	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:39:56,546	[INFO]	251	SUCCESS	+13.0	
2020-12-10 05:39:56,547	[DEBUG]	
2020-12-10 05:39:57,405	[INFO]	252	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:39:58,284	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:39:59,179	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:40:02,477	[INFO]	255	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:40:02,478	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:40:03,351	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:40:03,352	[INFO]	257	SUCCESS	+13.0	
2020-12-10 05:40:03,352	[DEBUG]	
2020-12-10 05:40:06,583	[INFO]	258	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:40:06,584	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:40:07,459	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:40:08,376	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:40:08,377	[INFO]	261	SUCCESS	+13.0	
2020-12-10 05:40:08,378	[DEBUG]	
2020-12-10 05:40:09,257	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:40:10,170	[INFO]	263	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:40:10,886	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:40:11,764	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:40:12,740	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:40:16,054	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:40:16,055	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:40:16,929	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:40:16,930	[INFO]	269	SUCCESS	+13.0	
2020-12-10 05:40:16,930	[DEBUG]	
2020-12-10 05:40:17,846	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:40:18,562	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:40:19,471	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:40:20,377	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:40:21,072	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:40:21,938	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:40:25,278	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:40:25,279	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:40:25,280	[INFO]	277	SUCCESS	+13.0	
2020-12-10 05:40:25,280	[DEBUG]	
2020-12-10 05:40:28,488	[INFO]	278	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:40:28,489	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:40:29,386	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:40:29,389	[INFO]	280	SUCCESS	+13.0	
2020-12-10 05:40:29,390	[DEBUG]	
2020-12-10 05:40:32,637	[INFO]	281	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:40:32,638	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:40:33,496	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:40:33,497	[INFO]	283	SUCCESS	+13.0	
2020-12-10 05:40:33,497	[DEBUG]	
2020-12-10 05:40:37,397	[INFO]	284	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:40:37,398	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:40:38,556	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:40:38,558	[INFO]	286	SUCCESS	+13.0	
2020-12-10 05:40:38,559	[DEBUG]	
2020-12-10 05:40:39,603	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:40:40,510	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:40:41,393	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:40:42,301	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:40:43,172	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:40:44,064	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:40:44,780	[INFO]	293	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:40:45,669	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:40:45,670	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:40:46,576	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:40:47,434	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:40:50,817	[INFO]	298	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 05:40:50,817	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:40:54,063	[INFO]	299	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:40:54,064	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,46 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 35,47 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:40:57,315	[INFO]	300	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:40:57,316	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,46 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 35,48 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         int i = 0;
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:41:00,514	[INFO]	301	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:41:00,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,46 ****
--- 35,48 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:41:03,816	[INFO]	302	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:41:03,818	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:41:03,821	[INFO]	303	SUCCESS	+13.0	
2020-12-10 05:41:03,822	[DEBUG]	
2020-12-10 05:41:04,714	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:41:05,588	[INFO]	305	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:41:06,307	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:41:09,598	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:41:09,599	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:41:10,473	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:41:13,891	[INFO]	309	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:41:13,893	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         j++;
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 42,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:41:17,164	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:41:17,166	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         j++;
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,49 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 42,52 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:41:20,374	[INFO]	311	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:41:20,375	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 45,50 ****
--- 47,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:41:23,564	[INFO]	312	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:41:23,565	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:41:24,441	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:41:24,442	[INFO]	314	SUCCESS	+13.0	
2020-12-10 05:41:24,442	[DEBUG]	
2020-12-10 05:41:25,349	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:41:26,259	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:41:27,184	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:41:28,088	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:41:31,388	[INFO]	319	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:41:31,389	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  

2020-12-10 05:41:31,389	[INFO]	320	SUCCESS	+13.0	
2020-12-10 05:41:31,390	[DEBUG]	
2020-12-10 05:41:32,257	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:41:32,259	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:41:35,456	[INFO]	323	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:41:35,457	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:41:36,339	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:41:37,073	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:41:37,076	[INFO]	326	SUCCESS	+13.0	
2020-12-10 05:41:37,076	[DEBUG]	
2020-12-10 05:41:37,931	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:41:38,847	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:41:39,729	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:41:40,635	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:41:41,507	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:41:42,385	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:41:43,264	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:41:46,554	[INFO]	334	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:41:46,556	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:41:47,264	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:41:47,267	[INFO]	336	SUCCESS	+13.0	
2020-12-10 05:41:47,267	[DEBUG]	
2020-12-10 05:41:48,142	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:41:48,852	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:41:49,720	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:41:53,021	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:41:53,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:41:56,320	[INFO]	341	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:41:56,321	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,36 ****
--- 28,46 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 05:41:59,565	[INFO]	342	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:41:59,568	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,36 ****
--- 28,46 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  
***************
*** 40,45 ****
--- 50,56 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:41:59,571	[INFO]	343	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:41:59,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,36 ****
--- 28,46 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 05:41:59,574	[INFO]	344	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:41:59,575	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:42:00,506	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:42:01,411	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:42:01,412	[INFO]	347	SUCCESS	+13.0	
2020-12-10 05:42:01,412	[DEBUG]	
2020-12-10 05:42:02,316	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:42:03,016	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:42:06,235	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:42:06,236	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:42:06,954	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:42:07,831	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:42:08,512	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:42:08,513	[INFO]	354	SUCCESS	+13.0	
2020-12-10 05:42:08,514	[DEBUG]	
2020-12-10 05:42:09,403	[INFO]	355	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:42:12,740	[INFO]	356	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:42:12,741	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:42:12,742	[INFO]	357	SUCCESS	+13.0	
2020-12-10 05:42:12,742	[DEBUG]	
2020-12-10 05:42:16,049	[INFO]	358	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:42:16,050	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:42:16,051	[INFO]	359	SUCCESS	+13.0	
2020-12-10 05:42:16,051	[DEBUG]	
2020-12-10 05:42:16,889	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:42:20,175	[INFO]	361	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:42:20,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:42:20,177	[INFO]	362	SUCCESS	+13.0	
2020-12-10 05:42:20,177	[DEBUG]	
2020-12-10 05:42:21,067	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:42:21,981	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:42:25,240	[INFO]	365	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:42:25,241	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:42:26,135	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:42:27,064	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:42:30,345	[INFO]	368	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:42:30,346	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,39 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 result.add(left.get(i));
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:42:33,628	[INFO]	369	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:42:33,629	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:42:34,505	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:42:35,373	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:42:35,374	[INFO]	372	SUCCESS	+13.0	
2020-12-10 05:42:35,375	[DEBUG]	
2020-12-10 05:42:36,254	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:42:37,251	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:42:40,562	[INFO]	375	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:42:40,563	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:42:40,563	[INFO]	376	SUCCESS	+13.0	
2020-12-10 05:42:40,564	[DEBUG]	
2020-12-10 05:42:41,418	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:42:42,316	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:42:45,522	[INFO]	379	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 05:42:45,522	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:42:45,523	[INFO]	380	SUCCESS	+13.0	
2020-12-10 05:42:45,524	[DEBUG]	
2020-12-10 05:42:46,366	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:42:47,256	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:42:48,138	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:42:51,387	[INFO]	384	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:42:51,388	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:42:51,389	[INFO]	385	SUCCESS	+13.0	
2020-12-10 05:42:51,389	[DEBUG]	
2020-12-10 05:42:54,677	[INFO]	386	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:42:54,678	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:42:55,541	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:42:55,542	[INFO]	388	SUCCESS	+13.0	
2020-12-10 05:42:55,543	[DEBUG]	
2020-12-10 05:42:56,266	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:42:59,522	[INFO]	390	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:42:59,523	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:42:59,524	[INFO]	391	SUCCESS	+13.0	
2020-12-10 05:42:59,524	[DEBUG]	
2020-12-10 05:43:00,437	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:43:01,324	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:43:02,250	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:43:03,114	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:43:06,406	[INFO]	396	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:43:06,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:43:06,408	[INFO]	397	SUCCESS	+13.0	
2020-12-10 05:43:06,408	[DEBUG]	
2020-12-10 05:43:07,233	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:43:08,135	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:43:08,136	[INFO]	400	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:43:08,137	[DEBUG]	
2020-12-10 05:43:08,137	[INFO]	401	SUCCESS	+13.0	
2020-12-10 05:43:08,137	[DEBUG]	
2020-12-10 05:43:09,006	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:43:12,323	[INFO]	403	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:43:12,324	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:43:15,461	[INFO]	404	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:43:15,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:43:15,463	[INFO]	405	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:43:15,464	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:43:15,465	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:43:15,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:43:16,318	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:43:17,212	[INFO]	408	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:43:17,214	[INFO]	409	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:43:17,214	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:43:17,215	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:43:17,216	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:43:18,118	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:43:18,119	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:43:18,120	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:43:18,120	[INFO]	413	SUCCESS	+13.0	
2020-12-10 05:43:18,121	[DEBUG]	
2020-12-10 05:43:19,010	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:43:19,923	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:43:20,826	[INFO]	416	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:43:21,696	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:43:22,585	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:43:25,957	[INFO]	419	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:43:25,958	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:43:25,959	[INFO]	420	SUCCESS	+13.0	
2020-12-10 05:43:25,959	[DEBUG]	
2020-12-10 05:43:25,960	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:43:26,648	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:43:27,525	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:43:28,430	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:43:29,305	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:43:32,542	[INFO]	426	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:43:32,543	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:43:32,544	[INFO]	427	SUCCESS	+13.0	
2020-12-10 05:43:32,544	[DEBUG]	
2020-12-10 05:43:33,238	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:43:34,108	[INFO]	429	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:43:35,003	[INFO]	430	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:43:35,908	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:43:36,788	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:43:37,755	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:43:38,692	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:43:39,593	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:43:40,496	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:43:43,793	[INFO]	437	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='})
2020-12-10 05:43:43,794	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:43:44,643	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:43:44,644	[INFO]	439	SUCCESS	+13.0	
2020-12-10 05:43:44,645	[DEBUG]	
2020-12-10 05:43:47,904	[INFO]	440	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:43:47,905	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:43:48,801	[INFO]	441	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:43:48,802	[INFO]	442	SUCCESS	+13.0	
2020-12-10 05:43:48,802	[DEBUG]	
2020-12-10 05:43:49,535	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:43:50,433	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:43:53,740	[INFO]	445	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:43:53,741	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 05:43:54,595	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:43:54,597	[INFO]	447	SUCCESS	+13.0	
2020-12-10 05:43:54,597	[DEBUG]	
2020-12-10 05:43:55,512	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:43:58,816	[INFO]	449	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:43:58,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:43:58,817	[INFO]	450	SUCCESS	+13.0	
2020-12-10 05:43:58,818	[DEBUG]	
2020-12-10 05:43:59,531	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:44:02,662	[INFO]	452	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:44:02,663	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 05:44:05,938	[INFO]	453	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:44:05,939	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 05:44:06,825	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:44:06,826	[INFO]	455	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:44:06,827	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 05:44:07,728	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:44:08,610	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:44:08,611	[INFO]	458	SUCCESS	+13.0	
2020-12-10 05:44:08,612	[DEBUG]	
2020-12-10 05:44:09,332	[INFO]	459	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:44:12,584	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:44:12,585	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:44:12,586	[INFO]	461	SUCCESS	+13.0	
2020-12-10 05:44:12,586	[DEBUG]	
2020-12-10 05:44:13,471	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:44:14,400	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:44:15,281	[INFO]	464	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:44:16,198	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:44:17,071	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:44:20,379	[INFO]	467	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:44:20,379	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:44:23,656	[INFO]	468	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:44:23,657	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(right.get(j));
                  j++;
              }
***************
*** 43,48 ****
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:44:24,550	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:44:27,798	[INFO]	470	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:44:27,799	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 05:44:28,733	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:44:28,735	[INFO]	472	SUCCESS	+13.0	
2020-12-10 05:44:28,735	[DEBUG]	
2020-12-10 05:44:29,622	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:44:30,518	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:44:31,428	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:44:32,335	[INFO]	476	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:44:33,215	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:44:34,096	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:44:37,366	[INFO]	479	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:44:37,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:44:37,367	[INFO]	480	SUCCESS	+13.0	
2020-12-10 05:44:37,368	[DEBUG]	
2020-12-10 05:44:38,086	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:44:38,963	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:44:39,856	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:44:40,735	[INFO]	484	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:44:44,074	[INFO]	485	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:44:44,075	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:44:44,955	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:44:45,860	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:44:46,807	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:44:47,515	[INFO]	489	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:44:48,406	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:44:51,683	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:44:51,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 50,56 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:44:54,963	[INFO]	492	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:44:54,964	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:44:54,964	[INFO]	493	SUCCESS	+13.0	
2020-12-10 05:44:54,965	[DEBUG]	
2020-12-10 05:44:58,253	[INFO]	494	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:44:58,254	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:45:01,411	[INFO]	495	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:45:01,412	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:45:02,317	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:45:05,554	[INFO]	497	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:45:05,555	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 05:45:06,457	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:45:07,393	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:45:08,324	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:45:08,325	[INFO]	==== END ====
2020-12-10 05:45:08,325	[INFO]	Reason: step budget
2020-12-10 05:45:08,327	[INFO]	
2020-12-10 05:45:08,328	[INFO]	========== EPOCH 2 ==========
2020-12-10 05:45:08,329	[INFO]	==== WARMUP ====
2020-12-10 05:45:11,530	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:45:11,530	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:45:14,859	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:45:14,859	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:45:18,069	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:45:18,069	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:45:21,322	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 05:45:21,322	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:45:21,322	[INFO]	==== START ====
2020-12-10 05:45:22,223	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:45:23,117	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:45:24,002	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:45:24,900	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:45:25,804	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:45:26,673	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:45:27,551	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:45:28,480	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:45:28,481	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:45:29,422	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:45:30,310	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:45:33,620	[INFO]	12	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:45:33,621	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:45:33,622	[INFO]	13	SUCCESS	+13.0	
2020-12-10 05:45:33,622	[DEBUG]	
2020-12-10 05:45:37,144	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:45:37,145	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 05:45:37,146	[INFO]	15	SUCCESS	+13.0	
2020-12-10 05:45:37,146	[DEBUG]	
2020-12-10 05:45:40,504	[INFO]	16	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:45:40,505	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:45:40,505	[INFO]	17	SUCCESS	+13.0	
2020-12-10 05:45:40,506	[DEBUG]	
2020-12-10 05:45:41,400	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:45:42,300	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:45:45,594	[INFO]	20	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:45:45,595	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:45:48,900	[INFO]	21	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:45:48,901	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 40,45 ****
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:45:52,260	[INFO]	22	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:45:52,261	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:45:52,262	[INFO]	23	SUCCESS	+13.0	
2020-12-10 05:45:52,262	[DEBUG]	
2020-12-10 05:45:53,134	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:45:53,986	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:45:54,728	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:45:55,611	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:45:56,493	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:45:57,386	[INFO]	29	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:46:00,534	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:46:00,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 05:46:03,748	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:46:03,749	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 05:46:04,666	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:46:05,580	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:46:08,837	[INFO]	34	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:46:08,838	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 05:46:09,717	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:46:09,719	[INFO]	36	SUCCESS	+13.0	
2020-12-10 05:46:09,720	[DEBUG]	
2020-12-10 05:46:10,638	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:46:11,532	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:46:12,449	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:46:13,363	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:46:14,270	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:46:15,164	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:46:16,070	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:46:16,956	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:46:17,837	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:46:21,156	[INFO]	46	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:46:21,158	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:46:22,037	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:46:22,924	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:46:22,925	[INFO]	49	SUCCESS	+13.0	
2020-12-10 05:46:22,925	[DEBUG]	
2020-12-10 05:46:26,171	[INFO]	50	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:46:26,172	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:46:27,034	[INFO]	51	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:46:27,035	[INFO]	52	SUCCESS	+13.0	
2020-12-10 05:46:27,035	[DEBUG]	
2020-12-10 05:46:30,335	[INFO]	53	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:46:30,336	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 05:46:33,681	[INFO]	54	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:46:33,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 05:46:36,922	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:46:36,924	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 41,46 ****
--- 46,52 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:46:36,925	[INFO]	56	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:46:36,925	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 05:46:36,926	[INFO]	57	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:46:36,927	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 05:46:37,775	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:46:37,776	[INFO]	59	SUCCESS	+13.0	
2020-12-10 05:46:37,777	[DEBUG]	
2020-12-10 05:46:38,477	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:46:39,350	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:46:40,260	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:46:41,165	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:46:41,166	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:46:42,057	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:46:45,381	[INFO]	66	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:46:45,383	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:46:45,385	[INFO]	67	SUCCESS	+13.0	
2020-12-10 05:46:45,386	[DEBUG]	
2020-12-10 05:46:46,252	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:46:47,167	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:46:48,076	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:46:48,994	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:46:49,918	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:46:50,807	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:46:54,061	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:46:54,062	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 05:46:54,922	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:46:54,923	[INFO]	76	SUCCESS	+13.0	
2020-12-10 05:46:54,923	[DEBUG]	
2020-12-10 05:46:55,826	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:46:56,699	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:46:57,587	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:47:00,863	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:47:00,864	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:47:00,865	[INFO]	81	SUCCESS	+13.0	
2020-12-10 05:47:00,865	[DEBUG]	
2020-12-10 05:47:01,716	[INFO]	82	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:47:02,580	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:47:03,340	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:47:04,249	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:47:05,145	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:47:05,863	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:47:06,740	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:47:07,635	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:47:08,513	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:47:09,385	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:47:10,304	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:47:13,566	[INFO]	93	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:47:13,567	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 05:47:14,453	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:47:15,339	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:47:16,286	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:47:16,288	[INFO]	97	SUCCESS	+13.0	
2020-12-10 05:47:16,289	[DEBUG]	
2020-12-10 05:47:19,657	[INFO]	98	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:47:19,659	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:47:19,660	[INFO]	99	SUCCESS	+13.0	
2020-12-10 05:47:19,661	[DEBUG]	
2020-12-10 05:47:20,490	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:47:21,363	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:47:22,273	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:47:23,179	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:47:26,435	[INFO]	104	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:47:26,436	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 05:47:29,694	[INFO]	105	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:47:29,695	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,37 ****
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 27,38 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 05:47:32,993	[INFO]	106	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:47:32,994	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 05:47:32,995	[INFO]	107	SUCCESS	+13.0	
2020-12-10 05:47:32,995	[DEBUG]	
2020-12-10 05:47:33,843	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:47:34,742	[INFO]	109	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:47:35,631	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:47:36,514	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:47:36,516	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:47:37,420	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:47:38,344	[INFO]	114	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:47:39,220	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:47:40,100	[INFO]	116	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:47:40,984	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:47:41,992	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:47:42,909	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:47:43,814	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:47:47,066	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:47:47,067	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:47:47,068	[INFO]	122	SUCCESS	+13.0	
2020-12-10 05:47:47,068	[DEBUG]	
2020-12-10 05:47:47,069	[INFO]	123	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:47:47,070	[DEBUG]	
2020-12-10 05:47:47,070	[INFO]	124	SUCCESS	+13.0	
2020-12-10 05:47:47,070	[DEBUG]	
2020-12-10 05:47:50,421	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:47:50,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 05:47:51,279	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:47:52,145	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:47:52,146	[INFO]	128	SUCCESS	+13.0	
2020-12-10 05:47:52,147	[DEBUG]	
2020-12-10 05:47:55,438	[INFO]	129	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:47:55,440	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 05:47:55,441	[INFO]	130	SUCCESS	+13.0	
2020-12-10 05:47:55,441	[DEBUG]	
2020-12-10 05:47:58,767	[INFO]	131	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:47:58,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,52 ****
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 46,52 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 05:47:58,769	[INFO]	132	SUCCESS	+13.0	
2020-12-10 05:47:58,769	[DEBUG]	
2020-12-10 05:48:02,109	[INFO]	133	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:48:02,111	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:48:02,113	[INFO]	134	SUCCESS	+13.0	
2020-12-10 05:48:02,113	[DEBUG]	
2020-12-10 05:48:02,977	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:48:03,878	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:48:04,586	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:48:05,474	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:48:06,388	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:48:07,098	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:48:10,421	[INFO]	141	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:48:10,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:48:10,423	[INFO]	142	SUCCESS	+13.0	
2020-12-10 05:48:10,423	[DEBUG]	
2020-12-10 05:48:11,294	[INFO]	143	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:48:12,206	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:48:13,097	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:48:14,019	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:48:17,294	[INFO]	147	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:48:17,295	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 05:48:18,187	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:48:19,078	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:48:19,080	[INFO]	150	SUCCESS	+13.0	
2020-12-10 05:48:19,081	[DEBUG]	
2020-12-10 05:48:19,980	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:48:20,865	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:48:21,746	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:48:22,620	[INFO]	154	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:48:23,521	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:48:24,424	[INFO]	156	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:48:25,352	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:48:26,287	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:48:27,263	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:48:28,198	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:48:31,455	[INFO]	161	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:48:31,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 05:48:32,344	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:48:33,235	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:48:33,236	[INFO]	164	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:48:33,237	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 05:48:33,237	[INFO]	165	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:48:33,238	[DEBUG]	
2020-12-10 05:48:34,128	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:48:34,981	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:48:35,886	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:48:35,887	[INFO]	169	SUCCESS	+13.0	
2020-12-10 05:48:35,887	[DEBUG]	
2020-12-10 05:48:36,761	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:48:37,651	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:48:38,531	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:48:41,887	[INFO]	173	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:48:41,888	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:48:41,889	[INFO]	174	SUCCESS	+13.0	
2020-12-10 05:48:41,889	[DEBUG]	
2020-12-10 05:48:42,737	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:48:43,628	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:48:44,512	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:48:45,231	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:48:45,945	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:48:46,841	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:48:47,743	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:48:48,634	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:48:49,523	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:48:50,440	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:48:51,334	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:48:54,542	[INFO]	186	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:48:54,543	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:48:55,428	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:48:55,430	[INFO]	188	SUCCESS	+13.0	
2020-12-10 05:48:55,431	[DEBUG]	
2020-12-10 05:48:56,302	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:48:57,203	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:49:00,541	[INFO]	191	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:49:00,542	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 05:49:00,543	[INFO]	192	SUCCESS	+13.0	
2020-12-10 05:49:00,543	[DEBUG]	
2020-12-10 05:49:01,392	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:49:04,656	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:49:04,658	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 05:49:04,660	[INFO]	195	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:49:04,662	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 05:49:04,663	[INFO]	196	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:49:04,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 05:49:04,666	[INFO]	197	SUCCESS	+13.0	
2020-12-10 05:49:04,667	[DEBUG]	
2020-12-10 05:49:08,035	[INFO]	198	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:49:08,036	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:49:08,037	[INFO]	199	SUCCESS	+13.0	
2020-12-10 05:49:08,037	[DEBUG]	
2020-12-10 05:49:11,259	[INFO]	200	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:49:11,260	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:14,422	[INFO]	201	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:49:14,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:17,695	[INFO]	202	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:49:17,696	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 23,30 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:21,153	[INFO]	203	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:49:21,154	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 23,30 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:24,441	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:49:24,442	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,38 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:25,136	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:49:28,400	[INFO]	206	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:49:28,401	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,38 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 42,47 ****
--- 50,56 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:49:28,402	[INFO]	207	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:49:28,403	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,38 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:31,648	[INFO]	208	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:49:31,649	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:31,650	[INFO]	209	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:49:31,651	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:31,651	[INFO]	210	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:49:31,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:31,653	[INFO]	211	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:49:31,653	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:32,550	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:49:32,551	[INFO]	213	SUCCESS	+13.0	
2020-12-10 05:49:32,552	[DEBUG]	
2020-12-10 05:49:35,745	[INFO]	214	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:49:35,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:49:36,686	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:49:37,404	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:49:37,406	[INFO]	217	SUCCESS	+13.0	
2020-12-10 05:49:37,406	[DEBUG]	
2020-12-10 05:49:38,291	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:49:39,169	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:49:42,267	[INFO]	220	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:49:42,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:49:42,269	[INFO]	221	SUCCESS	+13.0	
2020-12-10 05:49:42,269	[DEBUG]	
2020-12-10 05:49:43,142	[INFO]	222	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:49:46,377	[INFO]	223	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:49:46,378	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 05:49:47,259	[INFO]	224	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:49:47,260	[INFO]	225	SUCCESS	+13.0	
2020-12-10 05:49:47,261	[DEBUG]	
2020-12-10 05:49:48,120	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:49:49,013	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:49:49,734	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:49:50,636	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:49:51,531	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:49:52,421	[INFO]	231	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:49:53,311	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:49:56,544	[INFO]	233	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:49:56,545	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:49:56,546	[INFO]	234	SUCCESS	+13.0	
2020-12-10 05:49:56,546	[DEBUG]	
2020-12-10 05:49:59,785	[INFO]	235	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:49:59,786	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
                  j++;
              }
          }

2020-12-10 05:49:59,787	[INFO]	236	SUCCESS	+13.0	
2020-12-10 05:49:59,787	[DEBUG]	
2020-12-10 05:50:00,690	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:50:00,692	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:50:01,580	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:50:02,459	[INFO]	240	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:50:03,374	[INFO]	241	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:50:06,613	[INFO]	242	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:50:06,614	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 05:50:09,804	[INFO]	243	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:50:09,805	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 05:50:10,716	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:50:11,603	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:50:14,869	[INFO]	246	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:50:14,870	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,36 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 24,39 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  
***************
*** 38,43 ****
--- 41,47 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 05:50:18,130	[INFO]	247	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:50:18,131	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 38,43 ****
--- 41,47 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 05:50:19,025	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:50:19,918	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:50:20,857	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:50:21,770	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:50:25,026	[INFO]	252	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:50:25,027	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:50:25,028	[INFO]	253	SUCCESS	+13.0	
2020-12-10 05:50:25,029	[DEBUG]	
2020-12-10 05:50:28,267	[INFO]	254	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:50:28,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 05:50:28,268	[INFO]	255	SUCCESS	+13.0	
2020-12-10 05:50:28,269	[DEBUG]	
2020-12-10 05:50:29,157	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:50:30,044	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:50:30,981	[INFO]	258	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:50:31,884	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:50:32,807	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:50:33,712	[INFO]	261	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:50:34,623	[INFO]	262	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:50:35,729	[INFO]	263	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:50:37,069	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:50:38,045	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:50:39,321	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:50:39,323	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:50:40,430	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:50:41,560	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:50:42,701	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:50:46,439	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:50:46,440	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:50:47,302	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:50:48,193	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:50:48,194	[INFO]	274	SUCCESS	+13.0	
2020-12-10 05:50:48,195	[DEBUG]	
2020-12-10 05:50:49,072	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:50:52,326	[INFO]	276	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:50:52,327	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:50:52,328	[INFO]	277	SUCCESS	+13.0	
2020-12-10 05:50:52,328	[DEBUG]	
2020-12-10 05:50:53,011	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:50:53,903	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:50:54,811	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:50:55,716	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:50:59,019	[INFO]	282	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:50:59,020	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:51:02,289	[INFO]	283	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:51:02,290	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 42,47 ****
--- 43,51 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:51:05,521	[INFO]	284	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:51:05,522	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 05:51:06,381	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:51:06,382	[INFO]	286	SUCCESS	+13.0	
2020-12-10 05:51:06,383	[DEBUG]	
2020-12-10 05:51:09,651	[INFO]	287	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:51:09,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:51:09,652	[INFO]	288	SUCCESS	+13.0	
2020-12-10 05:51:09,653	[DEBUG]	
2020-12-10 05:51:10,551	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:51:11,473	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:51:12,353	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:51:15,610	[INFO]	292	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:51:15,611	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:51:16,499	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:51:16,502	[INFO]	294	SUCCESS	+13.0	
2020-12-10 05:51:16,503	[DEBUG]	
2020-12-10 05:51:17,245	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:51:18,143	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:51:21,524	[INFO]	297	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:51:21,525	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:51:22,393	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:51:23,285	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:51:23,286	[INFO]	300	SUCCESS	+13.0	
2020-12-10 05:51:23,286	[DEBUG]	
2020-12-10 05:51:24,176	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:51:25,071	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:51:25,931	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:51:26,814	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:51:30,420	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:51:30,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 05:51:31,314	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:51:32,209	[INFO]	307	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:51:33,091	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:51:36,255	[INFO]	309	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:51:36,256	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:51:39,520	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:51:39,521	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:51:39,522	[INFO]	311	SUCCESS	+13.0	
2020-12-10 05:51:39,522	[DEBUG]	
2020-12-10 05:51:40,237	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:51:41,144	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:51:41,145	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:51:42,008	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:51:42,715	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:51:43,619	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:51:44,316	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:51:45,165	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:51:46,047	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:51:46,933	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:51:50,272	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:51:50,273	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 05:51:50,274	[INFO]	323	SUCCESS	+13.0	
2020-12-10 05:51:50,274	[DEBUG]	
2020-12-10 05:51:51,147	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:51:52,060	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:51:52,941	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:51:56,260	[INFO]	327	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:51:56,261	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:51:56,262	[INFO]	328	SUCCESS	+13.0	
2020-12-10 05:51:56,262	[DEBUG]	
2020-12-10 05:51:56,263	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:51:57,152	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:51:58,026	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:52:01,333	[INFO]	332	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:52:01,334	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:52:01,335	[INFO]	333	SUCCESS	+13.0	
2020-12-10 05:52:01,336	[DEBUG]	
2020-12-10 05:52:02,200	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:52:05,525	[INFO]	335	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:52:05,526	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:52:05,526	[INFO]	336	SUCCESS	+13.0	
2020-12-10 05:52:05,527	[DEBUG]	
2020-12-10 05:52:06,417	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:52:07,321	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:52:08,045	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:52:08,907	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:52:09,803	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:52:13,076	[INFO]	342	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:52:13,077	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:52:13,078	[INFO]	343	SUCCESS	+13.0	
2020-12-10 05:52:13,078	[DEBUG]	
2020-12-10 05:52:13,932	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:52:17,210	[INFO]	345	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:52:17,213	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:52:17,215	[INFO]	346	SUCCESS	+13.0	
2020-12-10 05:52:17,216	[DEBUG]	
2020-12-10 05:52:18,089	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:52:18,995	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:52:22,302	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:52:22,303	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 05:52:22,304	[INFO]	350	SUCCESS	+13.0	
2020-12-10 05:52:22,304	[DEBUG]	
2020-12-10 05:52:23,149	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:52:24,053	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:52:24,943	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:52:28,188	[INFO]	354	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 05:52:28,190	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:52:28,191	[INFO]	355	SUCCESS	+13.0	
2020-12-10 05:52:28,192	[DEBUG]	
2020-12-10 05:52:28,927	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:52:29,811	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:52:30,683	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:52:31,628	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:52:32,516	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:52:32,518	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:52:33,385	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:52:34,305	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:52:35,196	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:52:35,922	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:52:36,803	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:52:37,524	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:52:38,197	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:52:39,066	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:52:42,393	[INFO]	370	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:52:42,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:52:42,395	[INFO]	371	SUCCESS	+13.0	
2020-12-10 05:52:42,395	[DEBUG]	
2020-12-10 05:52:43,227	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:52:43,229	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:52:46,567	[INFO]	374	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:52:46,568	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:52:47,416	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:52:47,417	[INFO]	376	SUCCESS	+13.0	
2020-12-10 05:52:47,417	[DEBUG]	
2020-12-10 05:52:48,288	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:52:49,148	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:52:52,514	[INFO]	379	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:52:52,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:52:52,516	[INFO]	380	SUCCESS	+13.0	
2020-12-10 05:52:52,516	[DEBUG]	
2020-12-10 05:52:53,383	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:52:54,321	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:52:55,212	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:52:56,095	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:52:56,981	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:52:56,983	[INFO]	386	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 05:52:56,983	[DEBUG]	
2020-12-10 05:52:56,984	[INFO]	387	SUCCESS	+13.0	
2020-12-10 05:52:56,984	[DEBUG]	
2020-12-10 05:53:00,254	[INFO]	388	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:53:00,256	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 05:53:01,141	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:53:02,045	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:53:05,304	[INFO]	391	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:53:05,305	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,32 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 05:53:05,306	[INFO]	392	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:53:05,307	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 05:53:05,307	[INFO]	393	SUCCESS	+13.0	
2020-12-10 05:53:05,307	[DEBUG]	
2020-12-10 05:53:06,169	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:53:07,072	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:53:07,076	[INFO]	396	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:53:07,077	[DEBUG]	
2020-12-10 05:53:07,991	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:53:07,993	[INFO]	398	SUCCESS	+13.0	
2020-12-10 05:53:07,993	[DEBUG]	
2020-12-10 05:53:08,883	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:53:09,607	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:53:10,507	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:53:11,408	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:53:12,306	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:53:13,029	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:53:13,871	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:53:17,217	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:53:17,219	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:53:18,081	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:53:18,959	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:53:22,282	[INFO]	409	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:53:22,283	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(right.get(j));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,45 ****
--- 42,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:53:22,284	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:53:22,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 05:53:22,285	[INFO]	411	SUCCESS	+13.0	
2020-12-10 05:53:22,286	[DEBUG]	
2020-12-10 05:53:22,984	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:53:23,910	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:53:24,805	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:53:25,701	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:53:26,598	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:53:27,476	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:53:28,401	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:53:29,311	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:53:30,199	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 05:53:31,093	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:53:31,969	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:53:32,882	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:53:33,749	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:53:34,664	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:53:37,905	[INFO]	426	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:53:37,907	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:53:37,909	[INFO]	427	SUCCESS	+13.0	
2020-12-10 05:53:37,910	[DEBUG]	
2020-12-10 05:53:38,809	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:53:39,676	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 05:53:40,615	[INFO]	430	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:53:41,503	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:53:42,410	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:53:43,313	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:53:44,041	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:53:44,920	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:53:45,793	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:53:46,679	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:53:49,926	[INFO]	438	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:53:49,927	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:53:49,927	[INFO]	439	SUCCESS	+13.0	
2020-12-10 05:53:49,928	[DEBUG]	
2020-12-10 05:53:50,840	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:53:51,730	[INFO]	441	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:53:52,441	[INFO]	442	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:53:52,445	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:53:53,338	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:53:54,237	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:53:57,611	[INFO]	446	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:53:57,612	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 05:53:57,613	[INFO]	447	SUCCESS	+13.0	
2020-12-10 05:53:57,613	[DEBUG]	
2020-12-10 05:54:00,871	[INFO]	448	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:54:00,872	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:54:00,872	[INFO]	449	SUCCESS	+13.0	
2020-12-10 05:54:00,873	[DEBUG]	
2020-12-10 05:54:01,720	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:54:02,426	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:54:03,329	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:54:04,214	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:54:04,936	[INFO]	454	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:54:08,152	[INFO]	455	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:54:08,153	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:54:08,829	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:54:12,086	[INFO]	457	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:54:12,087	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:54:12,088	[INFO]	458	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:54:12,089	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:54:12,090	[INFO]	459	SUCCESS	+13.0	
2020-12-10 05:54:12,090	[DEBUG]	
2020-12-10 05:54:12,959	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:54:16,778	[INFO]	461	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:54:16,779	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 05:54:16,780	[INFO]	462	SUCCESS	+13.0	
2020-12-10 05:54:16,780	[DEBUG]	
2020-12-10 05:54:18,194	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:54:21,777	[INFO]	464	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 05:54:21,778	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:54:21,779	[INFO]	465	SUCCESS	+13.0	
2020-12-10 05:54:21,780	[DEBUG]	
2020-12-10 05:54:26,415	[INFO]	466	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:54:26,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:54:27,967	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:54:28,935	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:54:29,924	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:54:29,927	[INFO]	470	SUCCESS	+13.0	
2020-12-10 05:54:29,927	[DEBUG]	
2020-12-10 05:54:30,894	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:54:34,201	[INFO]	472	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:54:34,203	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:54:34,205	[INFO]	473	SUCCESS	+13.0	
2020-12-10 05:54:34,205	[DEBUG]	
2020-12-10 05:54:38,021	[INFO]	474	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:54:38,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:54:38,024	[INFO]	475	SUCCESS	+13.0	
2020-12-10 05:54:38,024	[DEBUG]	
2020-12-10 05:54:38,947	[INFO]	476	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:54:39,823	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:54:43,173	[INFO]	478	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:54:43,173	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  

2020-12-10 05:54:43,174	[INFO]	479	SUCCESS	+13.0	
2020-12-10 05:54:43,174	[DEBUG]	
2020-12-10 05:54:44,031	[INFO]	480	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:54:44,919	[INFO]	481	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:54:45,846	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:54:49,133	[INFO]	483	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '!='})
2020-12-10 05:54:49,134	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) != right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:54:50,014	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:54:50,015	[INFO]	485	SUCCESS	+13.0	
2020-12-10 05:54:50,015	[DEBUG]	
2020-12-10 05:54:50,928	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:54:51,834	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:54:52,726	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:54:56,001	[INFO]	489	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:54:56,002	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:54:56,003	[INFO]	490	SUCCESS	+13.0	
2020-12-10 05:54:56,003	[DEBUG]	
2020-12-10 05:54:59,227	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:54:59,228	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:54:59,229	[INFO]	492	SUCCESS	+13.0	
2020-12-10 05:54:59,229	[DEBUG]	
2020-12-10 05:55:00,126	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:55:00,128	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:55:00,128	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:55:00,129	[INFO]	495	SUCCESS	+13.0	
2020-12-10 05:55:00,129	[DEBUG]	
2020-12-10 05:55:01,044	[INFO]	496	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:55:04,406	[INFO]	497	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:55:04,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:55:04,407	[INFO]	498	SUCCESS	+13.0	
2020-12-10 05:55:04,408	[DEBUG]	
2020-12-10 05:55:07,734	[INFO]	499	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:55:07,735	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 05:55:07,735	[INFO]	500	SUCCESS	+13.0	
2020-12-10 05:55:07,736	[DEBUG]	
2020-12-10 05:55:07,736	[INFO]	==== END ====
2020-12-10 05:55:07,736	[INFO]	Reason: step budget
2020-12-10 05:55:07,736	[INFO]	
2020-12-10 05:55:07,737	[INFO]	========== EPOCH 3 ==========
2020-12-10 05:55:07,737	[INFO]	==== WARMUP ====
2020-12-10 05:55:10,962	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:55:10,962	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:55:14,170	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:55:14,171	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:55:17,453	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 05:55:17,454	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:55:20,679	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 05:55:20,680	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 05:55:20,680	[INFO]	==== START ====
2020-12-10 05:55:21,553	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:55:22,269	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:55:25,609	[INFO]	3	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'})
2020-12-10 05:55:25,610	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) < right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:55:26,514	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:55:26,515	[INFO]	5	SUCCESS	+13.0	
2020-12-10 05:55:26,516	[DEBUG]	
2020-12-10 05:55:27,392	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:55:28,301	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:55:31,518	[INFO]	8	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:55:31,519	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 05:55:32,402	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:55:32,403	[INFO]	10	SUCCESS	+13.0	
2020-12-10 05:55:32,404	[DEBUG]	
2020-12-10 05:55:33,292	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 05:55:34,189	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:55:35,124	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:55:38,586	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:55:38,587	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 05:55:38,588	[INFO]	15	SUCCESS	+13.0	
2020-12-10 05:55:38,588	[DEBUG]	
2020-12-10 05:55:39,460	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:55:40,170	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:55:40,867	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:55:41,751	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 05:55:42,679	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:55:43,620	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:55:44,348	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:55:45,064	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:55:45,916	[INFO]	24	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:55:46,806	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:55:47,716	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:55:48,620	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:55:51,966	[INFO]	28	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:55:51,967	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:55:51,968	[INFO]	29	SUCCESS	+13.0	
2020-12-10 05:55:51,968	[DEBUG]	
2020-12-10 05:55:55,179	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:55:55,180	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 05:55:58,491	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:55:58,492	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:56:01,763	[INFO]	32	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:56:01,764	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,32 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:56:02,637	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:56:03,523	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:56:06,899	[INFO]	35	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:56:06,900	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:56:10,094	[INFO]	36	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:56:10,095	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 05:56:10,096	[INFO]	37	SUCCESS	+13.0	
2020-12-10 05:56:10,096	[DEBUG]	
2020-12-10 05:56:13,370	[INFO]	38	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:56:13,371	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 05:56:13,372	[INFO]	39	SUCCESS	+13.0	
2020-12-10 05:56:13,372	[DEBUG]	
2020-12-10 05:56:14,289	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:56:17,545	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 05:56:17,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,46 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 05:56:18,433	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:56:19,341	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:56:19,342	[INFO]	44	SUCCESS	+13.0	
2020-12-10 05:56:19,343	[DEBUG]	
2020-12-10 05:56:22,601	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:56:22,602	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:56:22,603	[INFO]	46	SUCCESS	+13.0	
2020-12-10 05:56:22,603	[DEBUG]	
2020-12-10 05:56:25,862	[INFO]	47	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:56:25,864	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 05:56:26,762	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:56:26,763	[INFO]	49	SUCCESS	+13.0	
2020-12-10 05:56:26,763	[DEBUG]	
2020-12-10 05:56:30,017	[INFO]	50	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:56:30,018	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:56:30,020	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:56:30,020	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:56:30,916	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:56:30,920	[INFO]	53	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:56:30,921	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 05:56:30,922	[INFO]	54	SUCCESS	+13.0	
2020-12-10 05:56:30,923	[DEBUG]	
2020-12-10 05:56:31,793	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:56:32,725	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:56:33,608	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:56:34,509	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:56:35,389	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 05:56:36,270	[INFO]	60	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 05:56:37,171	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:56:38,075	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:56:39,000	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 05:56:42,274	[INFO]	64	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:56:42,275	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 05:56:42,276	[INFO]	65	SUCCESS	+13.0	
2020-12-10 05:56:42,276	[DEBUG]	
2020-12-10 05:56:43,117	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:56:46,454	[INFO]	67	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:56:46,455	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:56:47,322	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 05:56:47,323	[INFO]	69	SUCCESS	+13.0	
2020-12-10 05:56:47,323	[DEBUG]	
2020-12-10 05:56:48,207	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:56:48,930	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:56:49,837	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 05:56:50,761	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:56:54,042	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:56:54,043	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:56:54,954	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 05:56:54,956	[INFO]	76	SUCCESS	+13.0	
2020-12-10 05:56:54,956	[DEBUG]	
2020-12-10 05:56:58,120	[INFO]	77	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:56:58,121	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:56:59,067	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:56:59,070	[INFO]	79	SUCCESS	+13.0	
2020-12-10 05:56:59,071	[DEBUG]	
2020-12-10 05:57:02,320	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 05:57:02,321	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 05:57:02,321	[INFO]	81	SUCCESS	+13.0	
2020-12-10 05:57:02,322	[DEBUG]	
2020-12-10 05:57:05,590	[INFO]	82	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:57:05,591	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 
                  j++;
              }
          }

2020-12-10 05:57:08,756	[INFO]	83	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:57:08,757	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,32 ****
          int i = 0;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 21,34 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
!                 
                  j++;
              }
          }

2020-12-10 05:57:12,113	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:57:12,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:57:12,115	[INFO]	85	SUCCESS	+13.0	
2020-12-10 05:57:12,115	[DEBUG]	
2020-12-10 05:57:12,949	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:57:13,804	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:57:14,733	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:57:15,601	[INFO]	89	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 05:57:18,950	[INFO]	90	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:57:18,950	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 05:57:18,951	[INFO]	91	SUCCESS	+13.0	
2020-12-10 05:57:18,951	[DEBUG]	
2020-12-10 05:57:22,161	[INFO]	92	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 05:57:22,162	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 05:57:23,099	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:57:23,101	[INFO]	94	SUCCESS	+13.0	
2020-12-10 05:57:23,102	[DEBUG]	
2020-12-10 05:57:24,045	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:57:27,334	[INFO]	96	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:57:27,335	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:57:30,645	[INFO]	97	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 05:57:30,646	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:57:30,647	[INFO]	98	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:57:30,648	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 05:57:30,648	[INFO]	99	SUCCESS	+13.0	
2020-12-10 05:57:30,649	[DEBUG]	
2020-12-10 05:57:31,549	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:57:32,452	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:57:33,427	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:57:34,323	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 05:57:37,541	[INFO]	104	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 05:57:37,543	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:57:37,543	[INFO]	105	SUCCESS	+13.0	
2020-12-10 05:57:37,544	[DEBUG]	
2020-12-10 05:57:38,405	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:57:39,305	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 05:57:42,588	[INFO]	108	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 05:57:42,589	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 05:57:42,590	[INFO]	109	SUCCESS	+13.0	
2020-12-10 05:57:42,590	[DEBUG]	
2020-12-10 05:57:45,831	[INFO]	110	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:57:45,832	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:57:46,718	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 05:57:46,719	[INFO]	112	SUCCESS	+13.0	
2020-12-10 05:57:46,720	[DEBUG]	
2020-12-10 05:57:47,607	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:57:48,515	[INFO]	114	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:57:49,439	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:57:49,443	[INFO]	116	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:57:49,444	[DEBUG]	
2020-12-10 05:57:49,445	[INFO]	117	SUCCESS	+13.0	
2020-12-10 05:57:49,446	[DEBUG]	
2020-12-10 05:57:52,739	[INFO]	118	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:57:52,742	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 05:57:52,744	[INFO]	119	SUCCESS	+13.0	
2020-12-10 05:57:52,744	[DEBUG]	
2020-12-10 05:57:53,615	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:57:54,490	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:57:55,376	[INFO]	122	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:57:56,277	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 05:57:57,172	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:57:58,100	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 05:57:59,006	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 05:57:59,897	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:58:00,791	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 05:58:01,700	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:58:04,981	[INFO]	130	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 05:58:04,982	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:58:04,983	[INFO]	131	SUCCESS	+13.0	
2020-12-10 05:58:04,983	[DEBUG]	
2020-12-10 05:58:05,873	[INFO]	132	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 05:58:06,789	[INFO]	133	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:58:07,675	[INFO]	134	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:58:08,560	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:58:09,474	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:58:10,382	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:58:11,127	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:58:14,418	[INFO]	139	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:58:14,419	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:58:14,419	[INFO]	140	SUCCESS	+13.0	
2020-12-10 05:58:14,420	[DEBUG]	
2020-12-10 05:58:15,291	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:58:18,778	[INFO]	142	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:58:18,779	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:58:18,780	[INFO]	143	SUCCESS	+13.0	
2020-12-10 05:58:18,780	[DEBUG]	
2020-12-10 05:58:19,673	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 05:58:20,602	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:58:24,076	[INFO]	146	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 05:58:24,078	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 05:58:24,079	[INFO]	147	SUCCESS	+13.0	
2020-12-10 05:58:24,079	[DEBUG]	
2020-12-10 05:58:24,968	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 05:58:28,464	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:58:28,465	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:58:28,466	[INFO]	150	SUCCESS	+13.0	
2020-12-10 05:58:28,466	[DEBUG]	
2020-12-10 05:58:29,353	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 05:58:30,260	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 05:58:31,155	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:58:34,449	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:58:34,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 05:58:37,733	[INFO]	155	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:58:37,734	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,29 ****
--- 18,31 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:58:41,197	[INFO]	156	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 05:58:41,198	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:58:41,199	[INFO]	157	SUCCESS	+13.0	
2020-12-10 05:58:41,199	[DEBUG]	
2020-12-10 05:58:44,528	[INFO]	158	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 05:58:44,529	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 05:58:45,392	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:58:45,393	[INFO]	160	SUCCESS	+13.0	
2020-12-10 05:58:45,393	[DEBUG]	
2020-12-10 05:58:46,318	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 05:58:46,320	[INFO]	162	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:58:49,740	[INFO]	163	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:58:49,741	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 05:58:50,622	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:58:50,623	[INFO]	165	SUCCESS	+13.0	
2020-12-10 05:58:50,623	[DEBUG]	
2020-12-10 05:58:53,832	[INFO]	166	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:58:53,833	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:58:53,834	[INFO]	167	SUCCESS	+13.0	
2020-12-10 05:58:53,834	[DEBUG]	
2020-12-10 05:58:57,087	[INFO]	168	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 05:58:57,088	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:58:57,089	[INFO]	169	SUCCESS	+13.0	
2020-12-10 05:58:57,089	[DEBUG]	
2020-12-10 05:58:57,090	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 05:58:57,965	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 05:59:01,305	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 05:59:01,306	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 05:59:02,186	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 05:59:02,187	[INFO]	174	SUCCESS	+13.0	
2020-12-10 05:59:02,188	[DEBUG]	
2020-12-10 05:59:05,434	[INFO]	175	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:59:05,435	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:08,708	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 05:59:08,709	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:08,710	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 05:59:08,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:09,573	[INFO]	178	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:59:10,292	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:59:13,513	[INFO]	180	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:59:13,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:16,709	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:59:16,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:16,711	[INFO]	182	SUCCESS	+13.0	
2020-12-10 05:59:16,711	[DEBUG]	
2020-12-10 05:59:17,586	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 05:59:18,484	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:59:21,802	[INFO]	185	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 05:59:21,803	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 05:59:21,804	[INFO]	186	SUCCESS	+13.0	
2020-12-10 05:59:21,804	[DEBUG]	
2020-12-10 05:59:22,691	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:59:23,572	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 05:59:24,453	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 05:59:25,336	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:59:25,338	[INFO]	191	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:59:25,339	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 05:59:25,339	[INFO]	192	SUCCESS	+13.0	
2020-12-10 05:59:25,340	[DEBUG]	
2020-12-10 05:59:26,221	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 05:59:29,517	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:59:29,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:59:32,733	[INFO]	195	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 05:59:32,734	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:59:33,613	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 05:59:33,615	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 05:59:33,615	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 05:59:34,508	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:59:35,288	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:59:35,289	[INFO]	200	SUCCESS	+13.0	
2020-12-10 05:59:35,290	[DEBUG]	
2020-12-10 05:59:36,158	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 05:59:37,044	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 05:59:37,936	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 05:59:38,831	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 05:59:39,723	[INFO]	205	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 05:59:40,599	[INFO]	206	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:59:41,513	[INFO]	207	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 05:59:44,738	[INFO]	208	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 05:59:44,739	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:59:45,633	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 05:59:48,881	[INFO]	210	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:59:48,882	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:59:52,129	[INFO]	211	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 05:59:52,130	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,29 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:59:52,131	[INFO]	212	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:59:52,132	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 05:59:53,020	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 05:59:53,874	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 05:59:57,149	[INFO]	215	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 05:59:57,150	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 05:59:58,052	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 05:59:58,924	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 05:59:59,803	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 05:59:59,804	[INFO]	219	SUCCESS	+13.0	
2020-12-10 05:59:59,805	[DEBUG]	
2020-12-10 06:00:00,700	[INFO]	220	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:00:01,409	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:00:02,286	[INFO]	222	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:00:03,005	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:00:04,076	[INFO]	224	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:00:04,990	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:00:08,129	[INFO]	226	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:00:08,130	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:00:08,131	[INFO]	227	SUCCESS	+13.0	
2020-12-10 06:00:08,131	[DEBUG]	
2020-12-10 06:00:11,422	[INFO]	228	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:00:11,423	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:00:11,424	[INFO]	229	SUCCESS	+13.0	
2020-12-10 06:00:11,424	[DEBUG]	
2020-12-10 06:00:12,287	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:00:15,575	[INFO]	231	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:00:15,576	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 06:00:18,808	[INFO]	232	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:00:18,808	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,36 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 left = mergesort(left);
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 06:00:19,702	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:00:22,958	[INFO]	234	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:00:22,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 06:00:23,838	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:00:23,840	[INFO]	236	SUCCESS	+13.0	
2020-12-10 06:00:23,840	[DEBUG]	
2020-12-10 06:00:24,730	[INFO]	237	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:00:25,624	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:00:26,506	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:00:29,840	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:00:29,841	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:00:29,842	[INFO]	241	SUCCESS	+13.0	
2020-12-10 06:00:29,843	[DEBUG]	
2020-12-10 06:00:30,701	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:00:31,553	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:00:32,434	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:00:33,362	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:00:34,274	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:00:35,272	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:00:36,476	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:00:37,733	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:00:38,856	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:00:39,793	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:00:43,063	[INFO]	252	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:00:43,064	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:00:43,065	[INFO]	253	SUCCESS	+13.0	
2020-12-10 06:00:43,065	[DEBUG]	
2020-12-10 06:00:43,955	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:00:44,862	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:00:45,574	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:00:46,261	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:00:46,966	[INFO]	258	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:00:47,834	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:00:51,074	[INFO]	260	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:00:51,075	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:00:51,075	[INFO]	261	SUCCESS	+13.0	
2020-12-10 06:00:51,076	[DEBUG]	
2020-12-10 06:00:51,972	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:00:51,975	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:00:55,236	[INFO]	264	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:00:55,238	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:00:58,430	[INFO]	265	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:00:58,431	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:01:01,644	[INFO]	266	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:01:01,645	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:01:01,646	[INFO]	267	SUCCESS	+13.0	
2020-12-10 06:01:01,646	[DEBUG]	
2020-12-10 06:01:04,921	[INFO]	268	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:01:04,922	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:01:08,162	[INFO]	269	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:01:08,163	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:01:11,388	[INFO]	270	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:01:11,389	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:01:11,391	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:01:11,392	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:01:11,393	[INFO]	272	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:01:11,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:01:11,395	[INFO]	273	SUCCESS	+13.0	
2020-12-10 06:01:11,396	[DEBUG]	
2020-12-10 06:01:12,287	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:01:13,178	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:01:13,878	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:01:14,746	[INFO]	277	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:01:15,650	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:01:18,994	[INFO]	279	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:01:18,995	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 06:01:18,995	[INFO]	280	SUCCESS	+13.0	
2020-12-10 06:01:18,996	[DEBUG]	
2020-12-10 06:01:19,862	[INFO]	281	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:01:23,211	[INFO]	282	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:01:23,212	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:01:23,213	[INFO]	283	SUCCESS	+13.0	
2020-12-10 06:01:23,213	[DEBUG]	
2020-12-10 06:01:24,099	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:01:27,289	[INFO]	285	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:01:27,290	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:01:28,147	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:01:31,333	[INFO]	287	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:01:31,334	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:01:32,182	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:01:35,589	[INFO]	289	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:01:35,592	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:01:36,443	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:01:36,444	[INFO]	291	SUCCESS	+13.0	
2020-12-10 06:01:36,445	[DEBUG]	
2020-12-10 06:01:37,351	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:01:38,265	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:01:41,458	[INFO]	294	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:01:41,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 06:01:41,459	[INFO]	295	SUCCESS	+13.0	
2020-12-10 06:01:41,460	[DEBUG]	
2020-12-10 06:01:44,658	[INFO]	296	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:01:44,660	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:01:44,661	[INFO]	297	SUCCESS	+13.0	
2020-12-10 06:01:44,662	[DEBUG]	
2020-12-10 06:01:47,868	[INFO]	298	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:01:47,869	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:01:48,713	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:01:48,714	[INFO]	300	SUCCESS	+13.0	
2020-12-10 06:01:48,714	[DEBUG]	
2020-12-10 06:01:49,632	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:01:52,895	[INFO]	302	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:01:52,896	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:01:53,772	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:01:54,703	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:01:57,969	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:01:57,970	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 46,51 ****
--- 47,56 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:01:58,798	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:01:59,705	[INFO]	307	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:02:00,588	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:02:03,776	[INFO]	309	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:02:03,776	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:02:03,777	[INFO]	310	SUCCESS	+13.0	
2020-12-10 06:02:03,778	[DEBUG]	
2020-12-10 06:02:04,639	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:02:07,892	[INFO]	312	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:02:07,894	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:02:08,615	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:02:08,617	[INFO]	314	SUCCESS	+13.0	
2020-12-10 06:02:08,618	[DEBUG]	
2020-12-10 06:02:09,495	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:02:10,394	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:02:11,325	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:02:14,620	[INFO]	318	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:02:14,621	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 06:02:14,621	[INFO]	319	SUCCESS	+13.0	
2020-12-10 06:02:14,622	[DEBUG]	
2020-12-10 06:02:15,462	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:02:16,341	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:02:17,233	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:02:18,100	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:02:18,983	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:02:19,885	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:02:23,197	[INFO]	326	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:02:23,198	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:02:24,071	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:02:24,961	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:02:24,962	[INFO]	329	SUCCESS	+13.0	
2020-12-10 06:02:24,962	[DEBUG]	
2020-12-10 06:02:25,858	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:02:26,753	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:02:27,492	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:02:28,418	[INFO]	333	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:02:29,298	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:02:30,208	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:02:31,110	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:02:32,007	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:02:35,217	[INFO]	338	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:02:35,218	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:02:36,125	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:02:39,489	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:02:39,490	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 45,51 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:02:42,690	[INFO]	341	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:02:42,691	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:02:43,603	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:02:43,605	[INFO]	343	SUCCESS	+13.0	
2020-12-10 06:02:43,605	[DEBUG]	
2020-12-10 06:02:46,919	[INFO]	344	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:02:46,920	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:02:47,799	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:02:48,704	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:02:52,087	[INFO]	347	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:02:52,088	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:02:52,945	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:02:53,804	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:02:57,113	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:02:57,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:03:00,326	[INFO]	351	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:03:00,327	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:03:03,631	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:03:03,632	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,46 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 51,57 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:03:06,851	[INFO]	353	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:03:06,852	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 50,56 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:03:10,065	[INFO]	354	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:03:10,066	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:03:10,943	[INFO]	355	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:03:14,185	[INFO]	356	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:03:14,186	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,46 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:03:17,431	[INFO]	357	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:03:17,433	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:03:17,435	[INFO]	358	SUCCESS	+13.0	
2020-12-10 06:03:17,435	[DEBUG]	
2020-12-10 06:03:18,311	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:03:19,210	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:03:20,122	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:03:20,991	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:03:24,258	[INFO]	363	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:03:24,260	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:03:27,499	[INFO]	364	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:03:27,500	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,33 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 22,37 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:03:30,709	[INFO]	365	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:03:30,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:03:31,633	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:03:32,567	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:03:33,480	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:03:34,490	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:03:35,429	[INFO]	370	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:03:35,432	[INFO]	371	SUCCESS	+13.0	
2020-12-10 06:03:35,433	[DEBUG]	
2020-12-10 06:03:36,347	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:03:37,231	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:03:38,144	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:03:39,025	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:03:39,906	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:03:40,794	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:03:41,672	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:03:42,590	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:03:45,814	[INFO]	380	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:03:45,815	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:03:45,815	[INFO]	381	SUCCESS	+13.0	
2020-12-10 06:03:45,816	[DEBUG]	
2020-12-10 06:03:49,099	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:03:49,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:03:52,419	[INFO]	383	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 06:03:52,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 19,28 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:03:53,284	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:03:53,286	[INFO]	385	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:03:53,286	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:03:53,287	[INFO]	386	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:03:53,288	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:03:53,289	[INFO]	387	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:03:53,290	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:03:54,179	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:03:57,463	[INFO]	389	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:03:57,464	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,29 ****
--- 19,31 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:04:00,715	[INFO]	390	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:04:00,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:04:00,716	[INFO]	391	SUCCESS	+13.0	
2020-12-10 06:04:00,717	[DEBUG]	
2020-12-10 06:04:03,952	[INFO]	392	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:04:03,953	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:04:04,762	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:04:05,624	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:04:06,518	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:04:06,519	[INFO]	396	SUCCESS	+13.0	
2020-12-10 06:04:06,519	[DEBUG]	
2020-12-10 06:04:07,440	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:04:08,331	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:04:11,529	[INFO]	399	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:04:11,530	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:04:11,532	[INFO]	400	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:04:11,532	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:04:12,423	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:04:12,426	[INFO]	402	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:04:12,427	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:04:12,428	[INFO]	403	SUCCESS	+13.0	
2020-12-10 06:04:12,429	[DEBUG]	
2020-12-10 06:04:15,631	[INFO]	404	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:04:15,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 06:04:16,515	[INFO]	405	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:04:19,776	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:04:19,777	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:04:22,965	[INFO]	407	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:04:22,966	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:04:23,880	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:04:24,802	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:04:25,519	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:04:25,520	[INFO]	411	SUCCESS	+13.0	
2020-12-10 06:04:25,520	[DEBUG]	
2020-12-10 06:04:26,246	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:04:26,944	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:04:30,199	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:04:30,200	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:04:30,201	[INFO]	415	SUCCESS	+13.0	
2020-12-10 06:04:30,201	[DEBUG]	
2020-12-10 06:04:31,056	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:04:31,966	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:04:32,897	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:04:33,617	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:04:34,332	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:04:35,184	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:04:36,074	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:04:36,945	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:04:40,224	[INFO]	424	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:04:40,225	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:04:41,107	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:04:41,109	[INFO]	426	SUCCESS	+13.0	
2020-12-10 06:04:41,110	[DEBUG]	
2020-12-10 06:04:41,830	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:04:42,702	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:04:46,017	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:04:46,018	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 06:04:46,019	[INFO]	430	SUCCESS	+13.0	
2020-12-10 06:04:46,019	[DEBUG]	
2020-12-10 06:04:46,861	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:04:47,721	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:04:48,631	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:04:49,364	[INFO]	434	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:04:50,258	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:04:53,554	[INFO]	436	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:04:53,554	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:04:54,416	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:04:54,417	[INFO]	438	SUCCESS	+13.0	
2020-12-10 06:04:54,417	[DEBUG]	
2020-12-10 06:04:57,679	[INFO]	439	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:04:57,680	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 06:04:58,375	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:05:01,559	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:05:01,560	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,31 ****
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 06:05:04,804	[INFO]	442	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:05:04,806	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:05:05,676	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:05:09,077	[INFO]	444	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:05:09,079	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,39 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:05:09,961	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:05:10,847	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:05:11,773	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:05:11,775	[INFO]	448	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:05:11,775	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:05:12,692	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:05:12,693	[INFO]	450	SUCCESS	+13.0	
2020-12-10 06:05:12,694	[DEBUG]	
2020-12-10 06:05:15,929	[INFO]	451	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:05:15,931	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:05:16,796	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:05:17,665	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:05:20,900	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:05:20,903	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,39 ----
                  j++;
              }
          }
!         if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
          return result;
      }
  
***************
*** 42,47 ****
--- 45,51 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:05:24,109	[INFO]	455	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:05:24,110	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,39 ----
                  j++;
              }
          }
!         if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
          return result;
      }
  

2020-12-10 06:05:24,112	[INFO]	456	SUCCESS	+13.0	
2020-12-10 06:05:24,112	[DEBUG]	
2020-12-10 06:05:24,995	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:05:25,851	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:05:26,765	[INFO]	459	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:05:29,970	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:05:29,971	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:05:30,872	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:05:30,873	[INFO]	462	SUCCESS	+13.0	
2020-12-10 06:05:30,873	[DEBUG]	
2020-12-10 06:05:31,802	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:05:32,698	[INFO]	464	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:05:33,589	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:05:37,643	[INFO]	466	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:05:37,646	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:05:37,648	[INFO]	467	SUCCESS	+13.0	
2020-12-10 06:05:37,649	[DEBUG]	
2020-12-10 06:05:39,080	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:05:40,387	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:05:41,896	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:05:43,352	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:05:44,640	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:05:49,135	[INFO]	473	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:05:49,137	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:05:49,139	[INFO]	474	SUCCESS	+13.0	
2020-12-10 06:05:49,140	[DEBUG]	
2020-12-10 06:05:50,275	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:05:51,456	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:05:52,668	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:05:53,429	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:05:54,421	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:05:58,156	[INFO]	480	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:05:58,157	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:05:58,158	[INFO]	481	SUCCESS	+13.0	
2020-12-10 06:05:58,158	[DEBUG]	
2020-12-10 06:05:59,053	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:05:59,939	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:06:00,829	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:06:01,700	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:06:02,578	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:06:03,481	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:06:04,355	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:06:05,269	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:06:06,140	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:06:07,289	[INFO]	491	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:06:08,191	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:06:08,193	[INFO]	493	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:06:08,193	[DEBUG]	
2020-12-10 06:06:08,194	[INFO]	494	SUCCESS	+13.0	
2020-12-10 06:06:08,195	[DEBUG]	
2020-12-10 06:06:09,092	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:06:12,337	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:06:12,338	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:06:13,221	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:06:13,224	[INFO]	498	SUCCESS	+13.0	
2020-12-10 06:06:13,225	[DEBUG]	
2020-12-10 06:06:13,940	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:06:14,824	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:06:14,824	[INFO]	==== END ====
2020-12-10 06:06:14,824	[INFO]	Reason: step budget
2020-12-10 06:06:14,825	[INFO]	
2020-12-10 06:06:14,825	[INFO]	========== EPOCH 4 ==========
2020-12-10 06:06:14,825	[INFO]	==== WARMUP ====
2020-12-10 06:06:18,104	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:06:18,104	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:06:21,452	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:06:21,452	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:06:24,619	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:06:24,619	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:06:27,857	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 06:06:27,857	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:06:27,857	[INFO]	==== START ====
2020-12-10 06:06:28,757	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:06:32,041	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:06:32,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:06:32,043	[INFO]	3	SUCCESS	+13.0	
2020-12-10 06:06:32,043	[DEBUG]	
2020-12-10 06:06:32,918	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:06:36,206	[INFO]	5	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:06:36,207	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 06:06:36,208	[INFO]	6	SUCCESS	+13.0	
2020-12-10 06:06:36,208	[DEBUG]	
2020-12-10 06:06:37,077	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:06:38,005	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:06:38,902	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:06:39,823	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:06:40,682	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:06:41,574	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:06:44,853	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:06:44,854	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:06:44,855	[INFO]	14	SUCCESS	+13.0	
2020-12-10 06:06:44,855	[DEBUG]	
2020-12-10 06:06:45,737	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:06:46,646	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:06:49,982	[INFO]	17	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:06:49,982	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:06:50,872	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:06:50,873	[INFO]	19	SUCCESS	+13.0	
2020-12-10 06:06:50,874	[DEBUG]	
2020-12-10 06:06:54,184	[INFO]	20	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:06:54,185	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:06:57,414	[INFO]	21	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:06:57,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,45 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:06:58,311	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:06:59,209	[INFO]	23	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:07:02,474	[INFO]	24	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:07:02,475	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,35 ****
--- 26,49 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:03,215	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:07:03,221	[INFO]	26	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:07:03,223	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,35 ****
--- 26,49 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:06,476	[INFO]	27	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:07:06,478	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,35 ****
--- 25,50 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:06,479	[INFO]	28	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:07:06,480	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,35 ****
--- 25,50 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:09,797	[INFO]	29	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:07:09,799	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,35 ****
--- 25,46 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:09,800	[INFO]	30	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:07:09,801	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,45 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:07:09,802	[INFO]	31	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:07:09,803	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:07:09,804	[INFO]	32	SUCCESS	+13.0	
2020-12-10 06:07:09,804	[DEBUG]	
2020-12-10 06:07:10,707	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:07:11,622	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:07:15,050	[INFO]	35	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:07:15,051	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:07:15,051	[INFO]	36	SUCCESS	+13.0	
2020-12-10 06:07:15,052	[DEBUG]	
2020-12-10 06:07:18,242	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:07:18,243	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:07:19,113	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:07:19,115	[INFO]	39	SUCCESS	+13.0	
2020-12-10 06:07:19,115	[DEBUG]	
2020-12-10 06:07:20,002	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:07:23,205	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:07:23,206	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:07:23,207	[INFO]	42	SUCCESS	+13.0	
2020-12-10 06:07:23,208	[DEBUG]	
2020-12-10 06:07:24,078	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:07:24,952	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:07:25,830	[INFO]	45	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:07:26,724	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:07:27,609	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:07:30,924	[INFO]	48	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:07:30,925	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:07:30,925	[INFO]	49	SUCCESS	+13.0	
2020-12-10 06:07:30,926	[DEBUG]	
2020-12-10 06:07:34,214	[INFO]	50	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:07:34,215	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 06:07:34,216	[INFO]	51	SUCCESS	+13.0	
2020-12-10 06:07:34,216	[DEBUG]	
2020-12-10 06:07:37,511	[INFO]	52	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:07:37,513	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:37,515	[INFO]	53	SUCCESS	+13.0	
2020-12-10 06:07:37,516	[DEBUG]	
2020-12-10 06:07:37,519	[INFO]	54	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:07:38,367	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:07:41,579	[INFO]	56	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:07:41,580	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:42,432	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:07:45,660	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:07:45,661	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 42,47 ****
--- 51,57 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:46,555	[INFO]	59	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:07:46,560	[INFO]	60	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:07:47,488	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:07:47,489	[INFO]	62	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:07:47,490	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:48,406	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:07:48,408	[INFO]	64	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:07:48,408	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:49,331	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:07:50,202	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:07:50,203	[INFO]	67	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:07:50,204	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:07:50,204	[INFO]	68	SUCCESS	+13.0	
2020-12-10 06:07:50,204	[DEBUG]	
2020-12-10 06:07:51,092	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:07:51,986	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:07:52,896	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:07:56,151	[INFO]	72	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:07:56,152	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:07:57,026	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:07:57,027	[INFO]	74	SUCCESS	+13.0	
2020-12-10 06:07:57,027	[DEBUG]	
2020-12-10 06:08:00,237	[INFO]	75	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:08:00,238	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:08:00,239	[INFO]	76	SUCCESS	+13.0	
2020-12-10 06:08:00,239	[DEBUG]	
2020-12-10 06:08:03,428	[INFO]	77	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:08:03,429	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:08:03,430	[INFO]	78	SUCCESS	+13.0	
2020-12-10 06:08:03,430	[DEBUG]	
2020-12-10 06:08:04,316	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:08:05,217	[INFO]	80	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:08:08,471	[INFO]	81	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:08:08,471	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 06:08:09,336	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:08:12,656	[INFO]	83	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:08:12,657	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,37 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:08:15,918	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:08:15,918	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:08:15,919	[INFO]	85	SUCCESS	+13.0	
2020-12-10 06:08:15,920	[DEBUG]	
2020-12-10 06:08:16,591	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:08:19,720	[INFO]	87	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:08:19,721	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:08:20,607	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:08:20,610	[INFO]	89	SUCCESS	+13.0	
2020-12-10 06:08:20,611	[DEBUG]	
2020-12-10 06:08:23,922	[INFO]	90	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='})
2020-12-10 06:08:23,923	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:08:23,923	[INFO]	91	SUCCESS	+13.0	
2020-12-10 06:08:23,924	[DEBUG]	
2020-12-10 06:08:24,787	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:08:25,663	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:08:26,557	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:08:29,866	[INFO]	95	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:08:29,868	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:08:29,869	[INFO]	96	SUCCESS	+13.0	
2020-12-10 06:08:29,870	[DEBUG]	
2020-12-10 06:08:33,344	[INFO]	97	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:08:33,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 06:08:34,167	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:08:34,168	[INFO]	99	SUCCESS	+13.0	
2020-12-10 06:08:34,169	[DEBUG]	
2020-12-10 06:08:35,038	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:08:35,935	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:08:36,819	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:08:37,707	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:08:40,935	[INFO]	104	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:08:40,936	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:08:41,794	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:08:42,722	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:08:42,725	[INFO]	107	SUCCESS	+13.0	
2020-12-10 06:08:42,726	[DEBUG]	
2020-12-10 06:08:45,998	[INFO]	108	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:08:45,999	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:08:49,279	[INFO]	109	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:08:49,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:08:52,588	[INFO]	110	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:08:52,589	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:08:52,591	[INFO]	111	SUCCESS	+13.0	
2020-12-10 06:08:52,591	[DEBUG]	
2020-12-10 06:08:55,871	[INFO]	112	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:08:55,872	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:08:55,873	[INFO]	113	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:08:55,874	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:08:59,117	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:08:59,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:08:59,119	[INFO]	115	SUCCESS	+13.0	
2020-12-10 06:08:59,119	[DEBUG]	
2020-12-10 06:09:02,341	[INFO]	116	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:09:02,342	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:09:05,612	[INFO]	117	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:09:05,613	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,37 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:09:06,528	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:09:06,532	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:09:06,533	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:09:06,535	[INFO]	120	SUCCESS	+13.0	
2020-12-10 06:09:06,535	[DEBUG]	
2020-12-10 06:09:09,797	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:09:09,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:09:09,799	[INFO]	122	SUCCESS	+13.0	
2020-12-10 06:09:09,799	[DEBUG]	
2020-12-10 06:09:10,693	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:09:11,587	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:09:12,469	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:09:15,637	[INFO]	126	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 06:09:15,638	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:09:18,894	[INFO]	127	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:09:18,895	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,41 ****
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 30,43 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:09:19,779	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:09:19,780	[INFO]	129	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 06:09:19,781	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:09:19,781	[INFO]	130	SUCCESS	+13.0	
2020-12-10 06:09:19,782	[DEBUG]	
2020-12-10 06:09:23,038	[INFO]	131	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:09:23,038	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:09:23,918	[INFO]	132	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:09:23,919	[INFO]	133	SUCCESS	+13.0	
2020-12-10 06:09:23,919	[DEBUG]	
2020-12-10 06:09:27,184	[INFO]	134	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:09:27,185	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:09:28,069	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:09:28,072	[INFO]	136	SUCCESS	+13.0	
2020-12-10 06:09:28,073	[DEBUG]	
2020-12-10 06:09:31,360	[INFO]	137	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:09:31,361	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:09:32,237	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:09:32,238	[INFO]	139	SUCCESS	+13.0	
2020-12-10 06:09:32,239	[DEBUG]	
2020-12-10 06:09:32,952	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:09:33,824	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:09:37,177	[INFO]	142	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:09:37,178	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:09:37,179	[INFO]	143	SUCCESS	+13.0	
2020-12-10 06:09:37,179	[DEBUG]	
2020-12-10 06:09:40,426	[INFO]	144	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:09:40,427	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 06:09:40,427	[INFO]	145	SUCCESS	+13.0	
2020-12-10 06:09:40,428	[DEBUG]	
2020-12-10 06:09:41,318	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:09:42,249	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:09:43,117	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:09:46,441	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:09:46,443	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:09:47,304	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:09:48,183	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:09:48,184	[INFO]	152	SUCCESS	+13.0	
2020-12-10 06:09:48,184	[DEBUG]	
2020-12-10 06:09:49,066	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:09:49,985	[INFO]	154	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:09:50,721	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:09:51,607	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:09:54,815	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:09:54,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 06:09:54,817	[INFO]	158	SUCCESS	+13.0	
2020-12-10 06:09:54,817	[DEBUG]	
2020-12-10 06:09:55,679	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:09:58,906	[INFO]	160	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 06:09:58,907	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:09:58,908	[INFO]	161	SUCCESS	+13.0	
2020-12-10 06:09:58,908	[DEBUG]	
2020-12-10 06:09:59,610	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:10:02,844	[INFO]	163	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:10:02,845	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:10:06,237	[INFO]	164	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:10:06,238	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:10:06,923	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:10:10,138	[INFO]	166	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:10:10,139	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:10:11,007	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:10:11,008	[INFO]	168	SUCCESS	+13.0	
2020-12-10 06:10:11,008	[DEBUG]	
2020-12-10 06:10:14,379	[INFO]	169	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:10:14,380	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:10:17,576	[INFO]	170	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:10:17,577	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 51,57 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:10:18,429	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:10:18,430	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:10:18,431	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:10:19,137	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:10:20,039	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:10:20,040	[INFO]	175	SUCCESS	+13.0	
2020-12-10 06:10:20,040	[DEBUG]	
2020-12-10 06:10:23,338	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:10:23,339	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:10:23,340	[INFO]	177	SUCCESS	+13.0	
2020-12-10 06:10:23,340	[DEBUG]	
2020-12-10 06:10:24,223	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:10:24,935	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:10:25,804	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:10:26,681	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:10:27,586	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:10:30,914	[INFO]	183	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:10:30,915	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:10:30,916	[INFO]	184	SUCCESS	+13.0	
2020-12-10 06:10:30,916	[DEBUG]	
2020-12-10 06:10:31,795	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:10:35,115	[INFO]	186	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:10:35,116	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:10:36,053	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:10:36,055	[INFO]	188	SUCCESS	+13.0	
2020-12-10 06:10:36,055	[DEBUG]	
2020-12-10 06:10:36,944	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:10:37,677	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:10:40,983	[INFO]	191	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:10:40,984	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:10:40,984	[INFO]	192	SUCCESS	+13.0	
2020-12-10 06:10:40,985	[DEBUG]	
2020-12-10 06:10:41,820	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:10:45,087	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:10:45,088	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:10:45,971	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:10:45,972	[INFO]	196	SUCCESS	+13.0	
2020-12-10 06:10:45,972	[DEBUG]	
2020-12-10 06:10:49,327	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:10:49,328	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 06:10:52,682	[INFO]	198	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:10:52,683	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 06:10:52,684	[INFO]	199	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:10:52,685	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 06:10:55,977	[INFO]	200	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:10:55,978	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:10:56,860	[INFO]	201	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:10:57,592	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:11:00,847	[INFO]	203	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:11:00,848	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:11:01,781	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:11:02,675	[INFO]	205	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:11:03,559	[INFO]	206	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:11:06,774	[INFO]	207	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:11:06,775	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 45,50 ****
--- 50,56 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 06:11:10,041	[INFO]	208	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:11:10,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 06:11:10,935	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:11:10,936	[INFO]	210	SUCCESS	+13.0	
2020-12-10 06:11:10,936	[DEBUG]	
2020-12-10 06:11:11,833	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:11:12,762	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:11:13,613	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:11:14,483	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:11:17,792	[INFO]	215	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:11:17,793	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:11:17,795	[INFO]	216	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:11:17,795	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:11:21,089	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:11:21,090	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:11:21,952	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:11:22,847	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:11:22,848	[INFO]	220	SUCCESS	+13.0	
2020-12-10 06:11:22,849	[DEBUG]	
2020-12-10 06:11:23,757	[INFO]	221	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:11:27,071	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:11:27,072	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:11:27,929	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:11:27,931	[INFO]	224	SUCCESS	+13.0	
2020-12-10 06:11:27,931	[DEBUG]	
2020-12-10 06:11:31,202	[INFO]	225	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:11:31,205	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 06:11:31,207	[INFO]	226	SUCCESS	+13.0	
2020-12-10 06:11:31,208	[DEBUG]	
2020-12-10 06:11:34,418	[INFO]	227	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 06:11:34,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:11:34,421	[INFO]	228	SUCCESS	+13.0	
2020-12-10 06:11:34,422	[DEBUG]	
2020-12-10 06:11:35,278	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:11:35,279	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:11:36,255	[INFO]	231	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:11:37,183	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:11:38,063	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:11:38,966	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:11:39,849	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:11:40,737	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:11:44,054	[INFO]	237	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 06:11:44,055	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:11:47,238	[INFO]	238	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:11:47,239	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:11:48,126	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:11:49,023	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:11:49,024	[INFO]	241	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 06:11:49,025	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:11:49,929	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:11:50,853	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:11:50,854	[INFO]	244	SUCCESS	+13.0	
2020-12-10 06:11:50,854	[DEBUG]	
2020-12-10 06:11:51,768	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:11:52,644	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:11:55,990	[INFO]	247	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:11:55,992	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:11:55,993	[INFO]	248	SUCCESS	+13.0	
2020-12-10 06:11:55,994	[DEBUG]	
2020-12-10 06:11:56,831	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:11:57,744	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:12:01,014	[INFO]	251	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:12:01,015	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:12:04,230	[INFO]	252	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:12:04,231	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 45,53 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:12:04,232	[INFO]	253	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:12:04,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:12:04,233	[INFO]	254	SUCCESS	+13.0	
2020-12-10 06:12:04,233	[DEBUG]	
2020-12-10 06:12:07,523	[INFO]	255	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 06:12:07,524	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:12:07,525	[INFO]	256	SUCCESS	+13.0	
2020-12-10 06:12:07,525	[DEBUG]	
2020-12-10 06:12:10,737	[INFO]	257	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:12:10,738	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:12:10,738	[INFO]	258	SUCCESS	+13.0	
2020-12-10 06:12:10,739	[DEBUG]	
2020-12-10 06:12:14,024	[INFO]	259	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:12:14,026	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:12:14,027	[INFO]	260	SUCCESS	+13.0	
2020-12-10 06:12:14,027	[DEBUG]	
2020-12-10 06:12:17,208	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:12:17,209	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:18,113	[INFO]	262	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:12:21,380	[INFO]	263	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:12:21,381	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 30,35 ****
--- 31,38 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:24,631	[INFO]	264	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:12:24,632	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 06:12:24,633	[INFO]	265	SUCCESS	+13.0	
2020-12-10 06:12:24,633	[DEBUG]	
2020-12-10 06:12:25,532	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:12:28,808	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:12:28,809	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:12:32,116	[INFO]	268	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:12:32,117	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:12:33,000	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:12:33,707	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:12:36,983	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:12:36,984	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:12:36,985	[INFO]	272	SUCCESS	+13.0	
2020-12-10 06:12:36,985	[DEBUG]	
2020-12-10 06:12:37,835	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:12:38,739	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:12:39,466	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:12:40,321	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:12:43,609	[INFO]	277	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:12:43,611	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:46,878	[INFO]	278	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:12:46,880	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
! 
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:47,733	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:12:47,735	[INFO]	280	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:12:47,735	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
! 
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:48,631	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:12:48,636	[INFO]	282	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:12:48,637	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:48,641	[INFO]	283	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:12:48,643	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:49,528	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:12:49,530	[INFO]	285	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:12:49,531	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:49,532	[INFO]	286	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:12:49,532	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:12:50,423	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:12:50,424	[INFO]	288	SUCCESS	+13.0	
2020-12-10 06:12:50,425	[DEBUG]	
2020-12-10 06:12:53,754	[INFO]	289	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:12:53,756	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:12:54,607	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:12:55,504	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:12:55,507	[INFO]	292	SUCCESS	+13.0	
2020-12-10 06:12:55,508	[DEBUG]	
2020-12-10 06:12:56,417	[INFO]	293	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:12:57,328	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:12:58,194	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:13:01,458	[INFO]	296	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:13:01,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:13:02,323	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:13:02,324	[INFO]	298	SUCCESS	+13.0	
2020-12-10 06:13:02,325	[DEBUG]	
2020-12-10 06:13:02,326	[INFO]	299	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:13:02,326	[DEBUG]	
2020-12-10 06:13:03,189	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:13:06,499	[INFO]	301	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:13:06,500	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:13:06,501	[INFO]	302	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:13:06,501	[DEBUG]	
2020-12-10 06:13:06,502	[INFO]	303	SUCCESS	+13.0	
2020-12-10 06:13:06,502	[DEBUG]	
2020-12-10 06:13:07,491	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:13:08,405	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:13:11,612	[INFO]	306	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:13:11,613	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:13:14,796	[INFO]	307	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:13:14,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:13:18,036	[INFO]	308	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:13:18,037	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 06:13:18,037	[INFO]	309	SUCCESS	+13.0	
2020-12-10 06:13:18,038	[DEBUG]	
2020-12-10 06:13:18,733	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:13:19,636	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:13:20,549	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:13:21,450	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:13:22,347	[INFO]	314	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:13:23,238	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:13:24,122	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:13:25,007	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:13:25,888	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:13:26,779	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:13:26,780	[INFO]	320	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:13:26,781	[DEBUG]	
2020-12-10 06:13:26,782	[INFO]	321	SUCCESS	+13.0	
2020-12-10 06:13:26,782	[DEBUG]	
2020-12-10 06:13:27,660	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:13:28,610	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:13:29,508	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:13:30,418	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:13:31,308	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:13:32,202	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:13:33,100	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:13:33,957	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:13:37,228	[INFO]	330	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:13:37,229	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 06:13:38,110	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:13:38,112	[INFO]	332	SUCCESS	+13.0	
2020-12-10 06:13:38,112	[DEBUG]	
2020-12-10 06:13:41,411	[INFO]	333	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:13:41,412	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:44,696	[INFO]	334	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:13:44,697	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,48 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:44,698	[INFO]	335	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:13:44,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:45,599	[INFO]	336	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:13:46,490	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:13:46,491	[INFO]	338	SUCCESS	+13.0	
2020-12-10 06:13:46,491	[DEBUG]	
2020-12-10 06:13:49,797	[INFO]	339	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:13:49,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:13:49,799	[INFO]	340	SUCCESS	+13.0	
2020-12-10 06:13:49,799	[DEBUG]	
2020-12-10 06:13:53,226	[INFO]	341	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:13:53,227	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:13:56,461	[INFO]	342	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:13:56,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,48 ****
--- 40,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:59,790	[INFO]	343	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:13:59,791	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:59,792	[INFO]	344	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:13:59,793	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:13:59,794	[INFO]	345	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:13:59,794	[DEBUG]	
2020-12-10 06:13:59,795	[INFO]	346	SUCCESS	+13.0	
2020-12-10 06:13:59,795	[DEBUG]	
2020-12-10 06:14:00,672	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:14:01,532	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:14:04,836	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:14:04,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:14:05,673	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:14:05,674	[INFO]	351	SUCCESS	+13.0	
2020-12-10 06:14:05,674	[DEBUG]	
2020-12-10 06:14:06,585	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:14:07,457	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:14:08,352	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:14:09,236	[INFO]	355	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:14:10,144	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:14:11,008	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:14:11,904	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:14:12,793	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:14:16,051	[INFO]	360	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:14:16,053	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 06:14:16,054	[INFO]	361	SUCCESS	+13.0	
2020-12-10 06:14:16,055	[DEBUG]	
2020-12-10 06:14:16,933	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:14:20,171	[INFO]	363	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:14:20,173	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:14:23,479	[INFO]	364	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 06:14:23,480	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,33 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 21,34 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:14:26,658	[INFO]	365	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 06:14:26,660	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:14:26,663	[INFO]	366	SUCCESS	+13.0	
2020-12-10 06:14:26,664	[DEBUG]	
2020-12-10 06:14:27,565	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:14:30,852	[INFO]	368	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 06:14:30,853	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:14:30,854	[INFO]	369	SUCCESS	+13.0	
2020-12-10 06:14:30,854	[DEBUG]	
2020-12-10 06:14:34,219	[INFO]	370	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:14:34,221	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 06:14:34,222	[INFO]	371	SUCCESS	+13.0	
2020-12-10 06:14:34,222	[DEBUG]	
2020-12-10 06:14:35,056	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:14:35,996	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:14:36,867	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:14:37,775	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:14:38,688	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:14:41,915	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:14:41,916	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:14:42,834	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:14:46,069	[INFO]	379	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:14:46,070	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,48 ****
--- 41,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:14:49,264	[INFO]	380	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:14:49,265	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,48 ****
--- 40,51 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:14:52,572	[INFO]	381	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:14:52,573	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,48 ****
--- 40,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:14:52,574	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:14:52,574	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:14:52,575	[INFO]	383	SUCCESS	+13.0	
2020-12-10 06:14:52,575	[DEBUG]	
2020-12-10 06:14:53,417	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:14:56,624	[INFO]	385	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='})
2020-12-10 06:14:56,625	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:14:56,626	[INFO]	386	SUCCESS	+13.0	
2020-12-10 06:14:56,626	[DEBUG]	
2020-12-10 06:14:56,628	[INFO]	387	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:14:56,629	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:14:56,629	[INFO]	388	SUCCESS	+13.0	
2020-12-10 06:14:56,630	[DEBUG]	
2020-12-10 06:14:57,498	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:14:58,403	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:14:59,286	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:15:00,177	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:15:01,057	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:15:01,777	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:15:04,986	[INFO]	395	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:15:04,987	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int j = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:15:04,988	[INFO]	396	SUCCESS	+13.0	
2020-12-10 06:15:04,988	[DEBUG]	
2020-12-10 06:15:05,843	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:15:06,719	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:15:10,038	[INFO]	399	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:15:10,039	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 06:15:10,939	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:15:10,941	[INFO]	401	SUCCESS	+13.0	
2020-12-10 06:15:10,941	[DEBUG]	
2020-12-10 06:15:11,819	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:15:15,148	[INFO]	403	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:15:15,151	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:15:16,006	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:15:16,007	[INFO]	405	SUCCESS	+13.0	
2020-12-10 06:15:16,007	[DEBUG]	
2020-12-10 06:15:16,896	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:15:16,899	[INFO]	407	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:15:16,899	[DEBUG]	
2020-12-10 06:15:16,900	[INFO]	408	SUCCESS	+13.0	
2020-12-10 06:15:16,901	[DEBUG]	
2020-12-10 06:15:17,775	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:15:18,738	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:15:19,664	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:15:20,550	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:15:20,552	[INFO]	413	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:15:20,552	[DEBUG]	
2020-12-10 06:15:21,472	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:15:22,349	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:15:22,351	[INFO]	416	SUCCESS	+13.0	
2020-12-10 06:15:22,351	[DEBUG]	
2020-12-10 06:15:23,259	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:15:26,602	[INFO]	418	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:15:26,603	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:15:26,604	[INFO]	419	SUCCESS	+13.0	
2020-12-10 06:15:26,604	[DEBUG]	
2020-12-10 06:15:29,828	[INFO]	420	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:15:29,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:15:29,830	[INFO]	421	SUCCESS	+13.0	
2020-12-10 06:15:29,830	[DEBUG]	
2020-12-10 06:15:30,502	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:15:31,363	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:15:32,248	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:15:33,137	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:15:34,020	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:15:38,190	[INFO]	427	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:15:38,191	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:15:38,192	[INFO]	428	SUCCESS	+13.0	
2020-12-10 06:15:38,193	[DEBUG]	
2020-12-10 06:15:38,194	[INFO]	429	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:15:38,195	[DEBUG]	
2020-12-10 06:15:39,272	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:15:40,183	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:15:41,079	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:15:41,989	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:15:42,713	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:15:46,082	[INFO]	435	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:15:46,083	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:15:46,932	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:15:47,632	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:15:48,503	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:15:49,425	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:15:50,340	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:15:50,341	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:15:50,342	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:15:50,343	[INFO]	442	SUCCESS	+13.0	
2020-12-10 06:15:50,343	[DEBUG]	
2020-12-10 06:15:53,609	[INFO]	443	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:15:53,610	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:15:54,496	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:15:55,384	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:15:55,385	[INFO]	446	SUCCESS	+13.0	
2020-12-10 06:15:55,385	[DEBUG]	
2020-12-10 06:15:56,289	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:15:57,165	[INFO]	448	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:15:58,042	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:15:58,916	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:15:59,627	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:16:00,505	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:16:01,367	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:16:01,368	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:16:01,369	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:16:02,305	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:16:02,307	[INFO]	456	SUCCESS	+13.0	
2020-12-10 06:16:02,308	[DEBUG]	
2020-12-10 06:16:03,186	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:16:04,051	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:16:04,929	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:16:05,816	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:16:06,717	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:16:07,449	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:16:08,329	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:16:09,214	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:16:10,076	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:16:10,981	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:16:11,880	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:16:12,770	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:16:13,496	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:16:14,200	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:16:14,203	[INFO]	471	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:16:14,204	[DEBUG]	
2020-12-10 06:16:14,206	[INFO]	472	SUCCESS	+13.0	
2020-12-10 06:16:14,206	[DEBUG]	
2020-12-10 06:16:15,111	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:16:15,997	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:16:19,165	[INFO]	475	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:16:19,166	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:16:19,168	[INFO]	476	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:16:19,169	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:16:19,170	[INFO]	477	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:16:19,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:16:19,171	[INFO]	478	SUCCESS	+13.0	
2020-12-10 06:16:19,172	[DEBUG]	
2020-12-10 06:16:20,038	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:16:23,343	[INFO]	480	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:16:23,344	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:16:23,345	[INFO]	481	SUCCESS	+13.0	
2020-12-10 06:16:23,345	[DEBUG]	
2020-12-10 06:16:24,007	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:16:27,284	[INFO]	483	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:16:27,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:16:30,604	[INFO]	484	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:16:30,605	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:16:30,606	[INFO]	485	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:16:30,607	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:16:30,608	[INFO]	486	SUCCESS	+13.0	
2020-12-10 06:16:30,608	[DEBUG]	
2020-12-10 06:16:31,505	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:16:32,397	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:16:33,284	[INFO]	489	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:16:36,589	[INFO]	490	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:16:36,591	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:16:36,592	[INFO]	491	SUCCESS	+13.0	
2020-12-10 06:16:36,593	[DEBUG]	
2020-12-10 06:16:37,467	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:16:38,377	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:16:39,263	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:16:40,130	[INFO]	495	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:16:41,019	[INFO]	496	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:16:41,896	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:16:42,802	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:16:43,689	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:16:44,587	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:16:44,588	[INFO]	==== END ====
2020-12-10 06:16:44,588	[INFO]	Reason: step budget
2020-12-10 06:16:44,589	[INFO]	
2020-12-10 06:16:44,589	[INFO]	========== EPOCH 5 ==========
2020-12-10 06:16:44,590	[INFO]	==== WARMUP ====
2020-12-10 06:16:47,840	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:16:47,840	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:16:51,128	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:16:51,128	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:16:54,388	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:16:54,389	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:16:57,692	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 06:16:57,692	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:16:57,693	[INFO]	==== START ====
2020-12-10 06:16:58,562	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:17:01,780	[INFO]	2	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='})
2020-12-10 06:17:01,781	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:17:01,782	[INFO]	3	SUCCESS	+13.0	
2020-12-10 06:17:01,782	[DEBUG]	
2020-12-10 06:17:02,691	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:17:03,569	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:17:04,458	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:17:07,666	[INFO]	7	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:17:07,667	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:17:08,556	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:17:08,559	[INFO]	9	SUCCESS	+13.0	
2020-12-10 06:17:08,560	[DEBUG]	
2020-12-10 06:17:12,097	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:17:12,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 06:17:12,104	[INFO]	11	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:17:12,106	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 06:17:12,109	[INFO]	12	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:17:12,111	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 06:17:13,355	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:17:13,357	[INFO]	14	SUCCESS	+13.0	
2020-12-10 06:17:13,358	[DEBUG]	
2020-12-10 06:17:14,622	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:17:15,981	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:17:17,265	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:17:18,480	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:17:19,480	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:17:20,694	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:17:24,798	[INFO]	21	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:17:24,800	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:17:24,801	[INFO]	22	SUCCESS	+13.0	
2020-12-10 06:17:24,802	[DEBUG]	
2020-12-10 06:17:28,741	[INFO]	23	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:17:28,744	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:17:28,745	[INFO]	24	SUCCESS	+13.0	
2020-12-10 06:17:28,746	[DEBUG]	
2020-12-10 06:17:33,191	[INFO]	25	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:17:33,192	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:17:33,194	[INFO]	26	SUCCESS	+13.0	
2020-12-10 06:17:33,194	[DEBUG]	
2020-12-10 06:17:37,487	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:17:37,489	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:17:37,491	[INFO]	28	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:17:37,492	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:17:37,494	[INFO]	29	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:17:37,495	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:17:37,497	[INFO]	30	SUCCESS	+13.0	
2020-12-10 06:17:37,497	[DEBUG]	
2020-12-10 06:17:41,714	[INFO]	31	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:17:41,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:17:42,632	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:17:42,633	[INFO]	33	SUCCESS	+13.0	
2020-12-10 06:17:42,633	[DEBUG]	
2020-12-10 06:17:43,520	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:17:46,779	[INFO]	35	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:17:46,782	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:17:46,784	[INFO]	36	SUCCESS	+13.0	
2020-12-10 06:17:46,785	[DEBUG]	
2020-12-10 06:17:47,686	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:17:48,607	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:17:49,573	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:17:50,711	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:17:51,653	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:17:52,462	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:17:53,197	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:17:54,064	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:17:54,968	[INFO]	45	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:17:59,345	[INFO]	46	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:17:59,346	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:17:59,347	[INFO]	47	SUCCESS	+13.0	
2020-12-10 06:17:59,348	[DEBUG]	
2020-12-10 06:18:00,478	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:18:01,718	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:18:02,689	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:18:03,423	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:18:04,289	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:18:05,149	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:18:08,422	[INFO]	54	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:18:08,423	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:18:11,826	[INFO]	55	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:18:11,827	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:12,704	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:18:13,426	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:18:14,283	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:18:15,164	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:18:18,491	[INFO]	60	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:18:18,493	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 41,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:19,392	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:18:22,613	[INFO]	62	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:18:22,615	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:25,895	[INFO]	63	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:18:25,896	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
--- 24,41 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 result.add(left.get(i));
+             } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 51,58 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:25,898	[INFO]	64	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:18:25,899	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:26,873	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:18:27,920	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:18:31,271	[INFO]	67	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:18:31,273	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 24,34 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
***************
*** 41,46 ****
--- 43,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:32,177	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:18:32,179	[INFO]	69	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:18:32,180	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:32,917	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:18:33,774	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:18:34,686	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:18:35,574	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:18:36,502	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:18:36,507	[INFO]	75	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:18:36,509	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:37,382	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:18:38,283	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:18:41,447	[INFO]	78	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:18:41,448	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:42,349	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:18:42,351	[INFO]	80	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:18:42,352	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,31 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 24,32 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:45,602	[INFO]	81	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:18:45,603	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:46,321	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:18:47,202	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:18:50,565	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:18:50,566	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:18:50,567	[INFO]	85	SUCCESS	+13.0	
2020-12-10 06:18:50,567	[DEBUG]	
2020-12-10 06:18:51,445	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:18:52,323	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:18:53,280	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:18:54,143	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:18:55,051	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:18:55,953	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:18:56,838	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:18:57,796	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:19:01,099	[INFO]	94	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:19:01,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:19:04,497	[INFO]	95	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:19:04,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,52 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 41,55 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:05,530	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:19:06,506	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:19:07,467	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:19:10,780	[INFO]	99	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:19:10,781	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,52 ****
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 36,58 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:13,899	[INFO]	100	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 06:19:13,900	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,52 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 35,58 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:17,273	[INFO]	101	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 06:19:17,274	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,52 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 35,55 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:20,500	[INFO]	102	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:19:20,501	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,52 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 21,47 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:21,364	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:19:24,586	[INFO]	104	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:19:24,588	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,52 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 33,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return arr;
          }
      }
  }

2020-12-10 06:19:25,458	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:19:28,776	[INFO]	106	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:19:28,777	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 33,41 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:19:32,045	[INFO]	107	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:19:32,046	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:19:32,895	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:19:32,897	[INFO]	109	SUCCESS	+13.0	
2020-12-10 06:19:32,897	[DEBUG]	
2020-12-10 06:19:33,784	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:19:34,722	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:19:35,615	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:19:38,854	[INFO]	113	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:19:38,855	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:19:39,727	[INFO]	114	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:19:40,604	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:19:40,606	[INFO]	116	SUCCESS	+13.0	
2020-12-10 06:19:40,606	[DEBUG]	
2020-12-10 06:19:43,855	[INFO]	117	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:19:43,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:19:43,857	[INFO]	118	SUCCESS	+13.0	
2020-12-10 06:19:43,858	[DEBUG]	
2020-12-10 06:19:44,587	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:19:45,472	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:19:46,191	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:19:47,052	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:19:47,912	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:19:48,801	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:19:49,720	[INFO]	125	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:19:50,461	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:19:53,566	[INFO]	127	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:19:53,567	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:19:53,568	[INFO]	128	SUCCESS	+13.0	
2020-12-10 06:19:53,568	[DEBUG]	
2020-12-10 06:19:54,466	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:19:55,194	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:19:55,198	[INFO]	131	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 06:19:55,199	[DEBUG]	
2020-12-10 06:19:55,201	[INFO]	132	SUCCESS	+13.0	
2020-12-10 06:19:55,201	[DEBUG]	
2020-12-10 06:19:56,095	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:19:57,203	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:19:58,323	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:19:59,518	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:20:00,651	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:20:04,830	[INFO]	138	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='})
2020-12-10 06:20:04,831	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:20:05,986	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:20:05,987	[INFO]	140	SUCCESS	+13.0	
2020-12-10 06:20:05,988	[DEBUG]	
2020-12-10 06:20:06,950	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:20:10,598	[INFO]	142	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 06:20:10,598	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:20:11,459	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:20:12,340	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:20:12,341	[INFO]	145	SUCCESS	+13.0	
2020-12-10 06:20:12,341	[DEBUG]	
2020-12-10 06:20:13,540	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:20:16,764	[INFO]	147	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:20:16,765	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:20:16,766	[INFO]	148	SUCCESS	+13.0	
2020-12-10 06:20:16,766	[DEBUG]	
2020-12-10 06:20:19,954	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:20:19,955	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:20:19,956	[INFO]	150	SUCCESS	+13.0	
2020-12-10 06:20:19,956	[DEBUG]	
2020-12-10 06:20:23,180	[INFO]	151	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:20:23,181	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  

2020-12-10 06:20:23,182	[INFO]	152	SUCCESS	+13.0	
2020-12-10 06:20:23,182	[DEBUG]	
2020-12-10 06:20:26,413	[INFO]	153	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:20:26,414	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 06:20:27,309	[INFO]	154	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:20:28,293	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:20:28,294	[INFO]	156	SUCCESS	+13.0	
2020-12-10 06:20:28,294	[DEBUG]	
2020-12-10 06:20:31,639	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:20:31,640	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:20:31,640	[INFO]	158	SUCCESS	+13.0	
2020-12-10 06:20:31,641	[DEBUG]	
2020-12-10 06:20:32,500	[INFO]	159	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:20:33,399	[INFO]	160	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:20:34,303	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:20:35,317	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:20:38,582	[INFO]	163	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:20:38,583	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:20:39,447	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:20:40,328	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:20:43,452	[INFO]	166	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:20:43,454	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:20:43,455	[INFO]	167	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:20:43,455	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:20:44,324	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:20:44,326	[INFO]	169	SUCCESS	+13.0	
2020-12-10 06:20:44,326	[DEBUG]	
2020-12-10 06:20:45,200	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:20:46,079	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:20:46,965	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:20:47,861	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:20:51,171	[INFO]	174	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:20:51,172	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:20:54,414	[INFO]	175	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:20:54,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:20:57,665	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:20:57,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 45,50 ****
--- 47,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:00,912	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:21:00,913	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,26 ****
--- 19,37 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
+         while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 45,50 ****
--- 56,62 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:00,915	[INFO]	178	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:21:00,916	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 45,50 ****
--- 47,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:00,917	[INFO]	179	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:21:00,917	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:01,781	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:21:05,052	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:21:05,053	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:05,927	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:21:06,819	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:21:10,139	[INFO]	184	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:21:10,140	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 45,50 ****
--- 47,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:10,141	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:21:10,142	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:21:10,990	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:21:10,992	[INFO]	187	SUCCESS	+13.0	
2020-12-10 06:21:10,992	[DEBUG]	
2020-12-10 06:21:11,878	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:21:12,574	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:21:13,467	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:21:14,380	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:21:15,294	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:21:16,203	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:21:17,121	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:21:18,009	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:21:18,872	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:21:22,234	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:21:22,235	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:21:22,236	[INFO]	198	SUCCESS	+13.0	
2020-12-10 06:21:22,236	[DEBUG]	
2020-12-10 06:21:23,069	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:21:24,000	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:21:27,336	[INFO]	201	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:21:27,337	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:21:27,337	[INFO]	202	SUCCESS	+13.0	
2020-12-10 06:21:27,338	[DEBUG]	
2020-12-10 06:21:28,199	[INFO]	203	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:21:31,559	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:21:31,560	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:21:31,561	[INFO]	205	SUCCESS	+13.0	
2020-12-10 06:21:31,561	[DEBUG]	
2020-12-10 06:21:32,427	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:21:33,296	[INFO]	207	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:21:34,163	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:21:37,392	[INFO]	209	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:21:37,393	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:21:38,260	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:21:38,261	[INFO]	211	SUCCESS	+13.0	
2020-12-10 06:21:38,262	[DEBUG]	
2020-12-10 06:21:38,982	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:21:39,880	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:21:40,759	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:21:41,647	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:21:44,903	[INFO]	216	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:21:44,904	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:21:48,086	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:21:48,087	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:21:48,982	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:21:49,899	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:21:49,901	[INFO]	220	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:21:49,901	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:21:53,129	[INFO]	221	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:21:53,130	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,50 ****
--- 43,55 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+ 
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 06:21:53,133	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:21:53,134	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:21:53,135	[INFO]	223	SUCCESS	+13.0	
2020-12-10 06:21:53,136	[DEBUG]	
2020-12-10 06:21:53,137	[INFO]	224	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:21:53,138	[DEBUG]	
2020-12-10 06:21:54,019	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:21:57,292	[INFO]	226	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='})
2020-12-10 06:21:57,293	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i == left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:21:57,294	[INFO]	227	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:21:57,294	[DEBUG]	
2020-12-10 06:21:58,174	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:22:01,389	[INFO]	229	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:22:01,390	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:22:01,391	[INFO]	230	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:22:01,392	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:22:02,273	[INFO]	231	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:22:02,274	[INFO]	232	SUCCESS	+13.0	
2020-12-10 06:22:02,274	[DEBUG]	
2020-12-10 06:22:02,977	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:22:03,877	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:22:03,878	[INFO]	235	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:22:04,757	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:22:05,682	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:22:06,583	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:22:09,893	[INFO]	239	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:22:09,894	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:22:13,184	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:22:13,185	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,43 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return merge(left, right);
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:22:13,186	[INFO]	241	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:22:13,187	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:22:13,187	[INFO]	242	SUCCESS	+13.0	
2020-12-10 06:22:13,187	[DEBUG]	
2020-12-10 06:22:14,038	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:22:14,956	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:22:15,863	[INFO]	245	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:22:16,764	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:22:17,671	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:22:18,567	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:22:19,511	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:22:22,720	[INFO]	250	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:22:22,721	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:22:22,722	[INFO]	251	SUCCESS	+13.0	
2020-12-10 06:22:22,722	[DEBUG]	
2020-12-10 06:22:23,594	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:22:24,476	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:22:25,352	[INFO]	254	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:22:26,248	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:22:27,133	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:22:27,135	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:22:30,324	[INFO]	258	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:22:30,325	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:22:33,665	[INFO]	259	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:22:33,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:22:34,551	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:22:37,834	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:22:37,835	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,29 ****
--- 20,31 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:22:41,117	[INFO]	262	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:22:41,119	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:22:42,048	[INFO]	263	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:22:42,982	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:22:43,726	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:22:44,651	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:22:48,023	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:22:48,024	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:22:48,695	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:22:48,696	[INFO]	269	SUCCESS	+13.0	
2020-12-10 06:22:48,696	[DEBUG]	
2020-12-10 06:22:51,945	[INFO]	270	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='})
2020-12-10 06:22:51,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() >= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:22:52,798	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:22:53,680	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:22:54,688	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:22:54,690	[INFO]	274	SUCCESS	+13.0	
2020-12-10 06:22:54,691	[DEBUG]	
2020-12-10 06:22:55,583	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:22:56,463	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:22:57,342	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:22:58,212	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:23:01,507	[INFO]	279	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:23:01,508	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:04,762	[INFO]	280	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:23:04,763	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 31,36 ****
--- 32,38 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:05,644	[INFO]	281	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:23:05,645	[INFO]	282	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:23:05,646	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:09,056	[INFO]	283	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:23:09,057	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 40,46 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:09,058	[INFO]	284	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:23:09,059	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:12,356	[INFO]	285	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:23:12,357	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
--- 27,38 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:12,358	[INFO]	286	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:23:12,359	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:23:12,360	[INFO]	287	SUCCESS	+13.0	
2020-12-10 06:23:12,360	[DEBUG]	
2020-12-10 06:23:15,668	[INFO]	288	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:23:15,669	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 06:23:15,670	[INFO]	289	SUCCESS	+13.0	
2020-12-10 06:23:15,670	[DEBUG]	
2020-12-10 06:23:16,551	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:23:16,552	[INFO]	291	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:23:16,553	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 06:23:17,470	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:23:17,471	[INFO]	293	SUCCESS	+13.0	
2020-12-10 06:23:17,471	[DEBUG]	
2020-12-10 06:23:18,356	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:23:19,237	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:23:20,111	[INFO]	296	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:23:21,021	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:23:21,935	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:23:22,673	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:23:23,565	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:23:24,449	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:23:25,152	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:23:28,497	[INFO]	303	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:23:28,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:23:28,500	[INFO]	304	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:23:28,501	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:23:28,502	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:23:28,502	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:23:29,344	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:23:29,345	[INFO]	307	SUCCESS	+13.0	
2020-12-10 06:23:29,346	[DEBUG]	
2020-12-10 06:23:30,208	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:23:31,102	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:23:32,006	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:23:32,747	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:23:33,634	[INFO]	312	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:23:34,347	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:23:35,254	[INFO]	314	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:23:36,116	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:23:36,833	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:23:40,128	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:23:40,130	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:40,132	[INFO]	318	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:23:40,133	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:40,996	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:23:41,861	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:23:42,737	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:23:42,739	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:23:42,740	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:42,741	[INFO]	323	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:23:42,742	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:42,743	[INFO]	324	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:23:42,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:42,744	[INFO]	325	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:23:42,745	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:43,456	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:23:43,460	[INFO]	327	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:23:43,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:43,464	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:23:44,381	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:23:45,249	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:23:45,252	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:23:45,252	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:46,162	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:23:47,065	[INFO]	333	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:23:47,067	[INFO]	334	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:23:47,068	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:47,069	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:23:47,943	[INFO]	336	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:23:47,945	[INFO]	337	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:23:47,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:48,868	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:23:49,778	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:23:50,707	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:23:53,973	[INFO]	341	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:23:53,974	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,25 ****
--- 18,31 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:54,851	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:23:54,856	[INFO]	343	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:23:54,858	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,25 ****
--- 18,31 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:54,860	[INFO]	344	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:23:54,862	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:54,865	[INFO]	345	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:23:54,867	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:54,871	[INFO]	346	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:23:54,872	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:54,875	[INFO]	347	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:23:54,876	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:23:55,772	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:23:58,969	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:23:58,971	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 42,47 ****
--- 47,55 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:23:58,972	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:23:58,973	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 42,47 ****
--- 47,55 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:02,207	[INFO]	351	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:24:02,209	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 30,35 ****
--- 35,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 42,47 ****
--- 48,56 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:02,212	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:24:02,213	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 30,35 ****
--- 35,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 42,47 ****
--- 48,56 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:03,108	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:24:06,348	[INFO]	354	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:24:06,349	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 30,35 ****
--- 35,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,47 ****
--- 46,59 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:06,351	[INFO]	355	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:06,352	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 30,35 ****
--- 35,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,47 ****
--- 46,59 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:07,244	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:07,247	[INFO]	357	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:07,248	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 30,35 ****
--- 35,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,47 ****
--- 46,59 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:08,163	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:24:11,477	[INFO]	359	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:11,479	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,47 ****
--- 41,54 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:24:14,728	[INFO]	360	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:14,729	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:24:18,025	[INFO]	361	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:24:18,026	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,35 ****
--- 31,37 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 42,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:24:18,027	[INFO]	362	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:18,028	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:24:18,029	[INFO]	363	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:24:18,030	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:24:21,330	[INFO]	364	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:24:21,331	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:24:22,202	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:24:23,066	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:24:23,970	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:24:27,215	[INFO]	368	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:24:27,216	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:24:30,450	[INFO]	369	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:24:30,451	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:24:33,678	[INFO]	370	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:24:33,681	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 44,49 ****
--- 36,42 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:24:33,683	[INFO]	371	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:24:33,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:24:33,685	[INFO]	372	SUCCESS	+13.0	
2020-12-10 06:24:33,686	[DEBUG]	
2020-12-10 06:24:34,568	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:24:35,433	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:24:36,337	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:24:37,228	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:24:40,491	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:24:40,492	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:24:41,340	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:24:42,237	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:24:45,493	[INFO]	380	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:24:45,494	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,33 ****
--- 25,35 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:24:48,735	[INFO]	381	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:24:48,736	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:24:48,737	[INFO]	382	SUCCESS	+13.0	
2020-12-10 06:24:48,737	[DEBUG]	
2020-12-10 06:24:49,640	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:24:50,581	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:24:53,883	[INFO]	385	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:24:53,885	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:24:54,789	[INFO]	386	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:24:55,697	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:24:55,700	[INFO]	388	SUCCESS	+13.0	
2020-12-10 06:24:55,701	[DEBUG]	
2020-12-10 06:24:58,960	[INFO]	389	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:24:58,961	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:24:58,963	[INFO]	390	SUCCESS	+13.0	
2020-12-10 06:24:58,964	[DEBUG]	
2020-12-10 06:25:02,223	[INFO]	391	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:25:02,224	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 06:25:02,225	[INFO]	392	SUCCESS	+13.0	
2020-12-10 06:25:02,225	[DEBUG]	
2020-12-10 06:25:05,482	[INFO]	393	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 06:25:05,482	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:25:06,338	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:25:06,339	[INFO]	395	SUCCESS	+13.0	
2020-12-10 06:25:06,340	[DEBUG]	
2020-12-10 06:25:07,234	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:25:08,118	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:25:09,010	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:25:09,888	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:25:10,822	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:25:14,078	[INFO]	401	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:25:14,078	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:25:14,944	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:25:14,945	[INFO]	403	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:25:14,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:25:14,946	[INFO]	404	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:25:14,947	[DEBUG]	
2020-12-10 06:25:15,736	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:25:16,593	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:25:16,594	[INFO]	407	SUCCESS	+13.0	
2020-12-10 06:25:16,595	[DEBUG]	
2020-12-10 06:25:17,463	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:25:18,186	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:25:19,042	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:25:19,955	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:25:20,866	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:25:21,754	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:25:22,485	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:25:23,392	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:25:24,268	[INFO]	416	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:25:25,147	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:25:26,027	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:25:29,407	[INFO]	419	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:25:29,409	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:25:29,409	[INFO]	420	SUCCESS	+13.0	
2020-12-10 06:25:29,410	[DEBUG]	
2020-12-10 06:25:32,647	[INFO]	421	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='})
2020-12-10 06:25:32,648	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:25:33,525	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:25:34,433	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:25:34,434	[INFO]	424	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:25:34,435	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) == right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:25:34,435	[INFO]	425	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:25:34,436	[DEBUG]	
2020-12-10 06:25:34,436	[INFO]	426	SUCCESS	+13.0	
2020-12-10 06:25:34,437	[DEBUG]	
2020-12-10 06:25:35,454	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:25:36,673	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:25:40,644	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:25:40,646	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:25:41,898	[INFO]	430	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:25:42,688	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:25:42,690	[INFO]	432	SUCCESS	+13.0	
2020-12-10 06:25:42,691	[DEBUG]	
2020-12-10 06:25:43,649	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:25:44,534	[INFO]	434	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:25:45,468	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:25:46,338	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:25:47,251	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:25:47,253	[INFO]	438	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:25:47,253	[DEBUG]	
2020-12-10 06:25:50,532	[INFO]	439	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:25:50,534	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:25:51,401	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:25:52,345	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:25:53,239	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:25:56,600	[INFO]	443	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:25:56,601	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,46 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:25:59,808	[INFO]	444	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:25:59,809	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:26:03,116	[INFO]	445	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='})
2020-12-10 06:26:03,117	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,38 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:26:06,513	[INFO]	446	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:26:06,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,38 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 46,51 ****
--- 55,62 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right = mergesort(right);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:26:07,488	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:26:08,689	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:26:09,927	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:26:13,916	[INFO]	450	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:26:13,918	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,38 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 53,61 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
+             right = mergesort(right);
+ 
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:26:17,546	[INFO]	451	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:26:17,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 53,61 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
+             right = mergesort(right);
+ 
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:26:17,548	[INFO]	452	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:26:17,549	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 53,61 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
+             right = mergesort(right);
+ 
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:26:18,436	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:26:21,642	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:26:21,643	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
+             right = mergesort(right);
+ 
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:26:25,008	[INFO]	455	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:26:25,009	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right = mergesort(right);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:26:25,010	[INFO]	456	SUCCESS	+13.0	
2020-12-10 06:26:25,010	[DEBUG]	
2020-12-10 06:26:25,932	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:26:29,327	[INFO]	458	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:26:29,328	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:26:29,328	[INFO]	459	SUCCESS	+13.0	
2020-12-10 06:26:29,329	[DEBUG]	
2020-12-10 06:26:32,544	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:26:32,545	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:26:32,545	[INFO]	461	SUCCESS	+13.0	
2020-12-10 06:26:32,546	[DEBUG]	
2020-12-10 06:26:33,403	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:26:34,278	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:26:34,280	[INFO]	464	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:26:34,280	[DEBUG]	
2020-12-10 06:26:34,281	[INFO]	465	SUCCESS	+13.0	
2020-12-10 06:26:34,281	[DEBUG]	
2020-12-10 06:26:35,200	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:26:36,077	[INFO]	467	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:26:36,966	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:26:37,877	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:26:38,733	[INFO]	470	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:26:39,658	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:26:40,521	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:26:41,398	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:26:44,713	[INFO]	474	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:26:44,716	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:26:45,587	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:26:46,470	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:26:46,471	[INFO]	477	SUCCESS	+13.0	
2020-12-10 06:26:46,471	[DEBUG]	
2020-12-10 06:26:49,783	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:26:49,784	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:26:49,785	[INFO]	479	SUCCESS	+13.0	
2020-12-10 06:26:49,785	[DEBUG]	
2020-12-10 06:26:53,074	[INFO]	480	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:26:53,075	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:26:53,075	[INFO]	481	SUCCESS	+13.0	
2020-12-10 06:26:53,076	[DEBUG]	
2020-12-10 06:26:53,945	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:26:54,828	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:26:55,525	[INFO]	484	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:26:56,245	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:26:57,126	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:26:58,028	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:27:01,333	[INFO]	488	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:27:01,334	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:27:04,547	[INFO]	489	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:27:04,548	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
!             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:27:05,433	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:27:06,338	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:27:06,339	[INFO]	492	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:27:06,339	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:27:07,242	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:27:10,488	[INFO]	494	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:27:10,489	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,31 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 06:27:11,366	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:27:14,707	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:27:14,708	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 06:27:15,548	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:27:15,550	[INFO]	498	SUCCESS	+13.0	
2020-12-10 06:27:15,551	[DEBUG]	
2020-12-10 06:27:16,446	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:27:17,333	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:27:17,333	[INFO]	==== END ====
2020-12-10 06:27:17,333	[INFO]	Reason: step budget
2020-12-10 06:27:17,334	[INFO]	
2020-12-10 06:27:17,334	[INFO]	========== EPOCH 6 ==========
2020-12-10 06:27:17,334	[INFO]	==== WARMUP ====
2020-12-10 06:27:20,577	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:27:20,577	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:27:23,813	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:27:23,813	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:27:27,055	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:27:27,055	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:27:30,266	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 06:27:30,267	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:27:30,267	[INFO]	==== START ====
2020-12-10 06:27:31,150	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:27:32,042	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:27:33,030	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:27:36,299	[INFO]	4	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:27:36,300	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  

2020-12-10 06:27:37,175	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:27:37,177	[INFO]	6	SUCCESS	+13.0	
2020-12-10 06:27:37,177	[DEBUG]	
2020-12-10 06:27:38,046	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:27:38,906	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:27:39,648	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:27:40,513	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:27:43,754	[INFO]	11	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:27:43,755	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:27:44,603	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:27:44,605	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:27:44,606	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:27:44,607	[INFO]	14	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:27:44,607	[DEBUG]	
2020-12-10 06:27:44,608	[INFO]	15	SUCCESS	+13.0	
2020-12-10 06:27:44,609	[DEBUG]	
2020-12-10 06:27:45,497	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:27:46,366	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:27:49,587	[INFO]	18	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:27:49,588	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:27:49,589	[INFO]	19	SUCCESS	+13.0	
2020-12-10 06:27:49,589	[DEBUG]	
2020-12-10 06:27:50,483	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:27:51,416	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:27:52,271	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:27:53,169	[INFO]	23	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:27:54,038	[INFO]	24	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:27:54,929	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:27:55,824	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:27:56,718	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:27:57,618	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:27:58,506	[INFO]	29	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:27:59,399	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:28:02,714	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:28:02,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:28:02,716	[INFO]	32	SUCCESS	+13.0	
2020-12-10 06:28:02,716	[DEBUG]	
2020-12-10 06:28:03,554	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:28:04,438	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:28:05,307	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:28:08,478	[INFO]	36	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:28:08,479	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:28:08,479	[INFO]	37	SUCCESS	+13.0	
2020-12-10 06:28:08,480	[DEBUG]	
2020-12-10 06:28:08,481	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:28:09,356	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:28:10,102	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:28:13,379	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:28:13,380	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:28:13,381	[INFO]	42	SUCCESS	+13.0	
2020-12-10 06:28:13,382	[DEBUG]	
2020-12-10 06:28:14,061	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:28:14,924	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:28:15,636	[INFO]	45	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:28:16,543	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:28:19,752	[INFO]	47	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:28:19,752	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 06:28:20,641	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:28:20,642	[INFO]	49	SUCCESS	+13.0	
2020-12-10 06:28:20,642	[DEBUG]	
2020-12-10 06:28:21,526	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:28:22,430	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:28:23,334	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:28:24,224	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:28:24,226	[INFO]	54	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 06:28:24,226	[DEBUG]	
2020-12-10 06:28:24,227	[INFO]	55	SUCCESS	+13.0	
2020-12-10 06:28:24,227	[DEBUG]	
2020-12-10 06:28:25,134	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:28:26,015	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:28:29,306	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:28:29,307	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:28:29,308	[INFO]	59	SUCCESS	+13.0	
2020-12-10 06:28:29,308	[DEBUG]	
2020-12-10 06:28:30,166	[INFO]	60	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:28:33,398	[INFO]	61	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:28:33,399	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:28:34,302	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:28:34,305	[INFO]	63	SUCCESS	+13.0	
2020-12-10 06:28:34,305	[DEBUG]	
2020-12-10 06:28:35,197	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:28:36,074	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:28:36,805	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:28:37,687	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:28:40,927	[INFO]	68	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:28:40,928	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:28:40,929	[INFO]	69	SUCCESS	+13.0	
2020-12-10 06:28:40,929	[DEBUG]	
2020-12-10 06:28:44,156	[INFO]	70	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:28:44,158	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 06:28:44,160	[INFO]	71	SUCCESS	+13.0	
2020-12-10 06:28:44,161	[DEBUG]	
2020-12-10 06:28:45,016	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:28:45,921	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:28:46,805	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:28:50,136	[INFO]	75	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:28:50,137	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:28:50,138	[INFO]	76	SUCCESS	+13.0	
2020-12-10 06:28:50,138	[DEBUG]	
2020-12-10 06:28:53,464	[INFO]	77	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:28:53,465	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:28:54,144	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:28:54,145	[INFO]	79	SUCCESS	+13.0	
2020-12-10 06:28:54,145	[DEBUG]	
2020-12-10 06:28:54,998	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:28:55,904	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:28:59,243	[INFO]	82	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:28:59,244	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:28:59,245	[INFO]	83	SUCCESS	+13.0	
2020-12-10 06:28:59,245	[DEBUG]	
2020-12-10 06:28:59,915	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:29:00,757	[INFO]	85	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:29:04,071	[INFO]	86	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:29:04,073	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:29:04,945	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:29:04,948	[INFO]	88	SUCCESS	+13.0	
2020-12-10 06:29:04,949	[DEBUG]	
2020-12-10 06:29:08,215	[INFO]	89	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:29:08,216	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:29:08,216	[INFO]	90	SUCCESS	+13.0	
2020-12-10 06:29:08,217	[DEBUG]	
2020-12-10 06:29:11,449	[INFO]	91	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:29:11,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:29:11,451	[INFO]	92	SUCCESS	+13.0	
2020-12-10 06:29:11,451	[DEBUG]	
2020-12-10 06:29:14,640	[INFO]	93	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:29:14,642	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:29:17,904	[INFO]	94	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:29:17,905	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,30 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:29:17,906	[INFO]	95	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:29:17,907	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:29:18,775	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:29:18,776	[INFO]	97	SUCCESS	+13.0	
2020-12-10 06:29:18,777	[DEBUG]	
2020-12-10 06:29:19,680	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:29:20,574	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:29:21,475	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:29:22,367	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:29:23,272	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:29:26,554	[INFO]	103	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:29:26,555	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:29:26,555	[INFO]	104	SUCCESS	+13.0	
2020-12-10 06:29:26,556	[DEBUG]	
2020-12-10 06:29:27,421	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:29:28,302	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:29:29,215	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:29:30,186	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:29:31,043	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:29:34,290	[INFO]	110	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:29:34,291	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:29:35,172	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:29:36,089	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:29:39,394	[INFO]	113	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:29:39,395	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:29:40,297	[INFO]	114	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:29:40,299	[INFO]	115	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:29:40,299	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:29:40,300	[INFO]	116	SUCCESS	+13.0	
2020-12-10 06:29:40,300	[DEBUG]	
2020-12-10 06:29:41,006	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:29:44,263	[INFO]	118	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:29:44,264	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:47,569	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:29:47,571	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,35 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 23,36 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:48,515	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:29:48,517	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:29:48,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:48,519	[INFO]	122	SUCCESS	+13.0	
2020-12-10 06:29:48,519	[DEBUG]	
2020-12-10 06:29:52,752	[INFO]	123	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:29:52,753	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:56,905	[INFO]	124	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:29:56,907	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,35 ****
--- 31,38 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:56,908	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:29:56,909	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:29:58,035	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:29:59,170	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:29:59,172	[INFO]	128	SUCCESS	+13.0	
2020-12-10 06:29:59,172	[DEBUG]	
2020-12-10 06:30:00,318	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:30:04,689	[INFO]	130	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:30:04,690	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:30:04,692	[INFO]	131	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:30:04,693	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:30:04,694	[INFO]	132	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:30:04,695	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:30:04,696	[INFO]	133	SUCCESS	+13.0	
2020-12-10 06:30:04,696	[DEBUG]	
2020-12-10 06:30:08,767	[INFO]	134	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:30:08,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 06:30:08,769	[INFO]	135	SUCCESS	+13.0	
2020-12-10 06:30:08,769	[DEBUG]	
2020-12-10 06:30:09,873	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:30:11,008	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:30:11,010	[INFO]	138	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:30:11,011	[DEBUG]	
2020-12-10 06:30:11,012	[INFO]	139	SUCCESS	+13.0	
2020-12-10 06:30:11,012	[DEBUG]	
2020-12-10 06:30:12,190	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:30:13,497	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:30:14,599	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:30:15,739	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:30:16,868	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:30:17,999	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:30:18,888	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:30:20,070	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:30:21,187	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:30:22,340	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:30:27,323	[INFO]	150	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:30:27,325	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:30:28,449	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:30:28,451	[INFO]	152	SUCCESS	+13.0	
2020-12-10 06:30:28,451	[DEBUG]	
2020-12-10 06:30:29,562	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:30:33,769	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:30:33,770	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:30:37,935	[INFO]	155	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:30:37,937	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:30:37,938	[INFO]	156	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:30:37,939	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:30:37,940	[INFO]	157	SUCCESS	+13.0	
2020-12-10 06:30:37,940	[DEBUG]	
2020-12-10 06:30:41,994	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:30:41,995	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:30:41,996	[INFO]	159	SUCCESS	+13.0	
2020-12-10 06:30:41,997	[DEBUG]	
2020-12-10 06:30:43,132	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:30:47,205	[INFO]	161	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:30:47,206	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:30:48,126	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:30:49,090	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:30:49,091	[INFO]	164	SUCCESS	+13.0	
2020-12-10 06:30:49,092	[DEBUG]	
2020-12-10 06:30:50,297	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:30:54,529	[INFO]	166	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:30:54,531	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right = mergesort(right);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:30:54,532	[INFO]	167	SUCCESS	+13.0	
2020-12-10 06:30:54,532	[DEBUG]	
2020-12-10 06:30:58,621	[INFO]	168	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:30:58,622	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:31:02,909	[INFO]	169	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:31:02,910	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:31:04,008	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:31:05,186	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:31:09,549	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:31:09,551	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:31:09,552	[INFO]	173	SUCCESS	+13.0	
2020-12-10 06:31:09,552	[DEBUG]	
2020-12-10 06:31:10,686	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:31:14,801	[INFO]	175	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:31:14,802	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:31:18,926	[INFO]	176	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:31:18,927	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
-             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right = mergesort(right);
+             
  
              return merge(left, right);
          }

2020-12-10 06:31:22,952	[INFO]	177	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:31:22,953	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 06:31:22,954	[INFO]	178	SUCCESS	+13.0	
2020-12-10 06:31:22,954	[DEBUG]	
2020-12-10 06:31:24,138	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:31:25,324	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:31:26,686	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:31:27,881	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:31:32,168	[INFO]	183	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:31:32,169	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 06:31:32,170	[INFO]	184	SUCCESS	+13.0	
2020-12-10 06:31:32,171	[DEBUG]	
2020-12-10 06:31:33,364	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:31:34,579	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:31:39,060	[INFO]	187	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:31:39,062	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:31:39,063	[INFO]	188	SUCCESS	+13.0	
2020-12-10 06:31:39,063	[DEBUG]	
2020-12-10 06:31:43,197	[INFO]	189	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:31:43,198	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:31:44,371	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:31:44,372	[INFO]	191	SUCCESS	+13.0	
2020-12-10 06:31:44,373	[DEBUG]	
2020-12-10 06:31:45,522	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:31:46,660	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:31:50,856	[INFO]	194	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'})
2020-12-10 06:31:50,857	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) > right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:31:50,857	[INFO]	195	SUCCESS	+13.0	
2020-12-10 06:31:50,858	[DEBUG]	
2020-12-10 06:31:52,019	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:31:53,170	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:31:54,321	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:31:55,523	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:31:56,964	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:31:58,580	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:32:04,346	[INFO]	202	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:32:04,347	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:32:04,349	[INFO]	203	SUCCESS	+13.0	
2020-12-10 06:32:04,349	[DEBUG]	
2020-12-10 06:32:05,805	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:32:10,219	[INFO]	205	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:32:10,220	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:32:11,457	[INFO]	206	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:32:12,742	[INFO]	207	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:32:12,745	[INFO]	208	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:32:12,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:32:13,986	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:32:13,989	[INFO]	210	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:32:13,990	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:32:13,992	[INFO]	211	SUCCESS	+13.0	
2020-12-10 06:32:13,993	[DEBUG]	
2020-12-10 06:32:15,274	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:32:20,019	[INFO]	213	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:32:20,021	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:32:20,024	[INFO]	214	SUCCESS	+13.0	
2020-12-10 06:32:20,024	[DEBUG]	
2020-12-10 06:32:24,590	[INFO]	215	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:32:24,591	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:32:25,655	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:32:25,656	[INFO]	217	SUCCESS	+13.0	
2020-12-10 06:32:25,656	[DEBUG]	
2020-12-10 06:32:26,785	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:32:27,945	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:32:29,170	[INFO]	220	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:32:30,352	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:32:31,929	[INFO]	222	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:32:35,933	[INFO]	223	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:32:35,934	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:32:37,268	[INFO]	224	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:32:38,465	[INFO]	225	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:32:39,695	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:32:39,698	[INFO]	227	SUCCESS	+13.0	
2020-12-10 06:32:39,700	[DEBUG]	
2020-12-10 06:32:40,677	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:32:41,660	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:32:42,728	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:32:46,939	[INFO]	231	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:32:46,940	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:32:48,133	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:32:50,131	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:32:51,205	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:32:51,206	[INFO]	235	SUCCESS	+13.0	
2020-12-10 06:32:51,206	[DEBUG]	
2020-12-10 06:32:52,165	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:32:53,275	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:32:54,501	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:32:58,694	[INFO]	239	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:32:58,695	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:32:58,696	[INFO]	240	SUCCESS	+13.0	
2020-12-10 06:32:58,697	[DEBUG]	
2020-12-10 06:33:03,067	[INFO]	241	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:33:03,068	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 06:33:04,124	[INFO]	242	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:33:05,368	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:33:06,893	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:33:06,897	[INFO]	245	SUCCESS	+13.0	
2020-12-10 06:33:06,898	[DEBUG]	
2020-12-10 06:33:08,493	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:33:12,584	[INFO]	247	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:33:12,585	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:33:16,812	[INFO]	248	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:33:16,814	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 46,51 ****
--- 54,61 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:33:17,618	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:33:17,620	[INFO]	250	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:33:17,620	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:33:18,696	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:33:19,917	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:33:21,116	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:33:21,117	[INFO]	254	SUCCESS	+13.0	
2020-12-10 06:33:21,118	[DEBUG]	
2020-12-10 06:33:22,362	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:33:23,624	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:33:24,775	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:33:26,337	[INFO]	258	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:33:27,988	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:33:29,347	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:33:33,779	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:33:33,809	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,39 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:33:33,811	[INFO]	262	SUCCESS	+13.0	
2020-12-10 06:33:33,811	[DEBUG]	
2020-12-10 06:33:34,794	[INFO]	263	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:33:35,838	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:33:40,335	[INFO]	265	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:33:40,338	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:33:41,455	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:33:45,713	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:33:45,714	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         ArrayList<Integer> result = new ArrayList<Integer>(100);
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:33:45,715	[INFO]	268	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:33:45,716	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:33:46,952	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:33:48,196	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:33:49,428	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:33:50,654	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:33:52,042	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:33:52,045	[INFO]	274	SUCCESS	+13.0	
2020-12-10 06:33:52,045	[DEBUG]	
2020-12-10 06:33:53,415	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:33:57,956	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:33:57,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:33:58,882	[INFO]	277	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:33:59,973	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:34:00,964	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:34:00,965	[INFO]	280	SUCCESS	+13.0	
2020-12-10 06:34:00,966	[DEBUG]	
2020-12-10 06:34:02,148	[INFO]	281	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:34:03,399	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:34:04,604	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:34:08,665	[INFO]	284	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:34:08,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:34:08,668	[INFO]	285	SUCCESS	+13.0	
2020-12-10 06:34:08,668	[DEBUG]	
2020-12-10 06:34:12,684	[INFO]	286	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:34:12,685	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:34:13,830	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:34:15,049	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:34:15,051	[INFO]	289	SUCCESS	+13.0	
2020-12-10 06:34:15,051	[DEBUG]	
2020-12-10 06:34:16,298	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:34:17,471	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:34:18,638	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:34:20,017	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:34:21,192	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:34:22,727	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:34:26,523	[INFO]	296	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:34:26,524	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:34:26,525	[INFO]	297	SUCCESS	+13.0	
2020-12-10 06:34:26,526	[DEBUG]	
2020-12-10 06:34:27,858	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:34:29,231	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:34:30,129	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:34:31,181	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:34:32,374	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:34:33,639	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:34:34,925	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:34:36,063	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:34:37,370	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:34:42,417	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:34:42,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:34:42,421	[INFO]	308	SUCCESS	+13.0	
2020-12-10 06:34:42,422	[DEBUG]	
2020-12-10 06:34:46,457	[INFO]	309	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:34:46,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:34:47,677	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:34:47,678	[INFO]	311	SUCCESS	+13.0	
2020-12-10 06:34:47,679	[DEBUG]	
2020-12-10 06:34:48,620	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:34:49,826	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:34:51,045	[INFO]	314	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:34:55,383	[INFO]	315	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:34:55,384	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:34:55,385	[INFO]	316	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:34:55,385	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 06:34:56,224	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:35:00,333	[INFO]	318	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:35:00,334	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:35:04,589	[INFO]	319	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:35:04,591	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 39,44 ****
--- 47,55 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:35:05,758	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:35:09,680	[INFO]	321	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:35:09,681	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:35:10,617	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:35:11,598	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:35:11,601	[INFO]	324	SUCCESS	+13.0	
2020-12-10 06:35:11,602	[DEBUG]	
2020-12-10 06:35:12,515	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:35:13,440	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:35:14,336	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:35:15,235	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:35:18,406	[INFO]	329	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 06:35:18,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:35:18,408	[INFO]	330	SUCCESS	+13.0	
2020-12-10 06:35:18,408	[DEBUG]	
2020-12-10 06:35:19,276	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:35:20,184	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:35:23,423	[INFO]	333	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:35:23,424	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:35:23,425	[INFO]	334	SUCCESS	+13.0	
2020-12-10 06:35:23,425	[DEBUG]	
2020-12-10 06:35:26,687	[INFO]	335	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:35:26,689	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:35:29,980	[INFO]	336	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:35:29,982	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:35:30,905	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:35:31,798	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:35:31,799	[INFO]	339	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:35:31,800	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:35:31,801	[INFO]	340	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:35:31,801	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:35:31,802	[INFO]	341	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:35:31,802	[DEBUG]	
2020-12-10 06:35:31,803	[INFO]	342	SUCCESS	+13.0	
2020-12-10 06:35:31,803	[DEBUG]	
2020-12-10 06:35:35,162	[INFO]	343	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:35:35,163	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:35:35,164	[INFO]	344	SUCCESS	+13.0	
2020-12-10 06:35:35,164	[DEBUG]	
2020-12-10 06:35:36,353	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:35:37,673	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:35:41,286	[INFO]	347	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:35:41,289	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:35:41,291	[INFO]	348	SUCCESS	+13.0	
2020-12-10 06:35:41,291	[DEBUG]	
2020-12-10 06:35:42,184	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:35:45,429	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:35:45,432	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 06:35:45,433	[INFO]	351	SUCCESS	+13.0	
2020-12-10 06:35:45,434	[DEBUG]	
2020-12-10 06:35:46,343	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:35:47,224	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:35:48,113	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:35:49,009	[INFO]	355	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:35:52,341	[INFO]	356	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:35:52,341	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:35:52,342	[INFO]	357	SUCCESS	+13.0	
2020-12-10 06:35:52,342	[DEBUG]	
2020-12-10 06:35:53,187	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:35:54,075	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:35:54,991	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:35:55,897	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:35:56,805	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:36:00,041	[INFO]	363	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:36:00,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:36:00,888	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:36:00,889	[INFO]	365	SUCCESS	+13.0	
2020-12-10 06:36:00,889	[DEBUG]	
2020-12-10 06:36:01,787	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:36:02,657	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:36:03,568	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:36:06,906	[INFO]	369	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:36:06,907	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:36:06,908	[INFO]	370	SUCCESS	+13.0	
2020-12-10 06:36:06,908	[DEBUG]	
2020-12-10 06:36:07,753	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:36:11,108	[INFO]	372	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:36:11,109	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:36:11,109	[INFO]	373	SUCCESS	+13.0	
2020-12-10 06:36:11,110	[DEBUG]	
2020-12-10 06:36:14,352	[INFO]	374	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:36:14,353	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:36:14,354	[INFO]	375	SUCCESS	+13.0	
2020-12-10 06:36:14,354	[DEBUG]	
2020-12-10 06:36:15,200	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:36:16,076	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:36:16,954	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:36:20,254	[INFO]	379	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:36:20,255	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:36:20,255	[INFO]	380	SUCCESS	+13.0	
2020-12-10 06:36:20,256	[DEBUG]	
2020-12-10 06:36:23,445	[INFO]	381	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:36:23,446	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:36:23,447	[INFO]	382	SUCCESS	+13.0	
2020-12-10 06:36:23,447	[DEBUG]	
2020-12-10 06:36:24,322	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:36:27,546	[INFO]	384	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:36:27,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:36:28,484	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:36:31,757	[INFO]	386	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:36:31,758	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 39,44 ****
--- 40,48 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:36:35,020	[INFO]	387	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:36:35,021	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:36:35,901	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:36:36,810	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:36:36,811	[INFO]	390	SUCCESS	+13.0	
2020-12-10 06:36:36,812	[DEBUG]	
2020-12-10 06:36:37,780	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:36:41,095	[INFO]	392	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:36:41,096	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:36:41,992	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:36:42,908	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:36:42,909	[INFO]	395	SUCCESS	+13.0	
2020-12-10 06:36:42,909	[DEBUG]	
2020-12-10 06:36:46,102	[INFO]	396	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:36:46,102	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:36:49,363	[INFO]	397	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:36:49,364	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,40 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:36:49,365	[INFO]	398	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:36:49,366	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,40 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:36:52,571	[INFO]	399	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:36:52,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 35,40 ****
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:36:55,801	[INFO]	400	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:36:55,802	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:36:56,673	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:36:56,674	[INFO]	402	SUCCESS	+13.0	
2020-12-10 06:36:56,674	[DEBUG]	
2020-12-10 06:36:57,381	[INFO]	403	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:36:58,241	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:36:59,114	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:36:59,989	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:37:00,873	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:37:04,076	[INFO]	408	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:37:04,077	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:37:04,962	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:37:04,963	[INFO]	410	SUCCESS	+13.0	
2020-12-10 06:37:04,963	[DEBUG]	
2020-12-10 06:37:05,877	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:37:09,102	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:37:09,103	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:37:09,104	[INFO]	413	SUCCESS	+13.0	
2020-12-10 06:37:09,104	[DEBUG]	
2020-12-10 06:37:09,957	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:37:13,150	[INFO]	415	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:37:13,151	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:37:13,152	[INFO]	416	SUCCESS	+13.0	
2020-12-10 06:37:13,152	[DEBUG]	
2020-12-10 06:37:16,420	[INFO]	417	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:37:16,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:37:16,423	[INFO]	418	SUCCESS	+13.0	
2020-12-10 06:37:16,424	[DEBUG]	
2020-12-10 06:37:16,425	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:37:17,332	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:37:17,333	[INFO]	421	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:37:17,333	[DEBUG]	
2020-12-10 06:37:18,243	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:37:21,515	[INFO]	423	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:37:21,516	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:37:21,517	[INFO]	424	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:37:21,517	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:37:22,408	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:37:22,410	[INFO]	426	SUCCESS	+13.0	
2020-12-10 06:37:22,411	[DEBUG]	
2020-12-10 06:37:23,285	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:37:23,287	[INFO]	428	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:37:23,287	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:37:24,212	[INFO]	429	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:37:25,092	[INFO]	430	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:37:25,093	[INFO]	431	SUCCESS	+13.0	
2020-12-10 06:37:25,094	[DEBUG]	
2020-12-10 06:37:25,993	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:37:29,311	[INFO]	433	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:37:29,312	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:37:30,198	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:37:30,901	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:37:31,830	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:37:32,728	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:37:33,631	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:37:33,632	[INFO]	439	SUCCESS	+13.0	
2020-12-10 06:37:33,632	[DEBUG]	
2020-12-10 06:37:34,556	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:37:37,851	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:37:37,853	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:37:37,853	[INFO]	442	SUCCESS	+13.0	
2020-12-10 06:37:37,854	[DEBUG]	
2020-12-10 06:37:41,010	[INFO]	443	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:37:41,011	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:37:41,011	[INFO]	444	SUCCESS	+13.0	
2020-12-10 06:37:41,012	[DEBUG]	
2020-12-10 06:37:41,884	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:37:45,048	[INFO]	446	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 06:37:45,049	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:37:45,050	[INFO]	447	SUCCESS	+13.0	
2020-12-10 06:37:45,050	[DEBUG]	
2020-12-10 06:37:45,945	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:37:46,665	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:37:47,531	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:37:48,396	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:37:49,315	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:37:50,199	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:37:51,098	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:37:54,421	[INFO]	455	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:37:54,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:37:55,318	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:37:56,213	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:37:56,214	[INFO]	458	SUCCESS	+13.0	
2020-12-10 06:37:56,214	[DEBUG]	
2020-12-10 06:37:57,093	[INFO]	459	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:37:57,965	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:37:58,846	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:37:59,764	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:38:03,068	[INFO]	463	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:38:03,069	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:38:03,906	[INFO]	464	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:38:03,907	[INFO]	465	SUCCESS	+13.0	
2020-12-10 06:38:03,908	[DEBUG]	
2020-12-10 06:38:04,793	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:38:04,795	[INFO]	467	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:38:05,673	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:38:06,571	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:38:07,461	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:38:08,336	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:38:09,227	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:38:09,925	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:38:10,821	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:38:14,098	[INFO]	475	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:38:14,099	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:38:14,100	[INFO]	476	SUCCESS	+13.0	
2020-12-10 06:38:14,100	[DEBUG]	
2020-12-10 06:38:14,974	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:38:18,251	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:38:18,252	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:38:18,253	[INFO]	479	SUCCESS	+13.0	
2020-12-10 06:38:18,253	[DEBUG]	
2020-12-10 06:38:19,098	[INFO]	480	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:38:19,974	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:38:20,890	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:38:21,779	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:38:25,022	[INFO]	484	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:38:25,023	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:38:25,733	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:38:26,599	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:38:27,511	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:38:28,387	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:38:28,388	[INFO]	489	SUCCESS	+13.0	
2020-12-10 06:38:28,389	[DEBUG]	
2020-12-10 06:38:29,283	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:38:32,571	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:38:32,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:38:33,430	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:38:33,431	[INFO]	493	SUCCESS	+13.0	
2020-12-10 06:38:33,431	[DEBUG]	
2020-12-10 06:38:33,432	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:38:36,635	[INFO]	495	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:38:36,636	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:38:39,973	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:38:39,974	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:38:40,812	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:38:41,690	[INFO]	498	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:38:44,886	[INFO]	499	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:38:44,887	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:38:44,887	[INFO]	500	SUCCESS	+13.0	
2020-12-10 06:38:44,888	[DEBUG]	
2020-12-10 06:38:44,888	[INFO]	==== END ====
2020-12-10 06:38:44,888	[INFO]	Reason: step budget
2020-12-10 06:38:44,888	[INFO]	
2020-12-10 06:38:44,889	[INFO]	========== EPOCH 7 ==========
2020-12-10 06:38:44,889	[INFO]	==== WARMUP ====
2020-12-10 06:38:48,107	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:38:48,108	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:38:51,431	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:38:51,431	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:38:54,630	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:38:54,630	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:38:57,928	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 06:38:57,929	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:38:57,929	[INFO]	==== START ====
2020-12-10 06:38:58,763	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:39:01,999	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:39:02,000	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:39:02,904	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:39:02,905	[INFO]	4	SUCCESS	+13.0	
2020-12-10 06:39:02,906	[DEBUG]	
2020-12-10 06:39:03,922	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:39:04,810	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:39:08,187	[INFO]	7	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:39:08,188	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:39:08,188	[INFO]	8	SUCCESS	+13.0	
2020-12-10 06:39:08,189	[DEBUG]	
2020-12-10 06:39:09,037	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:39:09,927	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:39:10,837	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:39:14,128	[INFO]	12	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:39:14,129	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:39:14,130	[INFO]	13	SUCCESS	+13.0	
2020-12-10 06:39:14,130	[DEBUG]	
2020-12-10 06:39:14,996	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:39:15,892	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:39:16,774	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:39:17,667	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:39:20,919	[INFO]	18	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:39:20,920	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:39:21,789	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:39:25,034	[INFO]	20	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:39:25,035	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:25,036	[INFO]	21	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 06:39:25,037	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:25,751	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:39:26,618	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:39:29,949	[INFO]	24	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:39:29,952	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,40 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 45,50 ****
--- 49,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:33,278	[INFO]	25	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:39:33,279	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 45,50 ****
--- 49,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:36,470	[INFO]	26	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:39:36,472	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,36 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
-         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          return result;
      }
  
***************
*** 45,50 ****
--- 41,47 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:36,473	[INFO]	27	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:39:36,473	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 45,50 ****
--- 49,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:37,409	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:39:40,792	[INFO]	29	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:39:40,793	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 45,50 ****
--- 49,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:44,122	[INFO]	30	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:39:44,123	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:47,264	[INFO]	31	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 06:39:47,265	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 06:39:47,265	[INFO]	32	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 06:39:47,266	[DEBUG]	
2020-12-10 06:39:48,136	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:39:49,043	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:39:49,939	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:39:49,940	[INFO]	36	SUCCESS	+13.0	
2020-12-10 06:39:49,941	[DEBUG]	
2020-12-10 06:39:50,856	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:39:54,065	[INFO]	38	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:39:54,065	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:39:54,066	[INFO]	39	SUCCESS	+13.0	
2020-12-10 06:39:54,067	[DEBUG]	
2020-12-10 06:39:54,962	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:39:58,234	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:39:58,235	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:40:01,417	[INFO]	42	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:40:01,418	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:40:04,640	[INFO]	43	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:40:04,641	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:40:05,492	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:40:06,402	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:40:06,405	[INFO]	46	SUCCESS	+13.0	
2020-12-10 06:40:06,405	[DEBUG]	
2020-12-10 06:40:07,325	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:40:10,593	[INFO]	48	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:40:10,594	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:40:10,595	[INFO]	49	SUCCESS	+13.0	
2020-12-10 06:40:10,595	[DEBUG]	
2020-12-10 06:40:11,461	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:40:12,341	[INFO]	51	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:40:13,267	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:40:14,163	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:40:15,057	[INFO]	54	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:40:15,946	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:40:16,846	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:40:20,026	[INFO]	57	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:40:20,027	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:40:23,301	[INFO]	58	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:40:23,302	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,49 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
-             ArrayList<Integer> right = new ArrayList<Integer>(100);
-             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:40:24,162	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:40:27,386	[INFO]	60	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:40:27,387	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:40:28,260	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:40:28,261	[INFO]	62	SUCCESS	+13.0	
2020-12-10 06:40:28,262	[DEBUG]	
2020-12-10 06:40:29,190	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:40:30,062	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:40:33,344	[INFO]	65	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:40:33,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:40:34,245	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:40:34,246	[INFO]	67	SUCCESS	+13.0	
2020-12-10 06:40:34,246	[DEBUG]	
2020-12-10 06:40:37,955	[INFO]	68	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:40:37,957	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:40:38,806	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:40:38,807	[INFO]	70	SUCCESS	+13.0	
2020-12-10 06:40:38,808	[DEBUG]	
2020-12-10 06:40:39,704	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:40:40,611	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:40:43,861	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:40:43,862	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 06:40:43,863	[INFO]	74	SUCCESS	+13.0	
2020-12-10 06:40:43,863	[DEBUG]	
2020-12-10 06:40:47,108	[INFO]	75	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:40:47,109	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:40:50,378	[INFO]	76	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:40:50,379	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 27,32 ****
--- 28,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 06:40:50,380	[INFO]	77	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:40:50,381	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:40:50,381	[INFO]	78	SUCCESS	+13.0	
2020-12-10 06:40:50,382	[DEBUG]	
2020-12-10 06:40:53,636	[INFO]	79	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:40:53,637	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:40:53,638	[INFO]	80	SUCCESS	+13.0	
2020-12-10 06:40:53,639	[DEBUG]	
2020-12-10 06:40:54,524	[INFO]	81	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:40:55,430	[INFO]	82	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:40:56,333	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:40:57,230	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:40:58,161	[INFO]	85	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:40:59,039	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:41:02,099	[INFO]	87	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:41:02,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:02,101	[INFO]	88	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:41:02,101	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:02,102	[INFO]	89	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:41:02,103	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:02,103	[INFO]	90	SUCCESS	+13.0	
2020-12-10 06:41:02,104	[DEBUG]	
2020-12-10 06:41:02,993	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:41:06,239	[INFO]	92	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:41:06,240	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:41:09,495	[INFO]	93	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:41:09,496	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,28 ****
--- 20,38 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:41:09,497	[INFO]	94	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:41:09,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:41:10,222	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:41:11,138	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:41:11,139	[INFO]	97	SUCCESS	+13.0	
2020-12-10 06:41:11,139	[DEBUG]	
2020-12-10 06:41:12,006	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:41:15,574	[INFO]	99	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:41:15,575	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:41:16,457	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:41:16,458	[INFO]	101	SUCCESS	+13.0	
2020-12-10 06:41:16,458	[DEBUG]	
2020-12-10 06:41:17,331	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:41:18,231	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:41:21,372	[INFO]	104	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:41:21,374	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 06:41:22,235	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:41:22,236	[INFO]	106	SUCCESS	+13.0	
2020-12-10 06:41:22,236	[DEBUG]	
2020-12-10 06:41:23,116	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:41:24,019	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:41:24,909	[INFO]	109	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:41:25,806	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:41:26,664	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:41:30,031	[INFO]	112	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:41:30,032	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:41:30,864	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:41:30,865	[INFO]	114	SUCCESS	+13.0	
2020-12-10 06:41:30,865	[DEBUG]	
2020-12-10 06:41:34,132	[INFO]	115	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:41:34,133	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 06:41:34,998	[INFO]	116	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:41:34,999	[INFO]	117	SUCCESS	+13.0	
2020-12-10 06:41:35,000	[DEBUG]	
2020-12-10 06:41:35,876	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:41:35,878	[INFO]	119	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:41:39,140	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:41:39,140	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,55 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:41:39,141	[INFO]	121	SUCCESS	+13.0	
2020-12-10 06:41:39,141	[DEBUG]	
2020-12-10 06:41:40,028	[INFO]	122	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:41:40,929	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:41:44,217	[INFO]	124	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:41:44,218	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:47,462	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:41:47,463	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:47,464	[INFO]	126	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:41:47,465	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:47,466	[INFO]	127	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:41:47,467	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:41:50,726	[INFO]	128	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:41:50,727	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 43,48 ****
--- 44,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
+             right.addAll(arr.subList(middle, arr.size()));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:41:54,016	[INFO]	129	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:41:54,018	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,30 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,35 ****
--- 32,45 ----
                  j++;
              }
          }
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,48 ****
--- 53,60 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
+             right.addAll(arr.subList(middle, arr.size()));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:41:54,889	[INFO]	130	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:41:58,153	[INFO]	131	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:41:58,154	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,48 ****
--- 52,59 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
+             right.addAll(arr.subList(middle, arr.size()));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:01,712	[INFO]	132	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:42:01,714	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,48 ****
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:04,981	[INFO]	133	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:42:04,984	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,30 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 32,45 ----
                  j++;
              }
          }
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
!         i++;
          return result;
      }
  
***************
*** 43,48 ****
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:08,227	[INFO]	134	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:42:08,228	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:11,413	[INFO]	135	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:42:11,414	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  

2020-12-10 06:42:11,415	[INFO]	136	SUCCESS	+13.0	
2020-12-10 06:42:11,415	[DEBUG]	
2020-12-10 06:42:14,650	[INFO]	137	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:42:14,651	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:42:14,652	[INFO]	138	SUCCESS	+13.0	
2020-12-10 06:42:14,652	[DEBUG]	
2020-12-10 06:42:15,536	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:42:16,413	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:42:19,728	[INFO]	141	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:42:19,729	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:42:20,585	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:42:20,586	[INFO]	143	SUCCESS	+13.0	
2020-12-10 06:42:20,586	[DEBUG]	
2020-12-10 06:42:23,932	[INFO]	144	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:42:23,933	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:42:23,934	[INFO]	145	SUCCESS	+13.0	
2020-12-10 06:42:23,934	[DEBUG]	
2020-12-10 06:42:24,823	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:42:28,247	[INFO]	147	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:42:28,247	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:42:31,558	[INFO]	148	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:42:31,559	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:42:32,459	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:42:33,381	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:42:36,748	[INFO]	151	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:42:36,749	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:40,004	[INFO]	152	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:42:40,005	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 result.add(right.get(j));
+                 result.add(left.get(i));
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,48 ****
--- 52,60 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:43,337	[INFO]	153	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:42:43,338	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,48 ****
--- 52,60 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:43,339	[INFO]	154	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:42:43,340	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,48 ****
--- 52,60 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:46,673	[INFO]	155	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:42:46,674	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,48 ****
--- 52,60 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:42:47,516	[INFO]	156	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:42:50,792	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:42:50,793	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:42:50,794	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:42:50,795	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:42:51,724	[INFO]	159	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:42:51,728	[INFO]	160	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:42:51,729	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:42:54,848	[INFO]	161	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:42:54,849	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:42:58,037	[INFO]	162	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:42:58,038	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:42:58,039	[INFO]	163	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:42:58,039	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:42:58,040	[INFO]	164	SUCCESS	+13.0	
2020-12-10 06:42:58,040	[DEBUG]	
2020-12-10 06:42:58,900	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:42:59,626	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:43:00,480	[INFO]	167	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:43:01,351	[INFO]	168	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:43:02,229	[INFO]	169	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:43:03,094	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:43:03,972	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:43:04,892	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:43:08,153	[INFO]	173	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:43:08,154	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:43:09,019	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:43:09,921	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:43:09,923	[INFO]	176	SUCCESS	+13.0	
2020-12-10 06:43:09,924	[DEBUG]	
2020-12-10 06:43:10,856	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:43:11,715	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:43:12,613	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:43:13,317	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:43:16,602	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:43:16,602	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:43:16,603	[INFO]	182	SUCCESS	+13.0	
2020-12-10 06:43:16,604	[DEBUG]	
2020-12-10 06:43:17,461	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:43:18,376	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:43:19,251	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:43:20,174	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:43:20,177	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:43:23,460	[INFO]	188	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:43:23,461	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:43:24,337	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:43:24,338	[INFO]	190	SUCCESS	+13.0	
2020-12-10 06:43:24,338	[DEBUG]	
2020-12-10 06:43:25,192	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:43:28,500	[INFO]	192	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:43:28,501	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:43:28,502	[INFO]	193	SUCCESS	+13.0	
2020-12-10 06:43:28,502	[DEBUG]	
2020-12-10 06:43:31,657	[INFO]	194	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 06:43:31,659	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:43:31,660	[INFO]	195	SUCCESS	+13.0	
2020-12-10 06:43:31,661	[DEBUG]	
2020-12-10 06:43:31,663	[INFO]	196	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:43:31,663	[DEBUG]	
2020-12-10 06:43:34,910	[INFO]	197	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:43:34,911	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:43:34,912	[INFO]	198	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:43:34,913	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:43:38,093	[INFO]	199	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:43:38,095	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,28 ****
--- 19,30 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:43:38,096	[INFO]	200	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:43:38,096	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:43:38,097	[INFO]	201	SUCCESS	+13.0	
2020-12-10 06:43:38,097	[DEBUG]	
2020-12-10 06:43:38,959	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:43:39,888	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:43:43,107	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:43:43,108	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:43:43,981	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:43:44,873	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:43:45,776	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:43:46,654	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:43:46,655	[INFO]	209	SUCCESS	+13.0	
2020-12-10 06:43:46,655	[DEBUG]	
2020-12-10 06:43:47,527	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:43:48,411	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:43:49,347	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:43:52,661	[INFO]	213	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:43:52,662	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:43:52,662	[INFO]	214	SUCCESS	+13.0	
2020-12-10 06:43:52,663	[DEBUG]	
2020-12-10 06:43:55,909	[INFO]	215	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:43:55,910	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:43:55,910	[INFO]	216	SUCCESS	+13.0	
2020-12-10 06:43:55,911	[DEBUG]	
2020-12-10 06:43:59,164	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:43:59,165	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:43:59,166	[INFO]	218	SUCCESS	+13.0	
2020-12-10 06:43:59,167	[DEBUG]	
2020-12-10 06:44:02,458	[INFO]	219	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:44:02,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 06:44:03,327	[INFO]	220	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:44:06,627	[INFO]	221	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:44:06,629	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,32 ****
--- 25,37 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             }
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 06:44:09,816	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:44:09,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:44:10,768	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:44:10,771	[INFO]	224	SUCCESS	+13.0	
2020-12-10 06:44:10,772	[DEBUG]	
2020-12-10 06:44:11,695	[INFO]	225	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:44:14,913	[INFO]	226	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:44:14,914	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:44:14,915	[INFO]	227	SUCCESS	+13.0	
2020-12-10 06:44:14,915	[DEBUG]	
2020-12-10 06:44:15,800	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:44:16,691	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:44:17,577	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:44:18,472	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:44:19,379	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:44:20,239	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:44:21,167	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:44:22,025	[INFO]	235	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:44:22,748	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:44:25,940	[INFO]	237	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:44:25,941	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:44:25,942	[INFO]	238	SUCCESS	+13.0	
2020-12-10 06:44:25,943	[DEBUG]	
2020-12-10 06:44:29,222	[INFO]	239	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:44:29,223	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 06:44:29,224	[INFO]	240	SUCCESS	+13.0	
2020-12-10 06:44:29,224	[DEBUG]	
2020-12-10 06:44:30,070	[INFO]	241	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:44:33,347	[INFO]	242	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:44:33,348	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:44:36,414	[INFO]	243	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:44:36,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,36 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 06:44:36,416	[INFO]	244	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:44:36,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:44:37,291	[INFO]	245	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:44:37,293	[INFO]	246	SUCCESS	+13.0	
2020-12-10 06:44:37,293	[DEBUG]	
2020-12-10 06:44:37,997	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:44:38,705	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:44:39,595	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:44:40,460	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:44:41,343	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:44:42,202	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:44:42,949	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:44:43,835	[INFO]	254	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:44:47,084	[INFO]	255	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:44:47,086	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:47,087	[INFO]	256	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 06:44:47,088	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:50,386	[INFO]	257	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:44:50,387	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:50,388	[INFO]	258	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 06:44:50,389	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:53,709	[INFO]	259	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:44:53,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,47 ****
--- 36,49 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:54,573	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:44:54,577	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:44:54,579	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,47 ****
--- 36,49 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:44:57,810	[INFO]	262	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:44:57,811	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:44:58,692	[INFO]	263	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:45:01,976	[INFO]	264	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:45:01,977	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:45:01,979	[INFO]	265	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:45:01,979	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:45:01,980	[INFO]	266	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:45:01,981	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:45:05,098	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:45:05,099	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:45:05,101	[INFO]	268	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:45:05,101	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:45:08,279	[INFO]	269	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:45:08,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:09,201	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:45:12,409	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:45:12,410	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 47,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:12,412	[INFO]	272	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:45:12,412	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:13,310	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:45:16,539	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:45:16,540	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,39 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 36,41 ****
--- 47,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 56,62 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:19,675	[INFO]	275	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:45:19,676	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,39 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 55,61 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:20,595	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:45:21,492	[INFO]	277	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:45:24,911	[INFO]	278	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:45:24,912	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,41 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 57,63 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:28,027	[INFO]	279	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:45:28,028	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,35 ****
--- 31,38 ----
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 47,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:31,257	[INFO]	280	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:45:31,258	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:45:34,461	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:45:34,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:45:34,463	[INFO]	282	SUCCESS	+13.0	
2020-12-10 06:45:34,463	[DEBUG]	
2020-12-10 06:45:38,828	[INFO]	283	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:45:38,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:45:39,930	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:45:41,066	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:45:41,067	[INFO]	286	SUCCESS	+13.0	
2020-12-10 06:45:41,068	[DEBUG]	
2020-12-10 06:45:42,241	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:45:45,975	[INFO]	288	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:45:45,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:45:45,977	[INFO]	289	SUCCESS	+13.0	
2020-12-10 06:45:45,977	[DEBUG]	
2020-12-10 06:45:49,260	[INFO]	290	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:45:49,261	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:45:49,262	[INFO]	291	SUCCESS	+13.0	
2020-12-10 06:45:49,262	[DEBUG]	
2020-12-10 06:45:50,117	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:45:51,046	[INFO]	293	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:45:54,311	[INFO]	294	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:45:54,312	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:45:57,551	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:45:57,552	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,45 ****
--- 36,47 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:46:00,881	[INFO]	296	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:46:00,882	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:46:00,883	[INFO]	297	SUCCESS	+13.0	
2020-12-10 06:46:00,883	[DEBUG]	
2020-12-10 06:46:01,758	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:46:02,679	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:46:03,577	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:46:04,482	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:46:05,362	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:46:06,265	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:46:07,201	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:46:10,431	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:46:10,432	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:46:10,433	[INFO]	306	SUCCESS	+13.0	
2020-12-10 06:46:10,433	[DEBUG]	
2020-12-10 06:46:13,698	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:46:13,699	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:46:14,558	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:46:15,534	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:46:15,536	[INFO]	310	SUCCESS	+13.0	
2020-12-10 06:46:15,537	[DEBUG]	
2020-12-10 06:46:16,474	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:46:17,372	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:46:18,086	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:46:21,362	[INFO]	314	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:46:21,363	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:46:22,252	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:46:23,174	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:46:24,062	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:46:24,063	[INFO]	318	SUCCESS	+13.0	
2020-12-10 06:46:24,064	[DEBUG]	
2020-12-10 06:46:25,037	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:46:25,940	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:46:26,649	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:46:29,893	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:46:29,894	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:46:29,894	[INFO]	323	SUCCESS	+13.0	
2020-12-10 06:46:29,895	[DEBUG]	
2020-12-10 06:46:30,762	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:46:31,634	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:46:32,534	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:46:33,457	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:46:34,338	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:46:35,224	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:46:36,097	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:46:36,991	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:46:37,902	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:46:41,163	[INFO]	333	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:46:41,164	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:46:41,165	[INFO]	334	SUCCESS	+13.0	
2020-12-10 06:46:41,165	[DEBUG]	
2020-12-10 06:46:44,320	[INFO]	335	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:46:44,323	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:46:47,658	[INFO]	336	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:46:47,661	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:46:48,502	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:46:49,361	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:46:52,640	[INFO]	339	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:46:52,641	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:46:52,641	[INFO]	340	SUCCESS	+13.0	
2020-12-10 06:46:52,642	[DEBUG]	
2020-12-10 06:46:53,540	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:46:54,461	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:46:55,357	[INFO]	343	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:46:56,235	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:46:57,118	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:46:58,043	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:46:58,922	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:46:59,823	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:47:03,032	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:47:03,033	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 06:47:03,034	[INFO]	350	SUCCESS	+13.0	
2020-12-10 06:47:03,034	[DEBUG]	
2020-12-10 06:47:03,917	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:47:07,147	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:47:07,148	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:47:08,031	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:47:08,894	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:47:08,896	[INFO]	355	SUCCESS	+13.0	
2020-12-10 06:47:08,896	[DEBUG]	
2020-12-10 06:47:08,897	[INFO]	356	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:47:08,897	[DEBUG]	
2020-12-10 06:47:08,898	[INFO]	357	SUCCESS	+13.0	
2020-12-10 06:47:08,898	[DEBUG]	
2020-12-10 06:47:09,776	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:47:10,676	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:47:13,946	[INFO]	360	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:47:13,947	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:47:13,948	[INFO]	361	SUCCESS	+13.0	
2020-12-10 06:47:13,948	[DEBUG]	
2020-12-10 06:47:17,116	[INFO]	362	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:47:17,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:47:18,059	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:47:18,945	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:47:19,718	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:47:22,940	[INFO]	366	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:47:22,941	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 32,38 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 06:47:23,798	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:47:24,707	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:47:25,595	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:47:25,597	[INFO]	370	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:47:25,597	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:47:26,491	[INFO]	371	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:47:26,492	[INFO]	372	SUCCESS	+13.0	
2020-12-10 06:47:26,492	[DEBUG]	
2020-12-10 06:47:29,782	[INFO]	373	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:47:29,783	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:47:30,640	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:47:31,541	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:47:31,542	[INFO]	376	SUCCESS	+13.0	
2020-12-10 06:47:31,542	[DEBUG]	
2020-12-10 06:47:32,425	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:47:33,313	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:47:34,171	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:47:35,079	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:47:35,975	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:47:39,254	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:47:39,255	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:47:39,256	[INFO]	383	SUCCESS	+13.0	
2020-12-10 06:47:39,256	[DEBUG]	
2020-12-10 06:47:40,135	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:47:41,036	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:47:41,932	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:47:42,830	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:47:43,719	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:47:44,592	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:47:45,475	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:47:48,759	[INFO]	391	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:47:48,761	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:47:49,667	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:47:49,669	[INFO]	393	SUCCESS	+13.0	
2020-12-10 06:47:49,670	[DEBUG]	
2020-12-10 06:47:50,561	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:47:53,945	[INFO]	395	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:47:53,947	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 06:47:53,948	[INFO]	396	SUCCESS	+13.0	
2020-12-10 06:47:53,949	[DEBUG]	
2020-12-10 06:47:54,624	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:47:54,625	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:47:55,454	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:47:56,347	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:47:59,638	[INFO]	401	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:47:59,639	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:48:00,490	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:48:00,492	[INFO]	403	SUCCESS	+13.0	
2020-12-10 06:48:00,492	[DEBUG]	
2020-12-10 06:48:03,749	[INFO]	404	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:48:03,750	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:48:03,751	[INFO]	405	SUCCESS	+13.0	
2020-12-10 06:48:03,751	[DEBUG]	
2020-12-10 06:48:04,619	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:48:05,498	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:48:06,374	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:48:07,287	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:48:10,528	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:48:10,531	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:48:10,532	[INFO]	411	SUCCESS	+13.0	
2020-12-10 06:48:10,533	[DEBUG]	
2020-12-10 06:48:13,664	[INFO]	412	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:48:13,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:48:14,517	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:48:14,518	[INFO]	414	SUCCESS	+13.0	
2020-12-10 06:48:14,519	[DEBUG]	
2020-12-10 06:48:15,398	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:48:18,661	[INFO]	416	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:48:18,662	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
+ 
              return merge(left, right);
          }
      }

2020-12-10 06:48:18,662	[INFO]	417	SUCCESS	+13.0	
2020-12-10 06:48:18,663	[DEBUG]	
2020-12-10 06:48:21,899	[INFO]	418	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:48:21,900	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:48:22,790	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:48:22,791	[INFO]	420	SUCCESS	+13.0	
2020-12-10 06:48:22,791	[DEBUG]	
2020-12-10 06:48:23,685	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:48:26,969	[INFO]	422	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:48:26,970	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:48:30,253	[INFO]	423	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:48:30,254	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:48:33,651	[INFO]	424	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:48:33,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:48:33,653	[INFO]	425	SUCCESS	+13.0	
2020-12-10 06:48:33,653	[DEBUG]	
2020-12-10 06:48:36,928	[INFO]	426	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:48:36,930	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:48:36,930	[INFO]	427	SUCCESS	+13.0	
2020-12-10 06:48:36,931	[DEBUG]	
2020-12-10 06:48:37,806	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:48:41,078	[INFO]	429	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 06:48:41,079	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:48:44,425	[INFO]	430	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:48:44,428	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,32 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
+                 j++;
                  j++;
              }
          }

2020-12-10 06:48:45,292	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:48:46,186	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:48:47,084	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:48:47,974	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:48:47,975	[INFO]	435	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 06:48:47,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:48:47,976	[INFO]	436	SUCCESS	+13.0	
2020-12-10 06:48:47,976	[DEBUG]	
2020-12-10 06:48:48,703	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:48:49,600	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:48:50,541	[INFO]	439	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:48:51,438	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:48:54,734	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:48:54,735	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:48:57,984	[INFO]	442	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:48:57,985	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 40,45 ****
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:01,233	[INFO]	443	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:49:01,236	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,29 ****
--- 20,39 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 40,45 ****
--- 50,56 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:04,512	[INFO]	444	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:49:04,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 40,45 ****
--- 49,55 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:04,517	[INFO]	445	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:49:04,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:05,376	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:49:08,777	[INFO]	447	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:49:08,779	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 42,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:09,669	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:49:10,567	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:49:10,569	[INFO]	450	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:49:10,570	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 42,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:11,454	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:49:14,670	[INFO]	452	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:49:14,671	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:49:14,672	[INFO]	453	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:49:14,673	[DEBUG]	
2020-12-10 06:49:14,673	[INFO]	454	SUCCESS	+13.0	
2020-12-10 06:49:14,673	[DEBUG]	
2020-12-10 06:49:15,525	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:49:16,425	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:49:17,324	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:49:20,709	[INFO]	458	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:49:20,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:49:20,710	[INFO]	459	SUCCESS	+13.0	
2020-12-10 06:49:20,711	[DEBUG]	
2020-12-10 06:49:21,580	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:49:24,926	[INFO]	461	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:49:24,927	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 06:49:25,793	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:49:26,748	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:49:26,750	[INFO]	464	SUCCESS	+13.0	
2020-12-10 06:49:26,751	[DEBUG]	
2020-12-10 06:49:27,637	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:49:28,578	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:49:28,581	[INFO]	467	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:49:28,582	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:31,844	[INFO]	468	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:49:31,845	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  
***************
*** 40,45 ****
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:32,716	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:49:32,718	[INFO]	470	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:49:32,718	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:33,597	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:49:33,598	[INFO]	472	SUCCESS	+13.0	
2020-12-10 06:49:33,599	[DEBUG]	
2020-12-10 06:49:34,484	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:49:35,377	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:49:36,248	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:49:37,129	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:49:38,016	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:49:41,232	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:49:41,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:49:42,099	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 06:49:42,100	[INFO]	480	SUCCESS	+13.0	
2020-12-10 06:49:42,101	[DEBUG]	
2020-12-10 06:49:42,986	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:49:43,676	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:49:44,578	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:49:47,775	[INFO]	484	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:49:47,776	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:49:47,777	[INFO]	485	SUCCESS	+13.0	
2020-12-10 06:49:47,777	[DEBUG]	
2020-12-10 06:49:48,671	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:49:49,576	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:49:50,492	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:49:50,494	[INFO]	489	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:49:51,449	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:49:54,726	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:49:54,727	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:49:54,727	[INFO]	492	SUCCESS	+13.0	
2020-12-10 06:49:54,728	[DEBUG]	
2020-12-10 06:49:55,590	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:49:58,869	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:49:58,870	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:49:58,871	[INFO]	495	SUCCESS	+13.0	
2020-12-10 06:49:58,871	[DEBUG]	
2020-12-10 06:49:59,751	[INFO]	496	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:50:00,638	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:50:01,533	[INFO]	498	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:50:02,441	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:50:03,342	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:50:03,342	[INFO]	==== END ====
2020-12-10 06:50:03,342	[INFO]	Reason: step budget
2020-12-10 06:50:03,343	[INFO]	
2020-12-10 06:50:03,343	[INFO]	========== EPOCH 8 ==========
2020-12-10 06:50:03,344	[INFO]	==== WARMUP ====
2020-12-10 06:50:06,515	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:50:06,516	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:50:09,748	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:50:09,748	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:50:13,027	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 06:50:13,027	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:50:16,211	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 06:50:16,211	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 06:50:16,211	[INFO]	==== START ====
2020-12-10 06:50:19,509	[INFO]	1	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:50:19,510	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:19,511	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:50:19,512	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:22,702	[INFO]	3	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:50:22,703	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,49 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 41,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             i++;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:50:23,556	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:50:24,458	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:50:24,460	[INFO]	6	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:50:24,460	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:25,351	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:50:26,269	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:50:27,153	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:50:27,154	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:50:27,155	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:28,505	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:50:28,508	[INFO]	12	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:50:28,510	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:28,512	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:50:28,514	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:50:29,383	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:50:32,543	[INFO]	15	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:50:32,544	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,50 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 41,53 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 06:50:33,381	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:50:34,279	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:50:35,039	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:50:35,992	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:50:35,994	[INFO]	20	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:50:35,996	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,50 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 41,53 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 06:50:36,900	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:50:37,783	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:50:38,678	[INFO]	23	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:50:39,590	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:50:40,474	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:50:41,378	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:50:44,555	[INFO]	27	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:50:44,556	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 41,50 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 42,54 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 06:50:44,558	[INFO]	28	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:50:44,559	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 41,50 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 42,54 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 06:50:47,769	[INFO]	29	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:50:47,770	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:50:51,049	[INFO]	30	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:50:51,050	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 06:50:51,940	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:50:52,845	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:50:53,552	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:50:54,443	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:50:54,444	[INFO]	35	SUCCESS	+13.0	
2020-12-10 06:50:54,444	[DEBUG]	
2020-12-10 06:50:55,331	[INFO]	36	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:50:56,221	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:50:57,111	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:50:57,988	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:50:58,886	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:51:02,139	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:51:02,141	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:51:02,142	[INFO]	42	SUCCESS	+13.0	
2020-12-10 06:51:02,142	[DEBUG]	
2020-12-10 06:51:05,358	[INFO]	43	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:51:05,359	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:51:05,360	[INFO]	44	SUCCESS	+13.0	
2020-12-10 06:51:05,360	[DEBUG]	
2020-12-10 06:51:06,254	[INFO]	45	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:51:07,203	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:51:08,076	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:51:11,366	[INFO]	48	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:51:11,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:51:11,368	[INFO]	49	SUCCESS	+13.0	
2020-12-10 06:51:11,368	[DEBUG]	
2020-12-10 06:51:12,226	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:51:13,112	[INFO]	51	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:51:14,007	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:51:14,886	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:51:15,747	[INFO]	54	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:51:16,673	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:51:17,563	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:51:18,488	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:51:19,387	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:51:22,698	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:51:22,699	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:51:22,699	[INFO]	60	SUCCESS	+13.0	
2020-12-10 06:51:22,700	[DEBUG]	
2020-12-10 06:51:23,573	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:51:24,445	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:51:25,317	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:51:26,227	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:51:29,539	[INFO]	65	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:51:29,542	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 06:51:29,543	[INFO]	66	SUCCESS	+13.0	
2020-12-10 06:51:29,544	[DEBUG]	
2020-12-10 06:51:30,423	[INFO]	67	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:51:31,302	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:51:34,610	[INFO]	69	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:51:34,611	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 06:51:34,612	[INFO]	70	SUCCESS	+13.0	
2020-12-10 06:51:34,612	[DEBUG]	
2020-12-10 06:51:35,475	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:51:38,769	[INFO]	72	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:51:38,770	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:51:42,020	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:51:42,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:51:45,270	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:51:45,271	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:51:45,272	[INFO]	75	SUCCESS	+13.0	
2020-12-10 06:51:45,272	[DEBUG]	
2020-12-10 06:51:46,148	[INFO]	76	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:51:49,370	[INFO]	77	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:51:49,371	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:51:49,371	[INFO]	78	SUCCESS	+13.0	
2020-12-10 06:51:49,372	[DEBUG]	
2020-12-10 06:51:50,344	[INFO]	79	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:51:53,681	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:51:53,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:51:54,566	[INFO]	81	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:51:55,474	[INFO]	82	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:51:56,392	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:51:56,394	[INFO]	84	SUCCESS	+13.0	
2020-12-10 06:51:56,394	[DEBUG]	
2020-12-10 06:51:57,291	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:51:58,205	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:51:59,102	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:52:00,038	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:52:00,041	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:52:00,925	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:52:01,849	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:52:05,120	[INFO]	92	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:52:05,121	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:52:06,006	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:52:06,884	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:52:06,885	[INFO]	95	SUCCESS	+13.0	
2020-12-10 06:52:06,885	[DEBUG]	
2020-12-10 06:52:07,789	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:52:08,666	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:52:12,059	[INFO]	98	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:52:12,060	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 06:52:12,899	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:52:12,900	[INFO]	100	SUCCESS	+13.0	
2020-12-10 06:52:12,900	[DEBUG]	
2020-12-10 06:52:13,775	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:52:14,676	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:52:15,563	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:52:16,454	[INFO]	104	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:52:17,339	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:52:18,244	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:52:19,159	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:52:22,527	[INFO]	108	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:52:22,528	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:52:22,529	[INFO]	109	SUCCESS	+13.0	
2020-12-10 06:52:22,529	[DEBUG]	
2020-12-10 06:52:25,808	[INFO]	110	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:52:25,810	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:52:26,670	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:52:27,540	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:52:28,483	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:52:28,485	[INFO]	114	SUCCESS	+13.0	
2020-12-10 06:52:28,485	[DEBUG]	
2020-12-10 06:52:29,367	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:52:32,675	[INFO]	116	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:52:32,677	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:52:35,989	[INFO]	117	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:52:35,990	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,40 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:52:39,228	[INFO]	118	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:52:39,229	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:52:42,456	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:52:42,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,36 ****
          int i = 0;
          int j = 0;
  
-         while (i < left.size() && j < right.size()) {
-             if (left.get(i) <= right.get(j)) {
-                 result.add(left.get(i));
-                 i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
-             }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 21,29 ----
          int i = 0;
          int j = 0;
  
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:52:43,345	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:52:43,347	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:52:43,348	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,36 ****
          int i = 0;
          int j = 0;
  
-         while (i < left.size() && j < right.size()) {
-             if (left.get(i) <= right.get(j)) {
-                 result.add(left.get(i));
-                 i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
-             }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 21,29 ----
          int i = 0;
          int j = 0;
  
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:52:46,580	[INFO]	122	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:52:46,583	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,37 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 06:52:49,900	[INFO]	123	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:52:49,900	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 06:52:49,901	[INFO]	124	SUCCESS	+13.0	
2020-12-10 06:52:49,902	[DEBUG]	
2020-12-10 06:52:50,648	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:52:53,950	[INFO]	126	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:52:53,951	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:52:53,951	[INFO]	127	SUCCESS	+13.0	
2020-12-10 06:52:53,952	[DEBUG]	
2020-12-10 06:52:53,953	[INFO]	128	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:52:53,953	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:52:54,821	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:52:54,824	[INFO]	130	SUCCESS	+13.0	
2020-12-10 06:52:54,825	[DEBUG]	
2020-12-10 06:52:58,096	[INFO]	131	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:52:58,097	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 06:52:58,098	[INFO]	132	SUCCESS	+13.0	
2020-12-10 06:52:58,098	[DEBUG]	
2020-12-10 06:52:58,946	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:53:02,236	[INFO]	134	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:53:02,236	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:53:02,237	[INFO]	135	SUCCESS	+13.0	
2020-12-10 06:53:02,238	[DEBUG]	
2020-12-10 06:53:03,102	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:53:03,990	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:53:04,915	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:53:05,648	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:53:05,651	[INFO]	140	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:53:05,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:53:06,338	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:53:06,339	[INFO]	142	SUCCESS	+13.0	
2020-12-10 06:53:06,339	[DEBUG]	
2020-12-10 06:53:09,528	[INFO]	143	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 06:53:09,529	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:53:09,530	[INFO]	144	SUCCESS	+13.0	
2020-12-10 06:53:09,531	[DEBUG]	
2020-12-10 06:53:10,407	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:53:11,335	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:53:14,570	[INFO]	147	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:53:14,570	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:53:15,419	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:53:18,726	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:53:18,727	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:53:22,006	[INFO]	150	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 06:53:22,008	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:53:22,010	[INFO]	151	SUCCESS	+13.0	
2020-12-10 06:53:22,011	[DEBUG]	
2020-12-10 06:53:22,963	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:53:23,678	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:53:24,581	[INFO]	154	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:53:25,485	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:53:26,359	[INFO]	156	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:53:29,630	[INFO]	157	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:53:29,631	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:53:30,345	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:53:30,347	[INFO]	159	SUCCESS	+13.0	
2020-12-10 06:53:30,347	[DEBUG]	
2020-12-10 06:53:31,210	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:53:32,103	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:53:32,966	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:53:33,881	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:53:34,797	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:53:35,703	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:53:36,599	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:53:39,820	[INFO]	167	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:53:39,821	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:53:39,822	[INFO]	168	SUCCESS	+13.0	
2020-12-10 06:53:39,822	[DEBUG]	
2020-12-10 06:53:40,700	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:53:41,676	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:53:42,407	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:53:43,292	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:53:44,217	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 06:53:45,083	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:53:45,974	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:53:46,845	[INFO]	176	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:53:50,068	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:53:50,069	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 06:53:50,070	[INFO]	178	SUCCESS	+13.0	
2020-12-10 06:53:50,070	[DEBUG]	
2020-12-10 06:53:50,805	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:53:53,998	[INFO]	180	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:53:53,999	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 06:53:54,000	[INFO]	181	SUCCESS	+13.0	
2020-12-10 06:53:54,000	[DEBUG]	
2020-12-10 06:53:54,892	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:53:58,175	[INFO]	183	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:53:58,175	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:53:59,024	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:54:02,335	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:54:02,336	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:54:03,206	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:54:06,533	[INFO]	187	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:54:06,533	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:54:07,381	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:54:22,593	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:54:26,189	[INFO]	190	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:54:26,190	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
--- 23,41 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:54:29,571	[INFO]	191	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:54:29,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:54:29,573	[INFO]	192	SUCCESS	+13.0	
2020-12-10 06:54:29,574	[DEBUG]	
2020-12-10 06:54:30,455	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:54:31,344	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:54:32,253	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:54:33,143	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 06:54:36,409	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:54:36,410	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:54:37,291	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:54:38,182	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:54:39,099	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:54:39,100	[INFO]	201	SUCCESS	+13.0	
2020-12-10 06:54:39,101	[DEBUG]	
2020-12-10 06:54:40,041	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:54:43,399	[INFO]	203	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:54:43,400	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 06:54:43,401	[INFO]	204	SUCCESS	+13.0	
2020-12-10 06:54:43,401	[DEBUG]	
2020-12-10 06:54:46,683	[INFO]	205	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:54:46,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:54:50,182	[INFO]	206	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:54:50,183	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,38 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:54:50,184	[INFO]	207	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:54:50,185	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:54:50,185	[INFO]	208	SUCCESS	+13.0	
2020-12-10 06:54:50,186	[DEBUG]	
2020-12-10 06:54:51,099	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:54:52,026	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:54:55,206	[INFO]	211	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:54:55,207	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:54:55,208	[INFO]	212	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:54:55,209	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:54:58,294	[INFO]	213	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:54:58,295	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:55:01,511	[INFO]	214	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:55:01,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,49 ****
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 36,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:55:04,799	[INFO]	215	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:55:04,800	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,46 ****
--- 36,48 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> right = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:55:05,673	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:55:08,971	[INFO]	217	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 06:55:08,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:55:08,973	[INFO]	218	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:55:08,973	[DEBUG]	
2020-12-10 06:55:08,974	[INFO]	219	SUCCESS	+13.0	
2020-12-10 06:55:08,974	[DEBUG]	
2020-12-10 06:55:09,803	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:55:13,095	[INFO]	221	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:55:13,096	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:55:13,097	[INFO]	222	SUCCESS	+13.0	
2020-12-10 06:55:13,097	[DEBUG]	
2020-12-10 06:55:13,098	[INFO]	223	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:55:13,098	[DEBUG]	
2020-12-10 06:55:13,099	[INFO]	224	SUCCESS	+13.0	
2020-12-10 06:55:13,099	[DEBUG]	
2020-12-10 06:55:13,982	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:55:14,855	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:55:15,784	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:55:18,971	[INFO]	228	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:55:18,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:55:22,257	[INFO]	229	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:55:22,260	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 06:55:25,398	[INFO]	230	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:55:25,399	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 06:55:25,400	[INFO]	231	SUCCESS	+13.0	
2020-12-10 06:55:25,400	[DEBUG]	
2020-12-10 06:55:26,289	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 06:55:27,159	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:55:28,046	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:55:28,942	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:55:29,826	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:55:33,043	[INFO]	237	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:55:33,045	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:55:33,047	[INFO]	238	SUCCESS	+13.0	
2020-12-10 06:55:33,047	[DEBUG]	
2020-12-10 06:55:33,923	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:55:34,818	[INFO]	240	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:55:35,957	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:55:40,127	[INFO]	242	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:55:40,128	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 06:55:40,129	[INFO]	243	SUCCESS	+13.0	
2020-12-10 06:55:40,129	[DEBUG]	
2020-12-10 06:55:40,821	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:55:41,751	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:55:42,622	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:55:43,518	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:55:46,737	[INFO]	248	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:55:46,738	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 06:55:46,738	[INFO]	249	SUCCESS	+13.0	
2020-12-10 06:55:46,739	[DEBUG]	
2020-12-10 06:55:47,616	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 06:55:47,618	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:55:48,615	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:55:51,834	[INFO]	253	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:55:51,835	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 06:55:51,836	[INFO]	254	SUCCESS	+13.0	
2020-12-10 06:55:51,836	[DEBUG]	
2020-12-10 06:55:52,702	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:55:53,585	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:55:54,475	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:55:55,355	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:55:56,229	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:55:59,447	[INFO]	260	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:55:59,449	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:56:02,671	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:56:02,672	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:56:03,538	[INFO]	262	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:56:03,540	[INFO]	263	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:56:03,541	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 06:56:03,542	[INFO]	264	SUCCESS	+13.0	
2020-12-10 06:56:03,542	[DEBUG]	
2020-12-10 06:56:04,421	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:56:05,333	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 06:56:06,095	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:56:07,005	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:56:07,712	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:56:11,029	[INFO]	270	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:56:11,030	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:11,919	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:56:12,796	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:56:12,798	[INFO]	273	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:56:12,799	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:12,800	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:56:12,801	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:15,944	[INFO]	275	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:56:15,945	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 47,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:56:19,053	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:56:19,054	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
--- 26,41 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 48,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:56:22,279	[INFO]	277	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 06:56:22,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
--- 26,41 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:22,281	[INFO]	278	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:56:22,282	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:23,149	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:56:24,059	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:56:27,459	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:56:27,460	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:27,461	[INFO]	282	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:56:27,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:30,672	[INFO]	283	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='})
2020-12-10 06:56:30,673	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:31,586	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 06:56:32,459	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:56:32,461	[INFO]	286	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:56:32,461	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:56:32,462	[INFO]	287	SUCCESS	+13.0	
2020-12-10 06:56:32,462	[DEBUG]	
2020-12-10 06:56:33,332	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:56:36,596	[INFO]	289	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:56:36,598	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:56:37,504	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:56:38,381	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:56:38,382	[INFO]	292	SUCCESS	+13.0	
2020-12-10 06:56:38,382	[DEBUG]	
2020-12-10 06:56:41,659	[INFO]	293	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:56:41,660	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:56:41,661	[INFO]	294	SUCCESS	+13.0	
2020-12-10 06:56:41,661	[DEBUG]	
2020-12-10 06:56:42,531	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:56:43,410	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:56:46,640	[INFO]	297	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:56:46,641	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:56:46,642	[INFO]	298	SUCCESS	+13.0	
2020-12-10 06:56:46,642	[DEBUG]	
2020-12-10 06:56:47,530	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 06:56:48,420	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:56:49,340	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 06:56:50,225	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:56:51,156	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:56:52,029	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 06:56:55,343	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 06:56:55,344	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 06:56:55,345	[INFO]	306	SUCCESS	+13.0	
2020-12-10 06:56:55,345	[DEBUG]	
2020-12-10 06:56:56,198	[INFO]	307	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:56:59,394	[INFO]	308	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:56:59,396	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:56:59,398	[INFO]	309	SUCCESS	+13.0	
2020-12-10 06:56:59,399	[DEBUG]	
2020-12-10 06:57:02,631	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:57:02,632	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 06:57:03,541	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 06:57:03,542	[INFO]	312	SUCCESS	+13.0	
2020-12-10 06:57:03,542	[DEBUG]	
2020-12-10 06:57:03,543	[INFO]	313	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:57:03,544	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 06:57:03,545	[INFO]	314	SUCCESS	+13.0	
2020-12-10 06:57:03,545	[DEBUG]	
2020-12-10 06:57:04,462	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:57:05,303	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:57:06,014	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:57:06,879	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:57:07,753	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:57:08,662	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:57:09,541	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:57:12,874	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:57:12,875	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 06:57:12,876	[INFO]	323	SUCCESS	+13.0	
2020-12-10 06:57:12,876	[DEBUG]	
2020-12-10 06:57:13,762	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:57:17,011	[INFO]	325	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:57:17,012	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 06:57:17,900	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:57:18,781	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:57:19,700	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:57:22,997	[INFO]	329	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:57:23,001	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,25 ****
--- 19,28 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
+ 
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:57:26,277	[INFO]	330	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:57:26,279	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:57:26,279	[INFO]	331	SUCCESS	+13.0	
2020-12-10 06:57:26,280	[DEBUG]	
2020-12-10 06:57:29,476	[INFO]	332	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 06:57:29,477	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:57:29,478	[INFO]	333	SUCCESS	+13.0	
2020-12-10 06:57:29,479	[DEBUG]	
2020-12-10 06:57:30,377	[INFO]	334	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:57:33,653	[INFO]	335	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 06:57:33,654	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 06:57:33,655	[INFO]	336	SUCCESS	+13.0	
2020-12-10 06:57:33,656	[DEBUG]	
2020-12-10 06:57:36,999	[INFO]	337	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:57:37,000	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:57:37,854	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 06:57:37,857	[INFO]	339	SUCCESS	+13.0	
2020-12-10 06:57:37,857	[DEBUG]	
2020-12-10 06:57:38,749	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:57:39,663	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:57:40,548	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:57:41,454	[INFO]	343	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:57:42,335	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:57:45,674	[INFO]	345	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 06:57:45,675	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 06:57:45,676	[INFO]	346	SUCCESS	+13.0	
2020-12-10 06:57:45,676	[DEBUG]	
2020-12-10 06:57:46,537	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:57:47,411	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:57:48,297	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 06:57:49,196	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:57:50,082	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:57:51,000	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:57:51,886	[INFO]	353	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:57:55,160	[INFO]	354	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:57:55,161	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 06:57:55,161	[INFO]	355	SUCCESS	+13.0	
2020-12-10 06:57:55,162	[DEBUG]	
2020-12-10 06:57:55,879	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 06:57:56,742	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:57:57,654	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:57:58,550	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:58:01,811	[INFO]	360	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:58:01,812	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:58:02,667	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:58:02,668	[INFO]	362	SUCCESS	+13.0	
2020-12-10 06:58:02,668	[DEBUG]	
2020-12-10 06:58:03,564	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 06:58:06,878	[INFO]	364	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:58:06,879	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:58:06,880	[INFO]	365	SUCCESS	+13.0	
2020-12-10 06:58:06,880	[DEBUG]	
2020-12-10 06:58:07,753	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:58:08,627	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:58:09,508	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:58:10,406	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 06:58:13,653	[INFO]	370	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:58:13,653	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 06:58:14,529	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:58:15,428	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 06:58:16,330	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:58:19,577	[INFO]	374	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:58:19,579	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 06:58:19,580	[INFO]	375	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:58:19,581	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 06:58:22,803	[INFO]	376	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:58:22,804	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,35 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 26,36 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:58:26,103	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 06:58:26,104	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:58:26,959	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:58:26,960	[INFO]	379	SUCCESS	+13.0	
2020-12-10 06:58:26,960	[DEBUG]	
2020-12-10 06:58:27,866	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 06:58:28,880	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 06:58:29,633	[INFO]	382	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:58:30,533	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 06:58:30,535	[INFO]	384	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 06:58:30,535	[DEBUG]	
2020-12-10 06:58:31,419	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:58:31,421	[INFO]	386	SUCCESS	+13.0	
2020-12-10 06:58:31,422	[DEBUG]	
2020-12-10 06:58:32,279	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 06:58:35,588	[INFO]	388	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 06:58:35,589	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 06:58:35,590	[INFO]	389	SUCCESS	+13.0	
2020-12-10 06:58:35,590	[DEBUG]	
2020-12-10 06:58:38,830	[INFO]	390	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 06:58:38,831	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:58:38,832	[INFO]	391	SUCCESS	+13.0	
2020-12-10 06:58:38,832	[DEBUG]	
2020-12-10 06:58:42,170	[INFO]	392	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 06:58:42,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 06:58:43,055	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:58:43,057	[INFO]	394	SUCCESS	+13.0	
2020-12-10 06:58:43,058	[DEBUG]	
2020-12-10 06:58:46,300	[INFO]	395	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='})
2020-12-10 06:58:46,300	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i == left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 06:58:46,301	[INFO]	396	SUCCESS	+13.0	
2020-12-10 06:58:46,302	[DEBUG]	
2020-12-10 06:58:49,471	[INFO]	397	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:58:49,472	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 06:58:49,473	[INFO]	398	SUCCESS	+13.0	
2020-12-10 06:58:49,473	[DEBUG]	
2020-12-10 06:58:50,362	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:58:53,695	[INFO]	400	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:58:53,695	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:58:54,601	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 06:58:55,473	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:58:55,474	[INFO]	403	SUCCESS	+13.0	
2020-12-10 06:58:55,474	[DEBUG]	
2020-12-10 06:58:56,375	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:58:57,251	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:58:58,135	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:58:59,017	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 06:58:59,912	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:59:00,814	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:59:01,737	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:59:05,053	[INFO]	411	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:59:05,054	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:59:05,055	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 06:59:05,056	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:59:05,920	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 06:59:05,923	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:59:05,924	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:59:09,145	[INFO]	415	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 06:59:09,146	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,46 ****
--- 39,50 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:59:09,147	[INFO]	416	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:59:09,148	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 06:59:10,035	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:59:10,038	[INFO]	418	SUCCESS	+13.0	
2020-12-10 06:59:10,039	[DEBUG]	
2020-12-10 06:59:10,979	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:59:14,175	[INFO]	420	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 06:59:14,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 06:59:14,177	[INFO]	421	SUCCESS	+13.0	
2020-12-10 06:59:14,177	[DEBUG]	
2020-12-10 06:59:17,422	[INFO]	422	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 06:59:17,423	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:59:17,424	[INFO]	423	SUCCESS	+13.0	
2020-12-10 06:59:17,424	[DEBUG]	
2020-12-10 06:59:18,338	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 06:59:19,207	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:59:20,101	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 06:59:20,825	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:59:21,729	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 06:59:25,009	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 06:59:25,011	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 06:59:25,011	[INFO]	430	SUCCESS	+13.0	
2020-12-10 06:59:25,012	[DEBUG]	
2020-12-10 06:59:25,881	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 06:59:26,718	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:59:27,598	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 06:59:28,313	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 06:59:29,267	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 06:59:30,155	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 06:59:31,016	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 06:59:31,899	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 06:59:32,792	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 06:59:33,698	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 06:59:34,585	[INFO]	441	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 06:59:37,917	[INFO]	442	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 06:59:37,920	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:59:37,921	[INFO]	443	SUCCESS	+13.0	
2020-12-10 06:59:37,922	[DEBUG]	
2020-12-10 06:59:38,759	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 06:59:42,009	[INFO]	445	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 06:59:42,009	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 06:59:42,010	[INFO]	446	SUCCESS	+13.0	
2020-12-10 06:59:42,010	[DEBUG]	
2020-12-10 06:59:42,904	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 06:59:43,782	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 06:59:44,701	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 06:59:44,702	[INFO]	450	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 06:59:44,703	[DEBUG]	
2020-12-10 06:59:44,703	[INFO]	451	SUCCESS	+13.0	
2020-12-10 06:59:44,704	[DEBUG]	
2020-12-10 06:59:48,058	[INFO]	452	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 06:59:48,059	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 06:59:48,060	[INFO]	453	SUCCESS	+13.0	
2020-12-10 06:59:48,060	[DEBUG]	
2020-12-10 06:59:48,956	[INFO]	454	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 06:59:49,853	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 06:59:53,266	[INFO]	456	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:59:53,267	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:59:53,267	[INFO]	457	SUCCESS	+13.0	
2020-12-10 06:59:53,268	[DEBUG]	
2020-12-10 06:59:56,476	[INFO]	458	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 06:59:56,477	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 06:59:56,477	[INFO]	459	SUCCESS	+13.0	
2020-12-10 06:59:56,478	[DEBUG]	
2020-12-10 06:59:59,688	[INFO]	460	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 06:59:59,689	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:00:03,274	[INFO]	461	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:00:03,275	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,39 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:00:03,276	[INFO]	462	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:00:03,277	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:00:03,277	[INFO]	463	SUCCESS	+13.0	
2020-12-10 07:00:03,278	[DEBUG]	
2020-12-10 07:00:04,018	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:00:07,302	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:00:07,303	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:00:08,155	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:00:08,156	[INFO]	467	SUCCESS	+13.0	
2020-12-10 07:00:08,157	[DEBUG]	
2020-12-10 07:00:11,513	[INFO]	468	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:00:11,514	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,46 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:00:11,515	[INFO]	469	SUCCESS	+13.0	
2020-12-10 07:00:11,515	[DEBUG]	
2020-12-10 07:00:12,540	[INFO]	470	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:00:15,877	[INFO]	471	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:00:15,878	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,39 ----
                  j++;
              }
          }
!         if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
          return result;
      }
  

2020-12-10 07:00:16,750	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:00:17,579	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:00:17,581	[INFO]	474	SUCCESS	+13.0	
2020-12-10 07:00:17,582	[DEBUG]	
2020-12-10 07:00:18,607	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:00:19,529	[INFO]	476	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:00:20,468	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:00:20,470	[INFO]	478	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:00:20,471	[DEBUG]	
2020-12-10 07:00:20,473	[INFO]	479	SUCCESS	+13.0	
2020-12-10 07:00:20,473	[DEBUG]	
2020-12-10 07:00:21,387	[INFO]	480	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:00:22,111	[INFO]	481	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:00:23,022	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:00:26,432	[INFO]	483	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:00:26,433	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:00:26,433	[INFO]	484	SUCCESS	+13.0	
2020-12-10 07:00:26,434	[DEBUG]	
2020-12-10 07:00:29,686	[INFO]	485	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:00:29,687	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,44 ----
                  j++;
              }
          }
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          return result;
      }
  

2020-12-10 07:00:30,591	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:00:33,929	[INFO]	487	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:00:33,931	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,45 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }
          }
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          return result;
      }
  

2020-12-10 07:00:37,398	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:00:37,399	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:00:37,399	[INFO]	489	SUCCESS	+13.0	
2020-12-10 07:00:37,400	[DEBUG]	
2020-12-10 07:00:37,401	[INFO]	490	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:00:37,401	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,44 ----
                  j++;
              }
          }
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          return result;
      }
  

2020-12-10 07:00:37,402	[INFO]	491	SUCCESS	+13.0	
2020-12-10 07:00:37,402	[DEBUG]	
2020-12-10 07:00:40,612	[INFO]	492	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:00:40,613	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:00:41,527	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:00:42,450	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:00:43,395	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:00:46,605	[INFO]	496	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:00:46,606	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:00:46,607	[INFO]	497	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:00:46,608	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:00:47,513	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:00:47,514	[INFO]	499	SUCCESS	+13.0	
2020-12-10 07:00:47,514	[DEBUG]	
2020-12-10 07:00:48,418	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:00:48,419	[INFO]	==== END ====
2020-12-10 07:00:48,419	[INFO]	Reason: step budget
2020-12-10 07:00:48,419	[INFO]	
2020-12-10 07:00:48,420	[INFO]	========== EPOCH 9 ==========
2020-12-10 07:00:48,420	[INFO]	==== WARMUP ====
2020-12-10 07:00:52,022	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:00:52,022	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:00:55,326	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:00:55,326	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:00:58,584	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:00:58,584	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:01:01,958	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:01:01,958	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:01:01,958	[INFO]	==== START ====
2020-12-10 07:01:02,881	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:01:06,336	[INFO]	2	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:01:06,337	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:01:07,224	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:01:07,226	[INFO]	4	SUCCESS	+13.0	
2020-12-10 07:01:07,226	[DEBUG]	
2020-12-10 07:01:10,595	[INFO]	5	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:01:10,596	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:01:10,597	[INFO]	6	SUCCESS	+13.0	
2020-12-10 07:01:10,597	[DEBUG]	
2020-12-10 07:01:11,496	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:01:12,436	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:01:13,302	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:01:16,690	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:01:16,691	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:01:17,616	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:01:18,516	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:01:19,435	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:01:20,392	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:01:20,393	[INFO]	15	SUCCESS	+13.0	
2020-12-10 07:01:20,393	[DEBUG]	
2020-12-10 07:01:23,828	[INFO]	16	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:01:23,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:01:27,114	[INFO]	17	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:01:27,115	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:01:30,563	[INFO]	18	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:01:30,564	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,31 ****
--- 20,33 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:01:31,462	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:01:32,371	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:01:33,278	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:01:34,012	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:01:37,224	[INFO]	23	SUCCESS	*11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:01:37,225	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:01:38,126	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:01:41,612	[INFO]	25	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:01:44,831	[INFO]	26	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:01:45,731	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:01:49,816	[INFO]	28	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:01:53,172	[INFO]	29	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:01:56,457	[INFO]	30	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:01:56,461	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,34 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:01:59,748	[INFO]	31	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:02:00,670	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:02:04,201	[INFO]	33	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:02:05,134	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:02:05,868	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:02:06,766	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:02:07,675	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:02:08,543	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:02:09,442	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:02:10,195	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:02:10,196	[INFO]	41	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:02:10,197	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:02:11,107	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:02:11,109	[INFO]	43	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:02:11,847	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:02:27,022	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:02:27,978	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:02:31,247	[INFO]	47	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:02:34,555	[INFO]	48	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:02:35,470	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:02:36,342	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:02:39,725	[INFO]	51	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:02:42,941	[INFO]	52	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:02:42,943	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:02:42,944	[INFO]	53	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:02:42,944	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:02:43,824	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:02:44,727	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:02:45,447	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:02:48,570	[INFO]	57	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:02:48,572	[INFO]	58	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:02:49,316	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:02:50,175	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:02:51,080	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:02:51,082	[INFO]	62	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:02:51,965	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:02:55,422	[INFO]	64	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:02:59,260	[INFO]	65	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:03:00,185	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:03:01,052	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:03:04,270	[INFO]	68	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:03:05,154	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:03:06,026	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:03:09,250	[INFO]	71	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:03:24,390	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:03:25,183	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:03:26,082	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:03:26,974	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:03:27,927	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:03:28,860	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:03:32,113	[INFO]	78	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 07:03:32,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,31 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:03:32,967	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:03:32,968	[INFO]	80	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:03:32,969	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:03:33,833	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:03:33,834	[INFO]	82	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:03:37,092	[INFO]	83	SUCCESS	+11.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:03:37,093	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:03:37,094	[INFO]	84	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:03:37,094	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:03:40,172	[INFO]	85	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:03:41,063	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:03:41,945	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:03:45,153	[INFO]	88	SUCCESS	 13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:03:48,306	[INFO]	89	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:03:48,308	[INFO]	90	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:03:51,534	[INFO]	91	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:03:54,665	[INFO]	92	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:03:54,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:03:57,838	[INFO]	93	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:03:58,750	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:04:01,984	[INFO]	95	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:04:02,889	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:04:03,769	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:04:06,941	[INFO]	98	SUCCESS	 13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:04:07,791	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:04:08,668	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:04:11,935	[INFO]	101	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:04:11,938	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,53 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
!             i++;
  
              return merge(left, right);
          }

2020-12-10 07:04:11,943	[INFO]	102	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:11,945	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,53 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
!             i++;
  
              return merge(left, right);
          }

2020-12-10 07:04:14,996	[INFO]	103	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 07:04:18,252	[INFO]	104	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:19,104	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:04:19,106	[INFO]	106	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:19,107	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:04:19,982	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:04:20,892	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:04:20,893	[INFO]	109	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:20,894	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:04:21,769	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:04:21,772	[INFO]	111	SUCCESS	 13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:21,773	[INFO]	112	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:04:22,681	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:04:25,814	[INFO]	114	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:04:29,011	[INFO]	115	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:04:29,874	[INFO]	116	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:04:30,726	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:04:31,611	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:04:31,613	[INFO]	119	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:04:31,613	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:04:32,359	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:04:33,227	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:04:33,229	[INFO]	122	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:04:33,229	[INFO]	123	SUCCESS	 13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:04:34,121	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:04:34,977	[INFO]	125	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:04:38,172	[INFO]	126	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:04:38,173	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:04:39,054	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:04:39,988	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:04:43,250	[INFO]	129	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:04:46,443	[INFO]	130	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:04:46,445	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 41,50 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 42,52 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:04:47,299	[INFO]	131	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:05:02,512	[INFO]	132	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:05:03,451	[INFO]	133	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:05:03,455	[INFO]	134	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:05:03,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,50 ****
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:05:03,458	[INFO]	135	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:05:04,345	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:05:05,302	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:05:06,265	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:05:09,565	[INFO]	139	SUCCESS	 13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:05:10,421	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:05:11,320	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:05:11,321	[INFO]	142	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:05:11,322	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:05:11,323	[INFO]	143	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:05:12,232	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:05:13,202	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:05:14,115	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:05:14,119	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:05:15,021	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:05:15,916	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:05:19,057	[INFO]	150	SUCCESS	+11.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:05:19,059	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:05:22,397	[INFO]	151	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:05:23,236	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:05:24,130	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:05:27,264	[INFO]	154	SUCCESS	 13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:05:30,625	[INFO]	155	SUCCESS	*0.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:05:30,626	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,31 ****
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:05:30,627	[INFO]	==== END ====
2020-12-10 07:05:30,627	[INFO]	Reason: target fitness reached
2020-12-10 07:05:30,628	[INFO]	
2020-12-10 07:05:30,628	[INFO]	========== EPOCH 10 ==========
2020-12-10 07:05:30,628	[INFO]	==== WARMUP ====
2020-12-10 07:05:33,801	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:05:33,802	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:05:38,073	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:05:38,074	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:05:42,307	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:05:42,307	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:05:46,257	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:05:46,257	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:05:46,258	[INFO]	==== START ====
2020-12-10 07:05:47,150	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:05:47,851	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:05:48,716	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:05:52,040	[INFO]	4	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:05:52,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:05:52,934	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:05:53,661	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:05:56,855	[INFO]	7	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:05:56,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
+ 
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 07:05:57,767	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:05:57,771	[INFO]	9	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:05:57,772	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:05:57,774	[INFO]	10	SUCCESS	+13.0	
2020-12-10 07:05:57,775	[DEBUG]	
2020-12-10 07:06:01,013	[INFO]	11	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:06:01,014	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,46 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:06:01,015	[INFO]	12	SUCCESS	+13.0	
2020-12-10 07:06:01,015	[DEBUG]	
2020-12-10 07:06:01,892	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:06:05,133	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:06:05,134	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:06:05,974	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:06:05,976	[INFO]	16	SUCCESS	+13.0	
2020-12-10 07:06:05,976	[DEBUG]	
2020-12-10 07:06:06,872	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:06:07,760	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:06:08,665	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:06:11,795	[INFO]	20	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:06:11,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:06:12,648	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:06:13,538	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:06:13,539	[INFO]	23	SUCCESS	+13.0	
2020-12-10 07:06:13,539	[DEBUG]	
2020-12-10 07:06:16,796	[INFO]	24	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:06:16,797	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:06:17,479	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:06:17,480	[INFO]	26	SUCCESS	+13.0	
2020-12-10 07:06:17,481	[DEBUG]	
2020-12-10 07:06:18,335	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:06:19,244	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:06:22,535	[INFO]	29	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:06:22,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:06:22,538	[INFO]	30	SUCCESS	+13.0	
2020-12-10 07:06:22,538	[DEBUG]	
2020-12-10 07:06:23,408	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:06:26,668	[INFO]	32	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:06:26,669	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:06:27,530	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:06:27,531	[INFO]	34	SUCCESS	+13.0	
2020-12-10 07:06:27,531	[DEBUG]	
2020-12-10 07:06:28,457	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:06:31,671	[INFO]	36	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 07:06:31,672	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:06:31,673	[INFO]	37	SUCCESS	+13.0	
2020-12-10 07:06:31,673	[DEBUG]	
2020-12-10 07:06:32,590	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:06:33,464	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:06:36,726	[INFO]	40	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:06:36,727	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:06:36,728	[INFO]	41	SUCCESS	+13.0	
2020-12-10 07:06:36,728	[DEBUG]	
2020-12-10 07:06:37,446	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:06:40,723	[INFO]	43	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:06:40,724	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:06:40,725	[INFO]	44	SUCCESS	+13.0	
2020-12-10 07:06:40,725	[DEBUG]	
2020-12-10 07:06:44,020	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:06:44,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 07:06:44,856	[INFO]	46	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:06:48,092	[INFO]	47	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:06:48,093	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 07:06:51,449	[INFO]	48	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:06:51,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,28 ****
--- 18,30 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 45,50 ****
--- 47,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 07:06:52,154	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:06:55,410	[INFO]	50	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:06:55,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,30 ****
--- 18,36 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 45,50 ****
--- 51,57 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 07:06:58,619	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:06:58,621	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,30 ****
--- 18,36 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:06:59,508	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:07:02,762	[INFO]	53	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:07:02,765	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,35 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:07:06,045	[INFO]	54	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:07:06,046	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:07:09,438	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:07:09,439	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,31 ****
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:07:09,440	[INFO]	56	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:07:09,441	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:07:09,441	[INFO]	57	SUCCESS	+13.0	
2020-12-10 07:07:09,441	[DEBUG]	
2020-12-10 07:07:12,657	[INFO]	58	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:07:12,657	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:07:13,541	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:07:13,543	[INFO]	60	SUCCESS	+13.0	
2020-12-10 07:07:13,543	[DEBUG]	
2020-12-10 07:07:14,397	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:07:14,398	[INFO]	62	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:07:14,398	[DEBUG]	
2020-12-10 07:07:15,292	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:07:15,295	[INFO]	64	SUCCESS	+13.0	
2020-12-10 07:07:15,296	[DEBUG]	
2020-12-10 07:07:18,548	[INFO]	65	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:07:18,549	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:07:18,550	[INFO]	66	SUCCESS	+13.0	
2020-12-10 07:07:18,550	[DEBUG]	
2020-12-10 07:07:19,413	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:07:22,718	[INFO]	68	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:07:22,720	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:07:23,638	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:07:23,640	[INFO]	70	SUCCESS	+13.0	
2020-12-10 07:07:23,640	[DEBUG]	
2020-12-10 07:07:24,526	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:07:25,422	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:07:28,709	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:07:28,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:07:29,608	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:07:30,538	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:07:33,821	[INFO]	76	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 07:07:33,822	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:07:37,138	[INFO]	77	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 07:07:37,139	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:07:38,028	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:07:38,905	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:07:39,813	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:07:39,816	[INFO]	81	SUCCESS	+13.0	
2020-12-10 07:07:39,817	[DEBUG]	
2020-12-10 07:07:40,749	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:07:41,666	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:07:42,561	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:07:43,464	[INFO]	85	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:07:44,370	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:07:45,268	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:07:46,146	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:07:49,427	[INFO]	89	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:07:49,428	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:07:49,429	[INFO]	90	SUCCESS	+13.0	
2020-12-10 07:07:49,429	[DEBUG]	
2020-12-10 07:07:50,268	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:07:51,245	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:07:52,130	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:07:52,132	[INFO]	94	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:07:52,133	[DEBUG]	
2020-12-10 07:07:52,134	[INFO]	95	SUCCESS	+13.0	
2020-12-10 07:07:52,134	[DEBUG]	
2020-12-10 07:07:55,355	[INFO]	96	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:07:55,356	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:07:55,357	[INFO]	97	SUCCESS	+13.0	
2020-12-10 07:07:55,357	[DEBUG]	
2020-12-10 07:07:58,589	[INFO]	98	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:07:58,590	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 07:07:59,502	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:08:00,446	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:08:00,449	[INFO]	101	SUCCESS	+13.0	
2020-12-10 07:08:00,450	[DEBUG]	
2020-12-10 07:08:03,723	[INFO]	102	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:08:03,724	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:08:03,725	[INFO]	103	SUCCESS	+13.0	
2020-12-10 07:08:03,725	[DEBUG]	
2020-12-10 07:08:04,585	[INFO]	104	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:08:07,897	[INFO]	105	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:08:07,899	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:08:08,755	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:08:12,073	[INFO]	107	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:08:12,074	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:08:15,311	[INFO]	108	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:08:15,312	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:08:15,312	[INFO]	109	SUCCESS	+13.0	
2020-12-10 07:08:15,313	[DEBUG]	
2020-12-10 07:08:18,645	[INFO]	110	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:08:18,646	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:08:19,558	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:08:19,561	[INFO]	112	SUCCESS	+13.0	
2020-12-10 07:08:19,562	[DEBUG]	
2020-12-10 07:08:20,397	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:08:23,654	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:08:23,655	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:08:23,656	[INFO]	115	SUCCESS	+13.0	
2020-12-10 07:08:23,656	[DEBUG]	
2020-12-10 07:08:26,860	[INFO]	116	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'})
2020-12-10 07:08:26,862	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) > right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:08:27,726	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:08:27,727	[INFO]	118	SUCCESS	+13.0	
2020-12-10 07:08:27,728	[DEBUG]	
2020-12-10 07:08:31,026	[INFO]	119	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:08:31,027	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:08:31,028	[INFO]	120	SUCCESS	+13.0	
2020-12-10 07:08:31,029	[DEBUG]	
2020-12-10 07:08:31,030	[INFO]	121	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:08:31,030	[DEBUG]	
2020-12-10 07:08:31,031	[INFO]	122	SUCCESS	+13.0	
2020-12-10 07:08:31,032	[DEBUG]	
2020-12-10 07:08:31,878	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:08:35,175	[INFO]	124	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:08:35,178	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:08:38,399	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:08:38,400	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:08:41,718	[INFO]	126	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:08:41,719	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,41 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 i++;
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:08:42,574	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:08:42,576	[INFO]	128	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:08:42,577	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:08:43,477	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:08:46,733	[INFO]	130	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:08:46,735	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 38,43 ****
--- 43,51 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:08:47,590	[INFO]	131	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:08:47,591	[INFO]	132	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:08:47,592	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,41 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:08:47,593	[INFO]	133	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:08:47,594	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:08:47,594	[INFO]	134	SUCCESS	+13.0	
2020-12-10 07:08:47,595	[DEBUG]	
2020-12-10 07:08:48,525	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:08:49,456	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:08:50,357	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:08:51,290	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:08:54,540	[INFO]	139	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:08:54,541	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:08:54,542	[INFO]	140	SUCCESS	+13.0	
2020-12-10 07:08:54,542	[DEBUG]	
2020-12-10 07:08:55,417	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:08:56,315	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:08:57,215	[INFO]	143	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:08:58,083	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:08:58,995	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:09:02,280	[INFO]	146	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:09:02,281	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:09:03,172	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:09:06,372	[INFO]	148	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:09:06,374	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,42 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:09:09,735	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:09:09,738	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,42 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 36,41 ****
--- 45,51 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:09:09,741	[INFO]	150	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:09:09,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,42 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:09:12,996	[INFO]	151	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:09:12,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,42 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 41,46 ****
--- 50,56 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:13,912	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:09:17,176	[INFO]	153	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:09:17,178	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 49,55 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:17,180	[INFO]	154	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:09:17,181	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 49,55 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:17,183	[INFO]	155	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:09:17,184	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 49,55 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:17,887	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:09:21,169	[INFO]	157	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:09:21,170	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,47 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 58,64 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:24,472	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:09:24,473	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 41,46 ****
--- 50,56 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:09:27,745	[INFO]	159	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:09:27,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:09:28,653	[INFO]	160	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:09:29,577	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:09:29,579	[INFO]	162	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:09:29,580	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:09:32,848	[INFO]	163	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:09:32,849	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:09:32,849	[INFO]	164	SUCCESS	+13.0	
2020-12-10 07:09:32,850	[DEBUG]	
2020-12-10 07:09:33,700	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:09:36,975	[INFO]	166	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:09:36,978	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:09:37,858	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:09:38,712	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:09:39,648	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:09:40,536	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:09:41,402	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:09:41,403	[INFO]	172	SUCCESS	+13.0	
2020-12-10 07:09:41,404	[DEBUG]	
2020-12-10 07:09:42,326	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:09:43,212	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:09:44,072	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:09:44,940	[INFO]	176	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:09:45,819	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:09:46,722	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:09:47,606	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:09:48,505	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:09:49,405	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:09:50,146	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:09:51,048	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:09:54,266	[INFO]	184	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:09:54,267	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:09:54,268	[INFO]	185	SUCCESS	+13.0	
2020-12-10 07:09:54,268	[DEBUG]	
2020-12-10 07:09:57,508	[INFO]	186	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:09:57,509	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:09:57,510	[INFO]	187	SUCCESS	+13.0	
2020-12-10 07:09:57,510	[DEBUG]	
2020-12-10 07:09:58,347	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:09:59,088	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:10:00,059	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:10:00,965	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:10:01,849	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:10:02,719	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:10:03,618	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:10:04,529	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:10:05,435	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:10:08,741	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:10:08,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:10:11,990	[INFO]	198	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:10:11,991	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,35 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:10:11,992	[INFO]	199	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:10:11,993	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:10:11,994	[INFO]	200	SUCCESS	+13.0	
2020-12-10 07:10:11,994	[DEBUG]	
2020-12-10 07:10:12,902	[INFO]	201	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:10:13,804	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:10:14,711	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:10:15,631	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:10:16,533	[INFO]	205	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:10:17,434	[INFO]	206	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:10:20,832	[INFO]	207	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:10:20,833	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:10:21,684	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:10:21,685	[INFO]	209	SUCCESS	+13.0	
2020-12-10 07:10:21,685	[DEBUG]	
2020-12-10 07:10:22,570	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:10:23,462	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:10:26,725	[INFO]	212	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:10:26,726	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:10:26,727	[INFO]	213	SUCCESS	+13.0	
2020-12-10 07:10:26,727	[DEBUG]	
2020-12-10 07:10:29,996	[INFO]	214	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:10:29,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:10:29,999	[INFO]	215	SUCCESS	+13.0	
2020-12-10 07:10:30,000	[DEBUG]	
2020-12-10 07:10:30,890	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:10:34,211	[INFO]	217	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:10:34,212	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:10:37,451	[INFO]	218	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 07:10:37,452	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,41 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:37,453	[INFO]	219	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:10:37,454	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,41 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:37,455	[INFO]	220	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 07:10:37,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,41 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 21,33 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:40,660	[INFO]	221	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:10:40,661	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,41 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 21,34 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:40,663	[INFO]	222	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:10:40,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,41 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 21,34 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:41,540	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:10:44,764	[INFO]	224	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:10:44,766	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 31,42 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:44,767	[INFO]	225	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:10:44,767	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 31,42 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:10:48,047	[INFO]	226	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:10:48,048	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 31,42 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:10:51,198	[INFO]	227	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:10:51,199	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:10:54,319	[INFO]	228	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:10:54,320	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:10:57,480	[INFO]	229	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:10:57,484	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,49 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 40,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:10:58,367	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:10:58,368	[INFO]	231	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:10:58,369	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:01,595	[INFO]	232	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:11:01,596	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:04,707	[INFO]	233	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:11:04,710	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:04,712	[INFO]	234	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:11:04,714	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:07,885	[INFO]	235	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:11:07,887	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 31,36 ****
--- 33,42 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 49,56 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:07,889	[INFO]	236	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:11:07,890	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 31,36 ****
--- 33,42 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 49,56 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:07,891	[INFO]	237	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:11:07,892	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(left.get(i));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:08,785	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:11:12,083	[INFO]	239	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:11:12,084	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:12,085	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:11:12,086	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:12,969	[INFO]	241	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:11:13,854	[INFO]	242	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:11:13,855	[INFO]	243	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:11:13,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 46,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:17,152	[INFO]	244	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:11:17,153	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,25 ****
--- 18,28 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 47,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:20,421	[INFO]	245	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:11:20,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:23,694	[INFO]	246	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:11:23,695	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:23,695	[INFO]	247	SUCCESS	+13.0	
2020-12-10 07:11:23,696	[DEBUG]	
2020-12-10 07:11:24,543	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:11:25,437	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:11:28,877	[INFO]	250	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:11:28,878	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:32,051	[INFO]	251	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:11:32,052	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,35 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:32,760	[INFO]	252	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:11:35,978	[INFO]	253	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:11:35,979	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,47 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:39,265	[INFO]	254	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:11:39,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,48 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 
+                 i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:39,270	[INFO]	255	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:11:39,273	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,47 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:42,545	[INFO]	256	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:11:42,546	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:11:45,629	[INFO]	257	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:11:45,630	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 53,59 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:48,815	[INFO]	258	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:11:48,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:49,667	[INFO]	259	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:11:50,545	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:11:51,467	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:11:54,633	[INFO]	262	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:11:54,634	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:57,721	[INFO]	263	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:11:57,722	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:11:57,723	[INFO]	264	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:11:57,723	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:12:00,880	[INFO]	265	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:12:00,882	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 46,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:12:04,013	[INFO]	266	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:12:04,014	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 46,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:12:04,883	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:12:08,025	[INFO]	268	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:12:08,026	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 23,31 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 37,45 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 47,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:12:11,247	[INFO]	269	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:12:11,248	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,40 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 46,54 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 56,62 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:12:14,407	[INFO]	270	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:12:14,410	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
--- 23,40 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 46,54 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 56,64 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:17,555	[INFO]	271	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:12:17,558	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,38 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 45,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 55,63 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:20,852	[INFO]	272	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:12:20,855	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 45,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
          }
--- 55,63 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:21,721	[INFO]	273	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:12:24,981	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:12:24,982	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 45,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 45,50 ****
--- 57,63 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:28,279	[INFO]	275	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:12:28,281	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 45,53 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 45,50 ****
--- 57,64 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:31,568	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:12:31,569	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 45,50 ****
--- 48,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:34,786	[INFO]	277	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:12:34,787	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:35,644	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:12:36,633	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:12:37,543	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:12:40,747	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:12:40,749	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 45,50 ****
--- 45,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:41,653	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:12:42,618	[INFO]	283	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:12:43,556	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:12:44,465	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:12:47,840	[INFO]	286	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:12:47,841	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }
***************
*** 45,50 ****
--- 46,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:51,092	[INFO]	287	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:12:51,095	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:51,968	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:12:55,202	[INFO]	289	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:12:55,205	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 07:12:58,452	[INFO]	290	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:12:58,453	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 07:12:58,454	[INFO]	291	SUCCESS	+13.0	
2020-12-10 07:12:58,454	[DEBUG]	
2020-12-10 07:12:59,318	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:13:00,201	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:13:01,072	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:13:04,335	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:13:04,336	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:13:04,337	[INFO]	296	SUCCESS	+13.0	
2020-12-10 07:13:04,337	[DEBUG]	
2020-12-10 07:13:05,229	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:13:06,107	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:13:07,013	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:13:07,878	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:13:11,219	[INFO]	301	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:13:11,220	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:13:11,221	[INFO]	302	SUCCESS	+13.0	
2020-12-10 07:13:11,221	[DEBUG]	
2020-12-10 07:13:12,141	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:13:13,012	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:13:16,332	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:13:16,333	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:13:16,334	[INFO]	306	SUCCESS	+13.0	
2020-12-10 07:13:16,334	[DEBUG]	
2020-12-10 07:13:17,168	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:13:18,031	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:13:18,950	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:13:19,843	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:13:20,728	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:13:21,608	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:13:22,485	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:13:22,486	[INFO]	314	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 07:13:22,487	[DEBUG]	
2020-12-10 07:13:23,404	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:13:23,407	[INFO]	316	SUCCESS	+13.0	
2020-12-10 07:13:23,408	[DEBUG]	
2020-12-10 07:13:24,134	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:13:27,450	[INFO]	318	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:13:27,451	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:13:30,723	[INFO]	319	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:13:30,724	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 44,52 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:13:31,601	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:13:31,603	[INFO]	321	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:13:31,603	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:13:32,496	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:13:32,497	[INFO]	323	SUCCESS	+13.0	
2020-12-10 07:13:32,498	[DEBUG]	
2020-12-10 07:13:33,379	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:13:34,094	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:13:34,989	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:13:38,105	[INFO]	327	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:13:38,107	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:13:38,107	[INFO]	328	SUCCESS	+13.0	
2020-12-10 07:13:38,108	[DEBUG]	
2020-12-10 07:13:39,012	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:13:39,899	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:13:43,059	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:13:43,060	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 07:13:43,061	[INFO]	332	SUCCESS	+13.0	
2020-12-10 07:13:43,061	[DEBUG]	
2020-12-10 07:13:46,318	[INFO]	333	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:13:46,319	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,44 ----
                  j++;
              }
          }
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          return result;
      }
  

2020-12-10 07:13:46,320	[INFO]	334	SUCCESS	+13.0	
2020-12-10 07:13:46,320	[DEBUG]	
2020-12-10 07:13:47,186	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:13:47,188	[INFO]	336	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:13:47,188	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:13:47,189	[INFO]	337	SUCCESS	+13.0	
2020-12-10 07:13:47,189	[DEBUG]	
2020-12-10 07:13:50,447	[INFO]	338	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:13:50,449	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:13:50,451	[INFO]	339	SUCCESS	+13.0	
2020-12-10 07:13:50,452	[DEBUG]	
2020-12-10 07:13:51,398	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:13:52,278	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:13:53,171	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:13:54,058	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:13:54,787	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:13:57,963	[INFO]	345	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:13:57,964	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:13:57,965	[INFO]	346	SUCCESS	+13.0	
2020-12-10 07:13:57,965	[DEBUG]	
2020-12-10 07:13:58,666	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:14:01,864	[INFO]	348	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:14:01,865	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:14:05,164	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:14:05,165	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:14:05,845	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:14:09,116	[INFO]	351	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:14:09,119	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+         i++;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,48 ****
--- 48,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:14:09,122	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:14:09,125	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:14:09,996	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:14:09,997	[INFO]	354	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:14:09,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:14:09,999	[INFO]	355	SUCCESS	+13.0	
2020-12-10 07:14:09,999	[DEBUG]	
2020-12-10 07:14:10,877	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:14:11,793	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:14:12,672	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:14:13,548	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:14:16,830	[INFO]	360	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:14:16,831	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:14:16,831	[INFO]	361	SUCCESS	+13.0	
2020-12-10 07:14:16,832	[DEBUG]	
2020-12-10 07:14:17,703	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:14:18,618	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:14:19,506	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:14:20,375	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:14:21,293	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:14:22,169	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:14:25,372	[INFO]	368	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:14:25,373	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:14:25,374	[INFO]	369	SUCCESS	+13.0	
2020-12-10 07:14:25,374	[DEBUG]	
2020-12-10 07:14:28,666	[INFO]	370	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:14:28,667	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:14:28,668	[INFO]	371	SUCCESS	+13.0	
2020-12-10 07:14:28,668	[DEBUG]	
2020-12-10 07:14:31,929	[INFO]	372	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:14:31,930	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  

2020-12-10 07:14:32,838	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:14:32,840	[INFO]	374	SUCCESS	+13.0	
2020-12-10 07:14:32,841	[DEBUG]	
2020-12-10 07:14:33,721	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:14:36,967	[INFO]	376	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:14:36,969	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:14:36,970	[INFO]	377	SUCCESS	+13.0	
2020-12-10 07:14:36,971	[DEBUG]	
2020-12-10 07:14:37,689	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:14:38,596	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:14:39,473	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:14:40,365	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:14:41,246	[INFO]	382	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:14:42,187	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:14:42,911	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:14:43,808	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:14:44,664	[INFO]	386	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:14:47,828	[INFO]	387	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:14:47,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:14:47,829	[INFO]	388	SUCCESS	+13.0	
2020-12-10 07:14:47,830	[DEBUG]	
2020-12-10 07:14:51,213	[INFO]	389	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:14:51,213	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 07:14:52,075	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:14:52,992	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:14:53,885	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:14:56,991	[INFO]	393	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 07:14:56,992	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:15:00,204	[INFO]	394	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 07:15:00,205	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:15:00,206	[INFO]	395	SUCCESS	+13.0	
2020-12-10 07:15:00,206	[DEBUG]	
2020-12-10 07:15:03,365	[INFO]	396	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:15:03,368	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 07:15:03,370	[INFO]	397	SUCCESS	+13.0	
2020-12-10 07:15:03,371	[DEBUG]	
2020-12-10 07:15:04,235	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:15:05,129	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:15:06,004	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:15:06,910	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:15:07,790	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:15:08,676	[INFO]	403	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:15:09,550	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:15:10,272	[INFO]	405	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:15:11,134	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:15:14,415	[INFO]	407	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:15:14,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:15:15,193	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:15:16,095	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:15:16,096	[INFO]	410	SUCCESS	+13.0	
2020-12-10 07:15:16,097	[DEBUG]	
2020-12-10 07:15:16,983	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:15:17,878	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:15:18,577	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:15:19,456	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:15:20,377	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:15:21,293	[INFO]	416	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:15:24,508	[INFO]	417	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:15:24,509	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:15:25,401	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:15:28,696	[INFO]	419	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:15:28,697	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:15:29,562	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:15:30,286	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:15:31,179	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:15:32,059	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:15:32,981	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:15:33,852	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:15:37,994	[INFO]	426	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:15:37,996	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  
***************
*** 42,49 ****
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:15:38,971	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:15:39,679	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:15:39,681	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:15:39,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:15:40,589	[INFO]	430	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:15:41,492	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:15:41,493	[INFO]	432	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:15:41,494	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:15:41,495	[INFO]	433	SUCCESS	+13.0	
2020-12-10 07:15:41,495	[DEBUG]	
2020-12-10 07:15:44,708	[INFO]	434	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:15:44,709	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:15:44,710	[INFO]	435	SUCCESS	+13.0	
2020-12-10 07:15:44,710	[DEBUG]	
2020-12-10 07:15:47,973	[INFO]	436	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:15:47,974	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:15:48,844	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:15:49,762	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:15:49,765	[INFO]	439	SUCCESS	+13.0	
2020-12-10 07:15:49,766	[DEBUG]	
2020-12-10 07:15:53,023	[INFO]	440	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:15:53,023	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 07:15:53,024	[INFO]	441	SUCCESS	+13.0	
2020-12-10 07:15:53,024	[DEBUG]	
2020-12-10 07:15:56,218	[INFO]	442	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 07:15:56,220	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:15:59,319	[INFO]	443	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:15:59,320	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() != 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:16:02,496	[INFO]	444	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:16:02,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 36,41 ****
--- 37,45 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
+         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:16:02,499	[INFO]	445	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:16:02,499	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() != 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:16:03,391	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:16:06,628	[INFO]	447	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:16:06,629	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:16:07,523	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:16:08,413	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:16:08,414	[INFO]	450	SUCCESS	+13.0	
2020-12-10 07:16:08,415	[DEBUG]	
2020-12-10 07:16:09,298	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:16:10,196	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:16:11,074	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:16:14,327	[INFO]	454	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:16:14,328	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 07:16:14,328	[INFO]	455	SUCCESS	+13.0	
2020-12-10 07:16:14,329	[DEBUG]	
2020-12-10 07:16:15,179	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:16:18,369	[INFO]	457	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:16:18,370	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:16:18,370	[INFO]	458	SUCCESS	+13.0	
2020-12-10 07:16:18,371	[DEBUG]	
2020-12-10 07:16:18,371	[INFO]	459	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:16:19,267	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:16:20,185	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:16:21,093	[INFO]	462	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:16:21,094	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:16:21,803	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:16:25,044	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:16:25,045	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:16:25,046	[INFO]	466	SUCCESS	+13.0	
2020-12-10 07:16:25,046	[DEBUG]	
2020-12-10 07:16:25,881	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:16:26,763	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:16:27,627	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:16:30,896	[INFO]	470	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:16:30,897	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:16:31,587	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:16:31,588	[INFO]	472	SUCCESS	+13.0	
2020-12-10 07:16:31,589	[DEBUG]	
2020-12-10 07:16:32,468	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:16:33,340	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:16:34,238	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:16:35,109	[INFO]	476	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:16:36,017	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:16:36,902	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:16:37,616	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:16:38,479	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:16:41,730	[INFO]	481	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:16:41,732	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:16:42,629	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:16:42,632	[INFO]	483	SUCCESS	+13.0	
2020-12-10 07:16:42,633	[DEBUG]	
2020-12-10 07:16:43,517	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:16:46,758	[INFO]	485	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:16:46,760	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:16:50,010	[INFO]	486	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:16:50,011	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:16:50,938	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:16:50,940	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:16:50,940	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:16:50,941	[INFO]	489	SUCCESS	+13.0	
2020-12-10 07:16:50,942	[DEBUG]	
2020-12-10 07:16:54,210	[INFO]	490	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:16:54,212	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:16:55,078	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:16:55,955	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:16:56,822	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:17:00,145	[INFO]	494	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:17:00,147	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:17:00,148	[INFO]	495	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:17:00,149	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:17:01,038	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:17:01,040	[INFO]	497	SUCCESS	+13.0	
2020-12-10 07:17:01,041	[DEBUG]	
2020-12-10 07:17:01,942	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:17:02,845	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:17:06,076	[INFO]	500	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:17:06,077	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:17:06,078	[INFO]	==== END ====
2020-12-10 07:17:06,078	[INFO]	Reason: step budget
2020-12-10 07:17:06,078	[INFO]	
2020-12-10 07:17:06,078	[INFO]	========== EPOCH 11 ==========
2020-12-10 07:17:06,079	[INFO]	==== WARMUP ====
2020-12-10 07:17:09,333	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:17:09,333	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:17:12,570	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:17:12,570	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:17:15,754	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:17:15,754	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:17:18,996	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:17:18,996	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:17:18,996	[INFO]	==== START ====
2020-12-10 07:17:22,204	[INFO]	1	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:17:22,206	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:17:23,086	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:17:26,421	[INFO]	3	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:17:26,423	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:17:29,645	[INFO]	4	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:17:29,647	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:17:32,859	[INFO]	5	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:17:32,860	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:17:36,113	[INFO]	6	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:17:36,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:17:36,972	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:17:36,973	[INFO]	8	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:17:36,974	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:17:37,959	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:17:38,838	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:17:42,095	[INFO]	11	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:17:42,096	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:17:42,984	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:17:42,986	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:17:42,987	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:17:46,189	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:17:46,190	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:17:46,191	[INFO]	15	SUCCESS	+13.0	
2020-12-10 07:17:46,191	[DEBUG]	
2020-12-10 07:17:47,057	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:17:47,940	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:17:48,831	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:17:49,761	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:17:53,068	[INFO]	20	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:17:53,069	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:17:53,926	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:17:54,826	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:17:55,939	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:17:57,089	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:17:58,419	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:17:58,421	[INFO]	26	SUCCESS	+13.0	
2020-12-10 07:17:58,422	[DEBUG]	
2020-12-10 07:17:59,709	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:18:00,841	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:18:02,009	[INFO]	29	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:18:02,922	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:18:03,653	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:18:04,522	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:18:05,425	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:18:06,319	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:18:07,239	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:18:08,140	[INFO]	36	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:18:09,042	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:18:09,986	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:18:10,905	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:18:11,830	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:18:12,713	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:18:13,606	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:18:14,506	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:18:15,396	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:18:18,662	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:18:18,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:18:19,618	[INFO]	46	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:18:20,545	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:18:20,546	[INFO]	48	SUCCESS	+13.0	
2020-12-10 07:18:20,547	[DEBUG]	
2020-12-10 07:18:21,445	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:18:22,341	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:18:25,695	[INFO]	51	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:18:25,696	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:18:25,696	[INFO]	52	SUCCESS	+13.0	
2020-12-10 07:18:25,697	[DEBUG]	
2020-12-10 07:18:26,497	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:18:27,420	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:18:28,316	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:18:29,224	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:18:30,140	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:18:31,024	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:18:34,379	[INFO]	59	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:18:34,380	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 07:18:34,381	[INFO]	60	SUCCESS	+13.0	
2020-12-10 07:18:34,382	[DEBUG]	
2020-12-10 07:18:35,250	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:18:36,144	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:18:37,015	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:18:40,315	[INFO]	64	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:18:40,316	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:18:41,191	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:18:41,192	[INFO]	66	SUCCESS	+13.0	
2020-12-10 07:18:41,193	[DEBUG]	
2020-12-10 07:18:42,100	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:18:42,105	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:18:42,821	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:18:46,056	[INFO]	70	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:18:46,057	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:18:49,267	[INFO]	71	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:18:49,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:18:50,127	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:18:51,046	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:18:51,048	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:18:51,048	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:18:51,049	[INFO]	75	SUCCESS	+13.0	
2020-12-10 07:18:51,049	[DEBUG]	
2020-12-10 07:18:51,778	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:18:52,664	[INFO]	77	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:18:55,957	[INFO]	78	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:18:55,958	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:18:59,461	[INFO]	79	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:18:59,462	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 30,35 ****
--- 31,37 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:18:59,463	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:18:59,464	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:18:59,464	[INFO]	81	SUCCESS	+13.0	
2020-12-10 07:18:59,465	[DEBUG]	
2020-12-10 07:19:02,658	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:19:02,659	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:19:02,660	[INFO]	83	SUCCESS	+13.0	
2020-12-10 07:19:02,660	[DEBUG]	
2020-12-10 07:19:03,506	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:19:06,756	[INFO]	85	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 07:19:06,757	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:19:06,758	[INFO]	86	SUCCESS	+13.0	
2020-12-10 07:19:06,758	[DEBUG]	
2020-12-10 07:19:07,628	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:19:10,769	[INFO]	88	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 07:19:10,770	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:19:11,635	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:19:11,636	[INFO]	90	SUCCESS	+13.0	
2020-12-10 07:19:11,637	[DEBUG]	
2020-12-10 07:19:12,512	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:19:13,225	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:19:13,920	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:19:14,766	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:19:18,001	[INFO]	95	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:19:18,002	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:19:18,003	[INFO]	96	SUCCESS	+13.0	
2020-12-10 07:19:18,003	[DEBUG]	
2020-12-10 07:19:19,062	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:19:20,103	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:19:21,007	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:19:24,344	[INFO]	100	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:19:24,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:25,181	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:19:28,448	[INFO]	102	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:19:28,449	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,37 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:29,349	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:19:29,350	[INFO]	104	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:19:29,350	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:32,653	[INFO]	105	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:19:32,654	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:32,655	[INFO]	106	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:19:32,656	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:33,519	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:19:34,396	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:19:34,398	[INFO]	109	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:19:34,399	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:35,282	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:19:36,158	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:19:36,160	[INFO]	112	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:19:36,160	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:37,075	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:19:40,405	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:19:40,408	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,32 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 23,36 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:40,410	[INFO]	115	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:19:40,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:43,595	[INFO]	116	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:19:43,596	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
--- 24,36 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:19:44,450	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:19:44,452	[INFO]	118	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:19:44,452	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:19:44,453	[INFO]	119	SUCCESS	+13.0	
2020-12-10 07:19:44,453	[DEBUG]	
2020-12-10 07:19:45,345	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:19:46,239	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:19:49,498	[INFO]	122	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:19:49,499	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:19:50,357	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:19:50,358	[INFO]	124	SUCCESS	+13.0	
2020-12-10 07:19:50,358	[DEBUG]	
2020-12-10 07:19:51,248	[INFO]	125	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:19:52,142	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:19:55,344	[INFO]	127	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:19:55,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:19:56,222	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:19:56,223	[INFO]	129	SUCCESS	+13.0	
2020-12-10 07:19:56,223	[DEBUG]	
2020-12-10 07:19:57,106	[INFO]	130	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:19:57,992	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:19:58,878	[INFO]	132	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:20:02,174	[INFO]	133	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 07:20:02,175	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:20:02,176	[INFO]	134	SUCCESS	+13.0	
2020-12-10 07:20:02,177	[DEBUG]	
2020-12-10 07:20:03,068	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:20:06,364	[INFO]	136	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:20:06,365	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:20:09,550	[INFO]	137	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:20:09,551	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:20:09,552	[INFO]	138	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:20:09,553	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:20:10,290	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:20:11,518	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:20:11,521	[INFO]	141	SUCCESS	+13.0	
2020-12-10 07:20:11,522	[DEBUG]	
2020-12-10 07:20:12,485	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:20:13,379	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:20:14,233	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:20:15,124	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:20:15,991	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:20:19,313	[INFO]	147	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:20:19,314	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:20:20,171	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:20:20,173	[INFO]	149	SUCCESS	+13.0	
2020-12-10 07:20:20,173	[DEBUG]	
2020-12-10 07:20:20,864	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:20:21,762	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:20:22,681	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:20:23,597	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:20:26,829	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:20:26,830	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:20:27,684	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:20:27,685	[INFO]	156	SUCCESS	+13.0	
2020-12-10 07:20:27,686	[DEBUG]	
2020-12-10 07:20:28,411	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:20:29,315	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:20:30,220	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:20:30,943	[INFO]	160	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:20:31,812	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:20:35,232	[INFO]	162	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:20:35,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:20:36,218	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:20:37,125	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:20:40,404	[INFO]	165	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:20:40,406	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:20:40,406	[INFO]	166	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:20:40,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:20:43,685	[INFO]	167	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:20:43,686	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
-         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,45 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          return result;
      }
  

2020-12-10 07:20:44,368	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:20:45,282	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:20:46,182	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:20:49,510	[INFO]	171	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:20:49,511	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
-         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,46 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
+                 result.add(left.get(i));
+                 j++;
+             }
+         }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          return result;
      }
  

2020-12-10 07:20:52,905	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:20:52,906	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
--- 26,46 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 07:20:56,170	[INFO]	173	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:20:56,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:20:56,172	[INFO]	174	SUCCESS	+13.0	
2020-12-10 07:20:56,172	[DEBUG]	
2020-12-10 07:20:57,033	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:21:00,258	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:21:00,259	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:21:03,563	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:21:03,564	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:21:06,838	[INFO]	178	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:21:06,839	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
--- 26,39 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:21:07,680	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:21:11,034	[INFO]	180	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:21:11,035	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,38 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:21:14,276	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:21:14,277	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:21:15,142	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:21:16,025	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:21:16,916	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:21:20,177	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:21:20,179	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,37 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:21:23,470	[INFO]	186	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:21:23,471	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 07:21:24,368	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:21:25,271	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:21:26,182	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:21:26,183	[INFO]	190	SUCCESS	+13.0	
2020-12-10 07:21:26,183	[DEBUG]	
2020-12-10 07:21:27,068	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:21:30,337	[INFO]	192	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:21:30,338	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:21:33,611	[INFO]	193	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:21:33,612	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
                  j++;
              }
          }
***************
*** 44,49 ****
--- 47,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:21:33,613	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:21:33,614	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:21:33,614	[INFO]	195	SUCCESS	+13.0	
2020-12-10 07:21:33,615	[DEBUG]	
2020-12-10 07:21:34,450	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:21:35,316	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:21:36,227	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:21:37,108	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:21:37,982	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:21:41,259	[INFO]	201	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:21:41,261	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:21:41,938	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:21:41,939	[INFO]	203	SUCCESS	+13.0	
2020-12-10 07:21:41,940	[DEBUG]	
2020-12-10 07:21:41,940	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:21:41,941	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:21:42,810	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:21:42,811	[INFO]	206	SUCCESS	+13.0	
2020-12-10 07:21:42,811	[DEBUG]	
2020-12-10 07:21:43,705	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:21:44,583	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:21:47,843	[INFO]	209	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:21:47,844	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:21:48,700	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:21:49,571	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:21:49,572	[INFO]	212	SUCCESS	+13.0	
2020-12-10 07:21:49,572	[DEBUG]	
2020-12-10 07:21:50,524	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:21:51,455	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:21:51,457	[INFO]	215	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:21:51,457	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:21:51,458	[INFO]	216	SUCCESS	+13.0	
2020-12-10 07:21:51,458	[DEBUG]	
2020-12-10 07:21:52,354	[INFO]	217	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:21:53,229	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:21:56,480	[INFO]	219	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:21:56,481	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:21:56,481	[INFO]	220	SUCCESS	+13.0	
2020-12-10 07:21:56,482	[DEBUG]	
2020-12-10 07:21:57,205	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:21:58,076	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:21:58,976	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:22:02,235	[INFO]	224	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:22:02,236	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:22:03,115	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:22:03,117	[INFO]	226	SUCCESS	+13.0	
2020-12-10 07:22:03,118	[DEBUG]	
2020-12-10 07:22:04,029	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:22:04,915	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:22:08,203	[INFO]	229	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:22:08,204	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:22:08,205	[INFO]	230	SUCCESS	+13.0	
2020-12-10 07:22:08,205	[DEBUG]	
2020-12-10 07:22:08,901	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:22:09,763	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:22:10,686	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:22:11,573	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:22:14,794	[INFO]	235	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:22:14,795	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:22:14,796	[INFO]	236	SUCCESS	+13.0	
2020-12-10 07:22:14,796	[DEBUG]	
2020-12-10 07:22:15,669	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:22:16,548	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:22:17,444	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:22:18,319	[INFO]	240	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:22:21,606	[INFO]	241	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:22:21,607	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:22:24,850	[INFO]	242	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:22:24,851	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:22:28,112	[INFO]	243	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:22:28,113	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 07:22:28,114	[INFO]	244	SUCCESS	+13.0	
2020-12-10 07:22:28,115	[DEBUG]	
2020-12-10 07:22:31,372	[INFO]	245	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:22:31,373	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:22:31,374	[INFO]	246	SUCCESS	+13.0	
2020-12-10 07:22:31,375	[DEBUG]	
2020-12-10 07:22:34,713	[INFO]	247	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:22:34,714	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:22:34,715	[INFO]	248	SUCCESS	+13.0	
2020-12-10 07:22:34,715	[DEBUG]	
2020-12-10 07:22:35,586	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:22:38,905	[INFO]	250	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:22:38,906	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:22:42,140	[INFO]	251	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:22:42,141	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:22:42,142	[INFO]	252	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:22:42,143	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:22:45,730	[INFO]	253	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:22:45,731	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 37,45 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:22:46,669	[INFO]	254	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:22:47,620	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:22:50,835	[INFO]	256	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:22:50,836	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:22:51,822	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:22:51,823	[INFO]	258	SUCCESS	+13.0	
2020-12-10 07:22:51,823	[DEBUG]	
2020-12-10 07:22:55,182	[INFO]	259	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:22:55,186	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:22:56,072	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:22:56,073	[INFO]	261	SUCCESS	+13.0	
2020-12-10 07:22:56,074	[DEBUG]	
2020-12-10 07:22:56,931	[INFO]	262	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:23:00,231	[INFO]	263	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:23:00,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:23:00,235	[INFO]	264	SUCCESS	+13.0	
2020-12-10 07:23:00,236	[DEBUG]	
2020-12-10 07:23:01,097	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:23:01,966	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:23:02,835	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:23:03,734	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:23:04,651	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:23:05,567	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:23:08,807	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:23:08,808	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:23:09,683	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:23:09,684	[INFO]	273	SUCCESS	+13.0	
2020-12-10 07:23:09,684	[DEBUG]	
2020-12-10 07:23:12,956	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:23:12,957	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:23:12,958	[INFO]	275	SUCCESS	+13.0	
2020-12-10 07:23:12,958	[DEBUG]	
2020-12-10 07:23:13,839	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:23:14,730	[INFO]	277	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:23:15,622	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:23:16,516	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:23:17,244	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:23:20,486	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:23:20,487	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:23:20,489	[INFO]	282	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:23:20,489	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 07:23:21,365	[INFO]	283	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:23:21,366	[INFO]	284	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:23:21,366	[DEBUG]	
2020-12-10 07:23:22,257	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:23:23,145	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:23:24,031	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:23:24,937	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:23:25,847	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:23:26,732	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:23:26,734	[INFO]	291	SUCCESS	+13.0	
2020-12-10 07:23:26,734	[DEBUG]	
2020-12-10 07:23:27,635	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:23:28,559	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:23:29,450	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:23:30,347	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:23:33,606	[INFO]	296	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:23:33,607	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:23:33,608	[INFO]	297	SUCCESS	+13.0	
2020-12-10 07:23:33,608	[DEBUG]	
2020-12-10 07:23:34,498	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:23:35,380	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:23:36,324	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:23:39,569	[INFO]	301	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:23:39,570	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:23:42,806	[INFO]	302	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:23:42,808	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 49,55 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:23:43,682	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:23:46,928	[INFO]	304	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:23:46,929	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:23:46,930	[INFO]	305	SUCCESS	+13.0	
2020-12-10 07:23:46,930	[DEBUG]	
2020-12-10 07:23:47,796	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:23:48,678	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:23:49,583	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:23:50,300	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:23:53,570	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:23:53,571	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:23:54,253	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:23:55,076	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:23:55,077	[INFO]	313	SUCCESS	+13.0	
2020-12-10 07:23:55,078	[DEBUG]	
2020-12-10 07:23:58,380	[INFO]	314	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:23:58,381	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:23:59,058	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:23:59,060	[INFO]	316	SUCCESS	+13.0	
2020-12-10 07:23:59,061	[DEBUG]	
2020-12-10 07:24:02,322	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:24:02,323	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:24:02,324	[INFO]	318	SUCCESS	+13.0	
2020-12-10 07:24:02,324	[DEBUG]	
2020-12-10 07:24:05,536	[INFO]	319	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:24:05,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:24:05,538	[INFO]	320	SUCCESS	+13.0	
2020-12-10 07:24:05,538	[DEBUG]	
2020-12-10 07:24:06,434	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:24:09,731	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:24:09,732	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:24:09,733	[INFO]	323	SUCCESS	+13.0	
2020-12-10 07:24:09,733	[DEBUG]	
2020-12-10 07:24:13,068	[INFO]	324	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:24:13,069	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:24:13,069	[INFO]	325	SUCCESS	+13.0	
2020-12-10 07:24:13,070	[DEBUG]	
2020-12-10 07:24:13,908	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:24:14,782	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:24:15,661	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:24:18,944	[INFO]	329	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:24:18,947	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:24:18,949	[INFO]	330	SUCCESS	+13.0	
2020-12-10 07:24:18,949	[DEBUG]	
2020-12-10 07:24:22,189	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:24:22,191	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:24:23,086	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:24:23,088	[INFO]	333	SUCCESS	+13.0	
2020-12-10 07:24:23,089	[DEBUG]	
2020-12-10 07:24:23,977	[INFO]	334	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:24:27,366	[INFO]	335	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:24:27,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:24:30,626	[INFO]	336	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:24:30,627	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 45,50 ****
--- 46,54 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 07:24:33,889	[INFO]	337	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:24:33,891	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 07:24:34,780	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:24:34,782	[INFO]	339	SUCCESS	+13.0	
2020-12-10 07:24:34,782	[DEBUG]	
2020-12-10 07:24:35,675	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:24:36,571	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:24:36,572	[INFO]	342	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 07:24:36,572	[DEBUG]	
2020-12-10 07:24:36,573	[INFO]	343	SUCCESS	+13.0	
2020-12-10 07:24:36,573	[DEBUG]	
2020-12-10 07:24:37,467	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:24:38,361	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:24:39,233	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:24:40,076	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:24:41,000	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:24:44,299	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:24:44,299	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:24:45,143	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:24:45,144	[INFO]	351	SUCCESS	+13.0	
2020-12-10 07:24:45,145	[DEBUG]	
2020-12-10 07:24:46,112	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:24:47,026	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:24:47,934	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:24:48,815	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:24:49,732	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:24:50,647	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:24:51,522	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:24:52,435	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:24:55,681	[INFO]	360	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:24:55,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:24:58,920	[INFO]	361	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:24:58,921	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,36 ****
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 26,37 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:25:02,175	[INFO]	362	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:25:02,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:25:02,176	[INFO]	363	SUCCESS	+13.0	
2020-12-10 07:25:02,177	[DEBUG]	
2020-12-10 07:25:03,019	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:25:03,898	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:25:04,777	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:25:08,112	[INFO]	367	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:25:08,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:25:08,115	[INFO]	368	SUCCESS	+13.0	
2020-12-10 07:25:08,115	[DEBUG]	
2020-12-10 07:25:11,354	[INFO]	369	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:25:11,355	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:25:11,356	[INFO]	370	SUCCESS	+13.0	
2020-12-10 07:25:11,356	[DEBUG]	
2020-12-10 07:25:12,226	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:25:15,514	[INFO]	372	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:25:15,515	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 07:25:16,399	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:25:16,400	[INFO]	374	SUCCESS	+13.0	
2020-12-10 07:25:16,400	[DEBUG]	
2020-12-10 07:25:17,153	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:25:17,157	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:25:18,029	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:25:21,284	[INFO]	378	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:25:21,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:25:21,285	[INFO]	379	SUCCESS	+13.0	
2020-12-10 07:25:21,286	[DEBUG]	
2020-12-10 07:25:24,538	[INFO]	380	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:25:24,539	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:25:25,421	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:25:25,422	[INFO]	382	SUCCESS	+13.0	
2020-12-10 07:25:25,422	[DEBUG]	
2020-12-10 07:25:26,299	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:25:27,193	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:25:28,063	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:25:28,969	[INFO]	386	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:25:29,875	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:25:30,755	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:25:31,669	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:25:32,546	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:25:33,438	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:25:34,366	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:25:38,621	[INFO]	393	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:25:38,622	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:25:38,623	[INFO]	394	SUCCESS	+13.0	
2020-12-10 07:25:38,624	[DEBUG]	
2020-12-10 07:25:39,811	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:25:40,994	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:25:42,179	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:25:46,037	[INFO]	398	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:25:46,039	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:25:46,917	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:25:46,918	[INFO]	400	SUCCESS	+13.0	
2020-12-10 07:25:46,918	[DEBUG]	
2020-12-10 07:25:50,202	[INFO]	401	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='})
2020-12-10 07:25:50,205	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() >= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:25:51,107	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:25:51,108	[INFO]	403	SUCCESS	+13.0	
2020-12-10 07:25:51,109	[DEBUG]	
2020-12-10 07:25:52,002	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:25:52,915	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:25:53,786	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:25:57,045	[INFO]	407	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:25:57,046	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:25:57,911	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:26:01,175	[INFO]	409	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:26:01,176	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int j = 0;
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:26:01,177	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:26:01,177	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:26:04,469	[INFO]	411	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:26:04,470	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:26:08,043	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:26:08,046	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:26:08,966	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:26:08,967	[INFO]	414	SUCCESS	+13.0	
2020-12-10 07:26:08,968	[DEBUG]	
2020-12-10 07:26:12,396	[INFO]	415	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:26:12,398	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:26:12,399	[INFO]	416	SUCCESS	+13.0	
2020-12-10 07:26:12,399	[DEBUG]	
2020-12-10 07:26:13,245	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:26:16,489	[INFO]	418	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:26:16,490	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:26:16,491	[INFO]	419	SUCCESS	+13.0	
2020-12-10 07:26:16,492	[DEBUG]	
2020-12-10 07:26:19,728	[INFO]	420	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:26:19,729	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 07:26:19,730	[INFO]	421	SUCCESS	+13.0	
2020-12-10 07:26:19,731	[DEBUG]	
2020-12-10 07:26:20,609	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:26:21,575	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:26:24,870	[INFO]	424	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:26:24,871	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:26:24,872	[INFO]	425	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:26:24,873	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:26:25,789	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:26:26,773	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:26:27,679	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:26:28,644	[INFO]	429	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:26:28,646	[INFO]	430	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:26:28,647	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:26:31,882	[INFO]	431	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:26:31,883	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:26:31,884	[INFO]	432	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:26:31,885	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:26:31,886	[INFO]	433	SUCCESS	+13.0	
2020-12-10 07:26:31,886	[DEBUG]	
2020-12-10 07:26:32,752	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:26:33,637	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:26:36,839	[INFO]	436	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:26:36,840	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:26:36,841	[INFO]	437	SUCCESS	+13.0	
2020-12-10 07:26:36,842	[DEBUG]	
2020-12-10 07:26:37,726	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:26:38,456	[INFO]	439	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:26:39,184	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:26:40,034	[INFO]	441	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:26:40,907	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:26:41,789	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:26:45,020	[INFO]	444	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:26:45,020	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:26:45,021	[INFO]	445	SUCCESS	+13.0	
2020-12-10 07:26:45,022	[DEBUG]	
2020-12-10 07:26:45,885	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:26:46,771	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:26:46,774	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:26:47,498	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:26:50,789	[INFO]	450	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 07:26:50,790	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:26:50,791	[INFO]	451	SUCCESS	+13.0	
2020-12-10 07:26:50,792	[DEBUG]	
2020-12-10 07:26:51,680	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:26:54,951	[INFO]	453	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:26:54,951	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:26:54,952	[INFO]	454	SUCCESS	+13.0	
2020-12-10 07:26:54,953	[DEBUG]	
2020-12-10 07:26:55,788	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:26:56,674	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:26:56,675	[INFO]	457	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:26:56,676	[DEBUG]	
2020-12-10 07:26:59,944	[INFO]	458	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:26:59,945	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:26:59,947	[INFO]	459	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:26:59,947	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:27:00,836	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:27:01,729	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:27:01,731	[INFO]	462	SUCCESS	+13.0	
2020-12-10 07:27:01,731	[DEBUG]	
2020-12-10 07:27:02,595	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:27:03,459	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:27:04,382	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:27:05,273	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:27:05,274	[INFO]	467	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:27:05,275	[DEBUG]	
2020-12-10 07:27:05,275	[INFO]	468	SUCCESS	+13.0	
2020-12-10 07:27:05,275	[DEBUG]	
2020-12-10 07:27:06,010	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:27:06,923	[INFO]	470	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:27:07,800	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:27:08,712	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:27:11,955	[INFO]	473	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='})
2020-12-10 07:27:11,956	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:27:11,957	[INFO]	474	SUCCESS	+13.0	
2020-12-10 07:27:11,957	[DEBUG]	
2020-12-10 07:27:11,958	[INFO]	475	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:27:11,958	[DEBUG]	
2020-12-10 07:27:11,959	[INFO]	476	SUCCESS	+13.0	
2020-12-10 07:27:11,959	[DEBUG]	
2020-12-10 07:27:12,798	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:27:16,000	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:27:16,001	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:27:16,002	[INFO]	479	SUCCESS	+13.0	
2020-12-10 07:27:16,002	[DEBUG]	
2020-12-10 07:27:19,214	[INFO]	480	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:27:19,215	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:27:20,088	[INFO]	481	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:27:20,987	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:27:21,905	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:27:21,906	[INFO]	484	SUCCESS	+13.0	
2020-12-10 07:27:21,907	[DEBUG]	
2020-12-10 07:27:25,195	[INFO]	485	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:27:25,196	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:27:26,063	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:27:26,064	[INFO]	487	SUCCESS	+13.0	
2020-12-10 07:27:26,065	[DEBUG]	
2020-12-10 07:27:26,946	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:27:30,222	[INFO]	489	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:27:30,223	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:27:31,132	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:27:32,048	[INFO]	491	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:27:32,050	[INFO]	492	SUCCESS	+13.0	
2020-12-10 07:27:32,051	[DEBUG]	
2020-12-10 07:27:32,924	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:27:33,816	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:27:34,717	[INFO]	495	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:27:34,720	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:27:34,721	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:27:38,030	[INFO]	497	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:27:38,031	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 32,38 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:27:41,255	[INFO]	498	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:27:41,256	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:27:41,257	[INFO]	499	SUCCESS	+13.0	
2020-12-10 07:27:41,257	[DEBUG]	
2020-12-10 07:27:42,093	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:27:42,093	[INFO]	==== END ====
2020-12-10 07:27:42,093	[INFO]	Reason: step budget
2020-12-10 07:27:42,094	[INFO]	
2020-12-10 07:27:42,094	[INFO]	========== EPOCH 12 ==========
2020-12-10 07:27:42,095	[INFO]	==== WARMUP ====
2020-12-10 07:27:45,368	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:27:45,368	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:27:48,619	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:27:48,620	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:27:52,007	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:27:52,007	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:27:55,356	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:27:55,356	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:27:55,356	[INFO]	==== START ====
2020-12-10 07:27:56,221	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:27:57,120	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:27:58,049	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:27:58,947	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:27:58,950	[INFO]	5	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:27:58,951	[DEBUG]	
2020-12-10 07:27:59,851	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:28:03,207	[INFO]	7	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:28:03,208	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:28:03,209	[INFO]	8	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:28:03,209	[DEBUG]	
2020-12-10 07:28:06,668	[INFO]	9	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:28:06,669	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:28:07,606	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:28:10,953	[INFO]	11	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:28:10,954	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:28:11,848	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:28:12,837	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:28:12,839	[INFO]	14	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:28:12,840	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:28:13,752	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:28:13,753	[INFO]	16	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:28:13,753	[DEBUG]	
2020-12-10 07:28:13,754	[INFO]	17	SUCCESS	+13.0	
2020-12-10 07:28:13,754	[DEBUG]	
2020-12-10 07:28:14,672	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:28:15,579	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:28:18,914	[INFO]	20	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:28:18,915	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:28:22,434	[INFO]	21	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:28:22,435	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,49 ****
--- 41,51 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:28:22,436	[INFO]	22	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:28:22,437	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:28:25,762	[INFO]	23	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:28:25,763	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,49 ****
--- 42,51 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:28:28,997	[INFO]	24	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:28:28,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:28:28,998	[INFO]	25	SUCCESS	+13.0	
2020-12-10 07:28:28,999	[DEBUG]	
2020-12-10 07:28:29,890	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:28:30,780	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:28:31,685	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:28:32,563	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:28:33,468	[INFO]	30	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:28:34,365	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:28:37,683	[INFO]	32	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:28:37,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 07:28:38,549	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:28:38,552	[INFO]	34	SUCCESS	+13.0	
2020-12-10 07:28:38,552	[DEBUG]	
2020-12-10 07:28:39,415	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:28:39,416	[INFO]	36	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:28:39,417	[DEBUG]	
2020-12-10 07:28:39,417	[INFO]	37	SUCCESS	+13.0	
2020-12-10 07:28:39,417	[DEBUG]	
2020-12-10 07:28:40,294	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:28:43,578	[INFO]	39	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:28:43,579	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:28:43,580	[INFO]	40	SUCCESS	+13.0	
2020-12-10 07:28:43,580	[DEBUG]	
2020-12-10 07:28:44,444	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:28:47,671	[INFO]	42	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:28:47,672	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:28:48,561	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:28:49,444	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:28:52,842	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:28:52,843	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 35,40 ****
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 07:28:56,036	[INFO]	46	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:28:56,038	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 35,40 ****
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
***************
*** 43,48 ****
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:28:59,298	[INFO]	47	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:28:59,299	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:29:00,157	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:29:03,410	[INFO]	49	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:29:03,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:29:03,412	[INFO]	50	SUCCESS	+13.0	
2020-12-10 07:29:03,412	[DEBUG]	
2020-12-10 07:29:04,301	[INFO]	51	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:29:05,183	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:29:06,049	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:29:06,966	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:29:10,308	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:29:10,309	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:29:10,984	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:29:14,180	[INFO]	57	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 07:29:14,181	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,31 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:29:14,182	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:29:14,183	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:29:15,057	[INFO]	59	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:29:15,060	[INFO]	60	SUCCESS	+13.0	
2020-12-10 07:29:15,061	[DEBUG]	
2020-12-10 07:29:18,300	[INFO]	61	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:29:18,301	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:29:21,587	[INFO]	62	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:29:21,588	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 23,31 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:29:22,453	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:29:22,454	[INFO]	64	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:29:22,454	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:29:23,344	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:29:24,254	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:29:25,127	[INFO]	67	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:29:25,129	[INFO]	68	SUCCESS	+13.0	
2020-12-10 07:29:25,130	[DEBUG]	
2020-12-10 07:29:25,131	[INFO]	69	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'})
2020-12-10 07:29:25,131	[DEBUG]	
2020-12-10 07:29:28,386	[INFO]	70	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:29:28,388	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:29:29,255	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:29:30,134	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:29:31,034	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:29:31,038	[INFO]	74	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:29:31,039	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:29:31,945	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:29:31,946	[INFO]	76	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:29:31,947	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:29:32,835	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:29:32,836	[INFO]	78	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:29:32,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int i = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:29:32,838	[INFO]	79	SUCCESS	+13.0	
2020-12-10 07:29:32,838	[DEBUG]	
2020-12-10 07:29:36,151	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:29:36,152	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:29:36,153	[INFO]	81	SUCCESS	+13.0	
2020-12-10 07:29:36,153	[DEBUG]	
2020-12-10 07:29:36,837	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:29:37,719	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:29:38,594	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:29:39,327	[INFO]	85	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:29:40,182	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:29:41,054	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:29:41,950	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:29:42,828	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:29:46,275	[INFO]	90	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:29:46,276	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:29:46,277	[INFO]	91	SUCCESS	+13.0	
2020-12-10 07:29:46,277	[DEBUG]	
2020-12-10 07:29:49,553	[INFO]	92	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:29:49,554	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:29:50,407	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:29:51,331	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:29:51,333	[INFO]	95	SUCCESS	+13.0	
2020-12-10 07:29:51,334	[DEBUG]	
2020-12-10 07:29:54,600	[INFO]	96	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:29:54,601	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:29:54,602	[INFO]	97	SUCCESS	+13.0	
2020-12-10 07:29:54,602	[DEBUG]	
2020-12-10 07:29:57,861	[INFO]	98	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:29:57,862	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:29:57,862	[INFO]	99	SUCCESS	+13.0	
2020-12-10 07:29:57,863	[DEBUG]	
2020-12-10 07:29:58,733	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:29:59,456	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:30:00,189	[INFO]	102	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:30:03,656	[INFO]	103	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:30:03,657	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:30:03,658	[INFO]	104	SUCCESS	+13.0	
2020-12-10 07:30:03,658	[DEBUG]	
2020-12-10 07:30:06,904	[INFO]	105	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:30:06,905	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:30:06,906	[INFO]	106	SUCCESS	+13.0	
2020-12-10 07:30:06,906	[DEBUG]	
2020-12-10 07:30:07,747	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:30:08,621	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:30:09,351	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:30:12,683	[INFO]	110	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 07:30:12,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:30:12,685	[INFO]	111	SUCCESS	+13.0	
2020-12-10 07:30:12,685	[DEBUG]	
2020-12-10 07:30:13,576	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:30:14,460	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:30:15,349	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:30:16,248	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:30:16,252	[INFO]	116	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:30:16,253	[DEBUG]	
2020-12-10 07:30:16,255	[INFO]	117	SUCCESS	+13.0	
2020-12-10 07:30:16,256	[DEBUG]	
2020-12-10 07:30:17,096	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:30:18,011	[INFO]	119	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:30:21,265	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:30:21,266	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:30:21,267	[INFO]	121	SUCCESS	+13.0	
2020-12-10 07:30:21,268	[DEBUG]	
2020-12-10 07:30:21,940	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:30:25,205	[INFO]	123	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:30:25,206	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:30:26,064	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:30:26,065	[INFO]	125	SUCCESS	+13.0	
2020-12-10 07:30:26,066	[DEBUG]	
2020-12-10 07:30:26,781	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:30:27,651	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:30:28,600	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:30:29,505	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:30:30,372	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:30:31,242	[INFO]	131	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:30:34,513	[INFO]	132	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:30:34,514	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 07:30:35,554	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:30:36,436	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:30:36,437	[INFO]	135	SUCCESS	+13.0	
2020-12-10 07:30:36,438	[DEBUG]	
2020-12-10 07:30:37,326	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:30:38,055	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:30:38,938	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:30:42,206	[INFO]	139	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:30:42,207	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:30:42,207	[INFO]	140	SUCCESS	+13.0	
2020-12-10 07:30:42,208	[DEBUG]	
2020-12-10 07:30:43,088	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:30:44,005	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:30:44,737	[INFO]	143	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:30:45,630	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:30:46,501	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:30:49,787	[INFO]	146	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:30:49,788	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:30:49,789	[INFO]	147	SUCCESS	+13.0	
2020-12-10 07:30:49,789	[DEBUG]	
2020-12-10 07:30:53,087	[INFO]	148	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:30:53,090	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:30:53,092	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:30:53,094	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:30:53,979	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:30:53,984	[INFO]	151	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:30:53,985	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:30:53,988	[INFO]	152	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:30:53,989	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:30:54,904	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:30:55,791	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:30:56,696	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:30:59,989	[INFO]	156	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:30:59,990	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:31:03,266	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:31:03,267	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:31:03,269	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:31:03,270	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:31:06,620	[INFO]	159	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:31:06,621	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 46,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:31:07,540	[INFO]	160	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:31:07,542	[INFO]	161	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:07,544	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 46,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:31:08,481	[INFO]	162	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:31:09,409	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:31:12,710	[INFO]	164	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:12,712	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:16,081	[INFO]	165	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:31:16,083	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,47 ****
--- 38,51 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:31:16,084	[INFO]	166	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:16,085	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:16,959	[INFO]	167	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:20,215	[INFO]	168	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:31:20,217	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,34 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 40,46 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:20,219	[INFO]	169	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:20,220	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,30 ****
--- 19,32 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 38,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:23,483	[INFO]	170	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:23,484	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:26,630	[INFO]	171	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:31:26,632	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 27,32 ****
--- 28,37 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 36,41 ****
--- 41,47 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:26,633	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:26,634	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:31:27,538	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:31:30,707	[INFO]	174	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:31:30,708	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:31:33,803	[INFO]	175	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:31:33,804	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:31:36,884	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:31:36,886	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 31,37 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:31:40,242	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:31:40,243	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 31,37 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:31:41,071	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:31:41,864	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:31:42,760	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:31:45,972	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:31:45,973	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,28 ****
--- 19,30 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 32,38 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:31:45,975	[INFO]	182	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:31:45,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,28 ****
--- 19,30 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 32,38 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:31:46,852	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:31:50,139	[INFO]	184	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:31:50,140	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,28 ****
--- 19,30 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:31:53,592	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:31:53,593	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:31:53,594	[INFO]	186	SUCCESS	+13.0	
2020-12-10 07:31:53,594	[DEBUG]	
2020-12-10 07:31:54,465	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:31:55,340	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:31:56,234	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:31:59,672	[INFO]	190	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:31:59,673	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:31:59,674	[INFO]	191	SUCCESS	+13.0	
2020-12-10 07:31:59,674	[DEBUG]	
2020-12-10 07:32:03,002	[INFO]	192	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:32:03,003	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:32:03,875	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:32:03,878	[INFO]	194	SUCCESS	+13.0	
2020-12-10 07:32:03,879	[DEBUG]	
2020-12-10 07:32:04,587	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:32:05,493	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:32:06,372	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:32:09,624	[INFO]	198	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'})
2020-12-10 07:32:09,625	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) < right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:32:09,626	[INFO]	199	SUCCESS	+13.0	
2020-12-10 07:32:09,626	[DEBUG]	
2020-12-10 07:32:10,519	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:32:11,430	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:32:14,703	[INFO]	202	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:32:14,704	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:32:14,704	[INFO]	203	SUCCESS	+13.0	
2020-12-10 07:32:14,705	[DEBUG]	
2020-12-10 07:32:17,922	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:32:17,923	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:32:21,198	[INFO]	205	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:32:21,199	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:32:21,200	[INFO]	206	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:32:21,200	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:32:21,201	[INFO]	207	SUCCESS	+13.0	
2020-12-10 07:32:21,201	[DEBUG]	
2020-12-10 07:32:22,036	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:32:22,940	[INFO]	209	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:32:23,799	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:32:24,680	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:32:25,411	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:32:26,293	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:32:27,205	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:32:28,089	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:32:29,032	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:32:29,758	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:32:29,761	[INFO]	218	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:32:29,762	[DEBUG]	
2020-12-10 07:32:33,042	[INFO]	219	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:32:33,043	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:32:33,045	[INFO]	220	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:32:33,045	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:32:33,935	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:32:34,658	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:32:35,506	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:32:36,442	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:32:37,331	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:32:37,333	[INFO]	226	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:32:37,333	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:32:38,235	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:32:39,115	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:32:40,000	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:32:40,002	[INFO]	230	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:32:40,002	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:32:40,003	[INFO]	231	SUCCESS	+13.0	
2020-12-10 07:32:40,003	[DEBUG]	
2020-12-10 07:32:40,894	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:32:44,166	[INFO]	233	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:32:44,167	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:32:44,168	[INFO]	234	SUCCESS	+13.0	
2020-12-10 07:32:44,168	[DEBUG]	
2020-12-10 07:32:45,030	[INFO]	235	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:32:45,931	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:32:46,855	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:32:47,717	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:32:48,614	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:32:49,550	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:32:50,433	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:32:53,704	[INFO]	242	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:32:53,705	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 07:32:54,556	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:32:54,557	[INFO]	244	SUCCESS	+13.0	
2020-12-10 07:32:54,557	[DEBUG]	
2020-12-10 07:32:54,558	[INFO]	245	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:32:54,559	[DEBUG]	
2020-12-10 07:32:55,453	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:32:55,454	[INFO]	247	SUCCESS	+13.0	
2020-12-10 07:32:55,454	[DEBUG]	
2020-12-10 07:32:56,324	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:32:59,618	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:32:59,619	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 07:32:59,620	[INFO]	250	SUCCESS	+13.0	
2020-12-10 07:32:59,620	[DEBUG]	
2020-12-10 07:33:00,511	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:33:01,433	[INFO]	252	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:33:02,309	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:33:03,190	[INFO]	254	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:33:06,422	[INFO]	255	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:33:06,423	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 07:33:09,680	[INFO]	256	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:33:09,681	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 07:33:09,682	[INFO]	257	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:33:09,683	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 07:33:09,684	[INFO]	258	SUCCESS	+13.0	
2020-12-10 07:33:09,684	[DEBUG]	
2020-12-10 07:33:10,573	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:33:13,814	[INFO]	260	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:33:13,815	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:33:14,692	[INFO]	261	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:33:14,693	[INFO]	262	SUCCESS	+13.0	
2020-12-10 07:33:14,693	[DEBUG]	
2020-12-10 07:33:15,608	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:33:16,479	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:33:17,357	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:33:20,635	[INFO]	266	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:33:20,636	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 07:33:20,636	[INFO]	267	SUCCESS	+13.0	
2020-12-10 07:33:20,637	[DEBUG]	
2020-12-10 07:33:21,527	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:33:24,895	[INFO]	269	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:33:24,896	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:33:25,755	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:33:26,649	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:33:27,376	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:33:27,377	[INFO]	273	SUCCESS	+13.0	
2020-12-10 07:33:27,377	[DEBUG]	
2020-12-10 07:33:30,699	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:33:30,700	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:33:30,701	[INFO]	275	SUCCESS	+13.0	
2020-12-10 07:33:30,702	[DEBUG]	
2020-12-10 07:33:34,027	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:33:34,029	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:33:34,030	[INFO]	277	SUCCESS	+13.0	
2020-12-10 07:33:34,031	[DEBUG]	
2020-12-10 07:33:34,926	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:33:35,816	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:33:36,703	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:33:37,611	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:33:38,506	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:33:39,499	[INFO]	283	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:33:40,559	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:33:41,523	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:33:42,456	[INFO]	286	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:33:45,770	[INFO]	287	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:33:45,772	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:33:46,630	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:33:47,591	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:33:50,908	[INFO]	290	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:33:50,910	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }
***************
*** 43,48 ****
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:33:50,911	[INFO]	291	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:33:50,911	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:33:50,912	[INFO]	292	SUCCESS	+13.0	
2020-12-10 07:33:50,912	[DEBUG]	
2020-12-10 07:33:54,200	[INFO]	293	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:33:54,201	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:33:55,055	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:33:55,936	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:33:55,937	[INFO]	296	SUCCESS	+13.0	
2020-12-10 07:33:55,937	[DEBUG]	
2020-12-10 07:33:56,798	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:33:56,800	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:33:57,695	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:33:58,595	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:33:59,504	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:34:00,447	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:34:01,164	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:34:02,030	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:34:02,724	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:34:03,586	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:34:06,880	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:34:06,881	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:34:06,881	[INFO]	308	SUCCESS	+13.0	
2020-12-10 07:34:06,882	[DEBUG]	
2020-12-10 07:34:07,763	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:34:08,679	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:34:09,546	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:34:10,273	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:34:13,503	[INFO]	313	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:34:13,504	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:34:13,505	[INFO]	314	SUCCESS	+13.0	
2020-12-10 07:34:13,505	[DEBUG]	
2020-12-10 07:34:14,379	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:34:15,291	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:34:18,494	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:34:18,495	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 07:34:19,218	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:34:19,219	[INFO]	319	SUCCESS	+13.0	
2020-12-10 07:34:19,220	[DEBUG]	
2020-12-10 07:34:20,070	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:34:23,261	[INFO]	321	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:34:23,262	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:34:23,262	[INFO]	322	SUCCESS	+13.0	
2020-12-10 07:34:23,263	[DEBUG]	
2020-12-10 07:34:24,150	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:34:27,444	[INFO]	324	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:34:27,445	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:34:27,446	[INFO]	325	SUCCESS	+13.0	
2020-12-10 07:34:27,446	[DEBUG]	
2020-12-10 07:34:28,296	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:34:29,209	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:34:30,083	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:34:30,944	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:34:34,217	[INFO]	330	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:34:34,218	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
                  j++;
              }
          }

2020-12-10 07:34:34,219	[INFO]	331	SUCCESS	+13.0	
2020-12-10 07:34:34,219	[DEBUG]	
2020-12-10 07:34:35,074	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:34:35,956	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:34:39,271	[INFO]	334	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:34:39,272	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:34:42,530	[INFO]	335	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:34:42,532	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:34:43,386	[INFO]	336	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:34:43,387	[INFO]	337	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:34:43,388	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:34:44,292	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:34:45,011	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:34:45,015	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:34:45,017	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:34:48,202	[INFO]	341	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:34:48,203	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:34:49,076	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:34:49,077	[INFO]	343	SUCCESS	+13.0	
2020-12-10 07:34:49,077	[DEBUG]	
2020-12-10 07:34:52,420	[INFO]	344	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:34:52,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:34:52,421	[INFO]	345	SUCCESS	+13.0	
2020-12-10 07:34:52,422	[DEBUG]	
2020-12-10 07:34:53,282	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:34:56,571	[INFO]	347	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:34:56,573	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:34:59,767	[INFO]	348	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:34:59,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:35:03,046	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:35:03,048	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 28,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 07:35:06,309	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:35:06,310	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 28,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:35:09,517	[INFO]	351	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:35:09,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:35:09,519	[INFO]	352	SUCCESS	+13.0	
2020-12-10 07:35:09,520	[DEBUG]	
2020-12-10 07:35:10,407	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:35:11,311	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:35:12,202	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:35:15,540	[INFO]	356	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:35:15,541	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:35:15,542	[INFO]	357	SUCCESS	+13.0	
2020-12-10 07:35:15,542	[DEBUG]	
2020-12-10 07:35:16,375	[INFO]	358	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:35:17,285	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:35:18,286	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:35:19,345	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:35:20,081	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:35:20,955	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:35:21,830	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:35:25,023	[INFO]	365	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:35:25,024	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:35:25,909	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:35:25,910	[INFO]	367	SUCCESS	+13.0	
2020-12-10 07:35:25,911	[DEBUG]	
2020-12-10 07:35:26,809	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:35:27,660	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:35:27,662	[INFO]	370	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:35:30,990	[INFO]	371	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:35:30,991	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 07:35:34,234	[INFO]	372	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:35:34,235	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,34 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 07:35:34,236	[INFO]	373	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:35:34,237	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 07:35:35,188	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:35:39,581	[INFO]	375	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:35:39,582	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 left = mergesort(left);
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:35:40,454	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:35:40,456	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:35:40,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 07:35:40,457	[INFO]	378	SUCCESS	+13.0	
2020-12-10 07:35:40,457	[DEBUG]	
2020-12-10 07:35:41,374	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:35:44,668	[INFO]	380	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:35:44,671	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:35:45,551	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:35:46,447	[INFO]	382	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:35:49,767	[INFO]	383	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:35:49,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 44,49 ****
--- 36,42 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:35:53,046	[INFO]	384	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:35:53,047	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:35:53,048	[INFO]	385	SUCCESS	+13.0	
2020-12-10 07:35:53,049	[DEBUG]	
2020-12-10 07:35:53,931	[INFO]	386	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:35:57,166	[INFO]	387	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:35:57,167	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 
                  j++;
              }
          }

2020-12-10 07:35:57,168	[INFO]	388	SUCCESS	+13.0	
2020-12-10 07:35:57,168	[DEBUG]	
2020-12-10 07:35:57,169	[INFO]	389	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:35:57,169	[DEBUG]	
2020-12-10 07:35:57,170	[INFO]	390	SUCCESS	+13.0	
2020-12-10 07:35:57,170	[DEBUG]	
2020-12-10 07:35:58,122	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:35:59,023	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:35:59,914	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:36:00,817	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:36:01,531	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:36:02,416	[INFO]	396	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:36:03,287	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:36:04,206	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:36:05,094	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:36:06,047	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:36:06,957	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:36:07,857	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:36:08,739	[INFO]	403	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:36:09,618	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:36:10,518	[INFO]	405	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:36:11,414	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:36:14,620	[INFO]	407	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:36:14,622	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:36:14,624	[INFO]	408	SUCCESS	+13.0	
2020-12-10 07:36:14,625	[DEBUG]	
2020-12-10 07:36:15,301	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:36:15,969	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:36:16,844	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:36:17,757	[INFO]	412	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:36:18,634	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:36:18,636	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:36:19,522	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:36:20,427	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:36:23,676	[INFO]	417	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'})
2020-12-10 07:36:23,677	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) > right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:36:23,678	[INFO]	418	SUCCESS	+13.0	
2020-12-10 07:36:23,678	[DEBUG]	
2020-12-10 07:36:26,879	[INFO]	419	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:36:26,880	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 07:36:26,881	[INFO]	420	SUCCESS	+13.0	
2020-12-10 07:36:26,881	[DEBUG]	
2020-12-10 07:36:27,743	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:36:31,121	[INFO]	422	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:36:31,122	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 07:36:34,362	[INFO]	423	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:36:34,364	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:36:35,268	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:36:36,193	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:36:37,086	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:36:38,018	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:36:38,899	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:36:42,145	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:36:42,148	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:36:42,150	[INFO]	430	SUCCESS	+13.0	
2020-12-10 07:36:42,150	[DEBUG]	
2020-12-10 07:36:43,008	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:36:46,232	[INFO]	432	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:36:46,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:36:47,147	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:36:48,020	[INFO]	434	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:36:51,339	[INFO]	435	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:36:51,342	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:36:52,248	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:36:52,249	[INFO]	437	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:36:52,250	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:36:53,146	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:36:53,148	[INFO]	439	SUCCESS	+13.0	
2020-12-10 07:36:53,148	[DEBUG]	
2020-12-10 07:36:54,028	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:36:57,364	[INFO]	441	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:36:57,365	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:36:57,366	[INFO]	442	SUCCESS	+13.0	
2020-12-10 07:36:57,366	[DEBUG]	
2020-12-10 07:36:58,213	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:36:59,105	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:36:59,972	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:37:00,876	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:37:01,597	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:37:04,897	[INFO]	448	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:37:04,898	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:37:04,899	[INFO]	449	SUCCESS	+13.0	
2020-12-10 07:37:04,899	[DEBUG]	
2020-12-10 07:37:05,738	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:37:06,598	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:37:07,513	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:37:08,429	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:37:11,726	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:37:11,728	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:37:11,728	[INFO]	455	SUCCESS	+13.0	
2020-12-10 07:37:11,729	[DEBUG]	
2020-12-10 07:37:15,066	[INFO]	456	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:37:15,067	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 
                  j++;
              }
          }

2020-12-10 07:37:15,901	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:37:16,801	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:37:17,506	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:37:18,377	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:37:18,378	[INFO]	461	SUCCESS	+13.0	
2020-12-10 07:37:18,378	[DEBUG]	
2020-12-10 07:37:18,379	[INFO]	462	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:37:18,379	[DEBUG]	
2020-12-10 07:37:19,300	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:37:19,303	[INFO]	464	SUCCESS	+13.0	
2020-12-10 07:37:19,304	[DEBUG]	
2020-12-10 07:37:22,510	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:37:22,511	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:37:22,512	[INFO]	466	SUCCESS	+13.0	
2020-12-10 07:37:22,512	[DEBUG]	
2020-12-10 07:37:25,806	[INFO]	467	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:37:25,807	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:37:26,652	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:37:26,654	[INFO]	469	SUCCESS	+13.0	
2020-12-10 07:37:26,654	[DEBUG]	
2020-12-10 07:37:27,579	[INFO]	470	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:37:28,548	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:37:31,831	[INFO]	472	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:37:31,832	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:37:32,697	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:37:35,989	[INFO]	474	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:37:35,990	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:37:39,226	[INFO]	475	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:37:39,227	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:37:40,062	[INFO]	476	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:37:43,311	[INFO]	477	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:37:43,314	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,30 ****
--- 22,32 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:37:46,505	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:37:46,506	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:37:47,428	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:37:48,305	[INFO]	480	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:37:48,306	[INFO]	481	SUCCESS	+13.0	
2020-12-10 07:37:48,307	[DEBUG]	
2020-12-10 07:37:49,219	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:37:50,105	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:37:53,415	[INFO]	484	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:37:53,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:37:56,744	[INFO]	485	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:37:56,745	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:37:56,746	[INFO]	486	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:37:56,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:38:00,028	[INFO]	487	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:38:00,030	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:38:03,323	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 07:38:03,325	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 39,45 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:38:03,326	[INFO]	489	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:38:03,327	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:38:03,327	[INFO]	490	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:38:03,328	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:38:04,201	[INFO]	491	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:38:04,202	[INFO]	492	SUCCESS	+13.0	
2020-12-10 07:38:04,202	[DEBUG]	
2020-12-10 07:38:07,451	[INFO]	493	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:38:07,452	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:38:07,452	[INFO]	494	SUCCESS	+13.0	
2020-12-10 07:38:07,453	[DEBUG]	
2020-12-10 07:38:10,838	[INFO]	495	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:38:10,839	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:38:14,157	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:38:14,158	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,33 ****
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:38:14,159	[INFO]	497	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:38:14,159	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:38:14,160	[INFO]	498	SUCCESS	+13.0	
2020-12-10 07:38:14,160	[DEBUG]	
2020-12-10 07:38:15,025	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:38:15,906	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:38:15,906	[INFO]	==== END ====
2020-12-10 07:38:15,906	[INFO]	Reason: step budget
2020-12-10 07:38:15,907	[INFO]	
2020-12-10 07:38:15,907	[INFO]	========== EPOCH 13 ==========
2020-12-10 07:38:15,908	[INFO]	==== WARMUP ====
2020-12-10 07:38:19,171	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:38:19,172	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:38:22,403	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:38:22,403	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:38:25,706	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:38:25,706	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:38:28,970	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:38:28,970	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:38:28,970	[INFO]	==== START ====
2020-12-10 07:38:29,851	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:38:30,742	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:38:31,672	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:38:32,571	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:38:33,469	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:38:33,470	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:38:34,329	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:38:37,594	[INFO]	8	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:38:37,595	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:38:37,596	[INFO]	9	SUCCESS	+13.0	
2020-12-10 07:38:37,596	[DEBUG]	
2020-12-10 07:38:38,468	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:38:39,370	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:38:42,722	[INFO]	12	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:38:42,723	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:38:42,724	[INFO]	13	SUCCESS	+13.0	
2020-12-10 07:38:42,724	[DEBUG]	
2020-12-10 07:38:43,597	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:38:46,839	[INFO]	15	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:38:46,840	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:38:47,715	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:38:47,717	[INFO]	17	SUCCESS	+13.0	
2020-12-10 07:38:47,718	[DEBUG]	
2020-12-10 07:38:48,592	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:38:49,525	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:38:50,415	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:38:51,296	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:38:52,207	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:38:53,109	[INFO]	23	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:38:54,008	[INFO]	24	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:38:54,881	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:38:55,749	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:38:59,027	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:38:59,027	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:38:59,028	[INFO]	28	SUCCESS	+13.0	
2020-12-10 07:38:59,028	[DEBUG]	
2020-12-10 07:38:59,932	[INFO]	29	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:39:00,843	[INFO]	30	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:39:01,744	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:39:02,455	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:39:03,316	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:39:04,211	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:39:05,115	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:39:08,355	[INFO]	36	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:39:08,356	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:39:11,632	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:39:11,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:39:14,912	[INFO]	38	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:39:14,913	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:39:15,782	[INFO]	39	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:39:15,783	[INFO]	40	SUCCESS	+13.0	
2020-12-10 07:39:15,783	[DEBUG]	
2020-12-10 07:39:16,646	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:39:17,578	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:39:18,464	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:39:19,377	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:39:22,632	[INFO]	45	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:39:22,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:39:22,634	[INFO]	46	SUCCESS	+13.0	
2020-12-10 07:39:22,634	[DEBUG]	
2020-12-10 07:39:23,510	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:39:26,697	[INFO]	48	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:39:26,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:39:26,699	[INFO]	49	SUCCESS	+13.0	
2020-12-10 07:39:26,699	[DEBUG]	
2020-12-10 07:39:29,889	[INFO]	50	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:39:29,890	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:39:30,757	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:39:30,758	[INFO]	52	SUCCESS	+13.0	
2020-12-10 07:39:30,758	[DEBUG]	
2020-12-10 07:39:31,661	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:39:32,550	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:39:32,551	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:39:33,537	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:39:34,248	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:39:35,129	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:39:38,465	[INFO]	59	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:39:38,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:39:38,467	[INFO]	60	SUCCESS	+13.0	
2020-12-10 07:39:38,467	[DEBUG]	
2020-12-10 07:39:39,301	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:39:40,165	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:39:41,061	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:39:42,049	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:39:42,945	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:39:43,878	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:39:44,768	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:39:45,651	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:39:46,528	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:39:46,530	[INFO]	70	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:39:46,531	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:39:47,420	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:39:47,421	[INFO]	72	SUCCESS	+13.0	
2020-12-10 07:39:47,421	[DEBUG]	
2020-12-10 07:39:50,735	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:39:50,736	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:39:50,736	[INFO]	74	SUCCESS	+13.0	
2020-12-10 07:39:50,737	[DEBUG]	
2020-12-10 07:39:51,642	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:39:52,533	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:39:53,425	[INFO]	77	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:39:54,305	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:39:57,515	[INFO]	79	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:39:57,516	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:39:58,212	[INFO]	80	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:39:58,926	[INFO]	81	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:39:58,928	[INFO]	82	SUCCESS	+13.0	
2020-12-10 07:39:58,929	[DEBUG]	
2020-12-10 07:39:59,801	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:40:00,690	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:40:03,967	[INFO]	85	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:40:03,968	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:40:03,969	[INFO]	86	SUCCESS	+13.0	
2020-12-10 07:40:03,969	[DEBUG]	
2020-12-10 07:40:04,826	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:40:05,703	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:40:06,592	[INFO]	89	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:40:07,494	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:40:08,369	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:40:11,540	[INFO]	92	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:40:11,542	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:40:11,542	[INFO]	93	SUCCESS	+13.0	
2020-12-10 07:40:11,543	[DEBUG]	
2020-12-10 07:40:12,421	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:40:13,340	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:40:14,210	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:40:14,917	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:40:15,773	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:40:16,655	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:40:17,539	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:40:18,420	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:40:21,669	[INFO]	102	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:40:21,670	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:40:21,670	[INFO]	103	SUCCESS	+13.0	
2020-12-10 07:40:21,671	[DEBUG]	
2020-12-10 07:40:24,837	[INFO]	104	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:40:24,838	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:40:25,733	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:40:26,653	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:40:27,554	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:40:28,484	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:40:29,359	[INFO]	109	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:40:30,245	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:40:30,246	[INFO]	111	SUCCESS	+13.0	
2020-12-10 07:40:30,247	[DEBUG]	
2020-12-10 07:40:31,139	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:40:31,869	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:40:35,047	[INFO]	114	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:40:35,048	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:40:35,050	[INFO]	115	SUCCESS	+13.0	
2020-12-10 07:40:35,050	[DEBUG]	
2020-12-10 07:40:38,304	[INFO]	116	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:40:38,305	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 07:40:38,994	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:40:38,995	[INFO]	118	SUCCESS	+13.0	
2020-12-10 07:40:38,995	[DEBUG]	
2020-12-10 07:40:39,880	[INFO]	119	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:40:40,803	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:40:41,698	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:40:42,639	[INFO]	122	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:40:43,530	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:40:44,433	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:40:45,305	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:40:46,186	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:40:47,086	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:40:47,963	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:40:51,300	[INFO]	129	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:40:51,301	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 07:40:51,302	[INFO]	130	SUCCESS	+13.0	
2020-12-10 07:40:51,302	[DEBUG]	
2020-12-10 07:40:52,148	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:40:52,828	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:40:56,158	[INFO]	133	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:40:56,159	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 07:40:56,160	[INFO]	134	SUCCESS	+13.0	
2020-12-10 07:40:56,160	[DEBUG]	
2020-12-10 07:40:57,000	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:40:57,887	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:40:58,742	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:41:01,995	[INFO]	138	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:41:01,996	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:41:01,997	[INFO]	139	SUCCESS	+13.0	
2020-12-10 07:41:01,997	[DEBUG]	
2020-12-10 07:41:02,867	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:41:03,747	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:41:04,617	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:41:05,516	[INFO]	143	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:41:08,852	[INFO]	144	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:41:08,853	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 07:41:09,777	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:41:10,691	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:41:10,692	[INFO]	147	SUCCESS	+13.0	
2020-12-10 07:41:10,693	[DEBUG]	
2020-12-10 07:41:13,975	[INFO]	148	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:41:13,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:41:13,977	[INFO]	149	SUCCESS	+13.0	
2020-12-10 07:41:13,977	[DEBUG]	
2020-12-10 07:41:14,850	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:41:15,564	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:41:16,490	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:41:17,374	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:41:18,241	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:41:19,138	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:41:20,032	[INFO]	156	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:41:23,277	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:41:23,278	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:41:23,279	[INFO]	158	SUCCESS	+13.0	
2020-12-10 07:41:23,279	[DEBUG]	
2020-12-10 07:41:23,962	[INFO]	159	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:41:24,671	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:41:27,897	[INFO]	161	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:41:27,898	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:41:28,816	[INFO]	162	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:41:29,697	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:41:30,421	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:41:30,422	[INFO]	165	SUCCESS	+13.0	
2020-12-10 07:41:30,423	[DEBUG]	
2020-12-10 07:41:31,263	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:41:32,143	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:41:35,468	[INFO]	168	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:41:35,469	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:41:35,470	[INFO]	169	SUCCESS	+13.0	
2020-12-10 07:41:35,470	[DEBUG]	
2020-12-10 07:41:36,316	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:41:39,613	[INFO]	171	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:41:39,615	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:41:40,474	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:41:40,475	[INFO]	173	SUCCESS	+13.0	
2020-12-10 07:41:40,475	[DEBUG]	
2020-12-10 07:41:41,359	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:41:42,288	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:41:43,183	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:41:44,047	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:41:44,968	[INFO]	178	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:41:44,971	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:41:45,870	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:41:46,769	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:41:50,012	[INFO]	182	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:41:50,013	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:41:50,941	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:41:51,638	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:41:52,522	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:41:55,875	[INFO]	186	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:41:55,876	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
+             right = mergesort(right);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:41:56,772	[INFO]	187	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:41:56,775	[INFO]	188	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:41:56,776	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:41:56,777	[INFO]	189	SUCCESS	+13.0	
2020-12-10 07:41:56,778	[DEBUG]	
2020-12-10 07:41:57,654	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:41:58,522	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:41:59,408	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:42:00,294	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:42:01,192	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:42:02,071	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:42:05,347	[INFO]	196	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:42:05,348	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 07:42:06,024	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:42:06,872	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:42:06,873	[INFO]	199	SUCCESS	+13.0	
2020-12-10 07:42:06,873	[DEBUG]	
2020-12-10 07:42:10,091	[INFO]	200	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:42:10,093	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:13,334	[INFO]	201	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:42:13,335	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:14,185	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:42:15,064	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:42:18,258	[INFO]	204	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:42:18,259	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:19,180	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:42:22,483	[INFO]	206	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:42:22,485	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:25,695	[INFO]	207	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:42:25,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,36 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 24,41 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
!                 right = mergesort(right);
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:42:26,570	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:42:29,884	[INFO]	209	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:42:29,885	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,36 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 24,41 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
!                 
!                 right = mergesort(right);
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:42:33,172	[INFO]	210	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:42:33,174	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
!                 
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:36,393	[INFO]	211	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:42:36,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:37,269	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:42:40,551	[INFO]	213	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:42:40,552	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,47 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:40,553	[INFO]	214	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:42:40,554	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,47 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:42:41,447	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:42:44,754	[INFO]	216	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:42:44,755	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,33 ****
--- 24,47 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 36,41 ****
--- 50,56 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:42:47,982	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:42:47,983	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,42 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 49,55 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:42:51,315	[INFO]	218	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:42:51,316	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 36,41 ****
--- 40,46 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:42:54,655	[INFO]	219	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:42:54,656	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:42:57,876	[INFO]	220	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:42:57,877	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:42:57,877	[INFO]	221	SUCCESS	+13.0	
2020-12-10 07:42:57,878	[DEBUG]	
2020-12-10 07:42:58,722	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:42:59,434	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:43:00,306	[INFO]	224	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:43:03,578	[INFO]	225	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:43:03,579	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:06,944	[INFO]	226	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:43:06,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:06,948	[INFO]	227	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:43:06,948	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:06,949	[INFO]	228	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:43:06,950	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:07,843	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:43:08,571	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:43:09,456	[INFO]	231	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:43:12,786	[INFO]	232	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:43:12,787	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 45,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:13,669	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:43:13,671	[INFO]	234	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:43:13,672	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 36,41 ****
--- 37,43 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 45,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:16,963	[INFO]	235	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:43:16,965	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:43:20,244	[INFO]	236	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:43:20,245	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:20,246	[INFO]	237	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:43:20,247	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:21,125	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:43:22,003	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:43:25,388	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:43:25,389	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 26,31 ****
--- 27,33 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:43:25,390	[INFO]	241	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:43:25,390	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:25,391	[INFO]	242	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:43:25,392	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:28,622	[INFO]	243	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:43:28,623	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,35 ****
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 19,28 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:43:29,466	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:43:29,467	[INFO]	245	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:43:29,468	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:30,358	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:43:30,359	[INFO]	247	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:43:30,360	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:30,361	[INFO]	248	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:43:30,362	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 26,31 ****
--- 27,33 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:43:30,363	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:43:30,364	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:43:33,604	[INFO]	250	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:43:33,605	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 31,37 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 07:43:34,476	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:43:37,707	[INFO]	252	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:43:37,709	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 07:43:37,712	[INFO]	253	SUCCESS	+13.0	
2020-12-10 07:43:37,713	[DEBUG]	
2020-12-10 07:43:40,971	[INFO]	254	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:43:40,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:43:40,973	[INFO]	255	SUCCESS	+13.0	
2020-12-10 07:43:40,973	[DEBUG]	
2020-12-10 07:43:41,690	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:43:42,605	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:43:45,857	[INFO]	258	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:43:45,858	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:43:46,704	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:43:47,552	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:43:47,553	[INFO]	261	SUCCESS	+13.0	
2020-12-10 07:43:47,553	[DEBUG]	
2020-12-10 07:43:48,471	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:43:49,391	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:43:50,292	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:43:51,197	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:43:51,927	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:43:55,223	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:43:55,224	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 07:43:55,225	[INFO]	268	SUCCESS	+13.0	
2020-12-10 07:43:55,225	[DEBUG]	
2020-12-10 07:43:56,081	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:43:56,771	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:43:57,663	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:43:58,544	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:44:01,793	[INFO]	273	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:44:01,794	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:44:01,795	[INFO]	274	SUCCESS	+13.0	
2020-12-10 07:44:01,795	[DEBUG]	
2020-12-10 07:44:02,676	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:44:05,960	[INFO]	276	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:44:05,962	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:44:05,963	[INFO]	277	SUCCESS	+13.0	
2020-12-10 07:44:05,963	[DEBUG]	
2020-12-10 07:44:09,232	[INFO]	278	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:44:09,235	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:44:12,522	[INFO]	279	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<='})
2020-12-10 07:44:12,523	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j <= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:44:12,525	[INFO]	280	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:44:12,525	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j <= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:44:15,794	[INFO]	281	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:44:15,795	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j <= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:44:15,796	[INFO]	282	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:44:15,796	[DEBUG]	
2020-12-10 07:44:19,119	[INFO]	283	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:44:19,120	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:44:19,120	[INFO]	284	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 07:44:19,121	[DEBUG]	
2020-12-10 07:44:19,809	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:44:20,718	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:44:20,720	[INFO]	287	SUCCESS	+13.0	
2020-12-10 07:44:20,720	[DEBUG]	
2020-12-10 07:44:23,976	[INFO]	288	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:44:23,977	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 07:44:23,978	[INFO]	289	SUCCESS	+13.0	
2020-12-10 07:44:23,978	[DEBUG]	
2020-12-10 07:44:24,867	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:44:25,756	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:44:29,018	[INFO]	292	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:44:29,019	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:44:29,020	[INFO]	293	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:44:29,020	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:44:29,021	[INFO]	294	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:44:29,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:44:29,909	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:44:30,781	[INFO]	296	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:44:31,686	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:44:32,569	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:44:33,477	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:44:34,351	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:44:35,265	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:44:36,140	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:44:36,141	[INFO]	303	SUCCESS	+13.0	
2020-12-10 07:44:36,141	[DEBUG]	
2020-12-10 07:44:39,415	[INFO]	304	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 07:44:39,417	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:44:42,661	[INFO]	305	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:44:42,662	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
!             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:44:42,663	[INFO]	306	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 07:44:42,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:44:43,543	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:44:43,544	[INFO]	308	SUCCESS	+13.0	
2020-12-10 07:44:43,544	[DEBUG]	
2020-12-10 07:44:44,411	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:44:45,310	[INFO]	310	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:44:46,204	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:44:46,206	[INFO]	312	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:44:46,207	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 07:44:46,207	[INFO]	313	SUCCESS	+13.0	
2020-12-10 07:44:46,208	[DEBUG]	
2020-12-10 07:44:47,117	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:44:50,314	[INFO]	315	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:44:50,316	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:44:53,587	[INFO]	316	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:44:53,588	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 28,33 ****
--- 29,35 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:44:56,840	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:44:56,841	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:44:56,842	[INFO]	318	SUCCESS	+13.0	
2020-12-10 07:44:56,842	[DEBUG]	
2020-12-10 07:45:00,050	[INFO]	319	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:45:00,051	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:45:00,052	[INFO]	320	SUCCESS	+13.0	
2020-12-10 07:45:00,052	[DEBUG]	
2020-12-10 07:45:01,042	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:45:04,325	[INFO]	322	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:45:04,326	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:45:05,197	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:45:08,482	[INFO]	324	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:45:08,484	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,41 ****
--- 30,47 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:45:11,809	[INFO]	325	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:45:11,811	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:45:12,689	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:45:12,691	[INFO]	327	SUCCESS	+13.0	
2020-12-10 07:45:12,691	[DEBUG]	
2020-12-10 07:45:13,600	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:45:14,517	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:45:15,228	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:45:18,504	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:45:18,507	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:45:19,410	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:45:20,288	[INFO]	333	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:45:20,291	[INFO]	334	SUCCESS	+13.0	
2020-12-10 07:45:20,292	[DEBUG]	
2020-12-10 07:45:21,199	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:45:21,202	[INFO]	336	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:45:21,203	[DEBUG]	
2020-12-10 07:45:22,110	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:45:22,997	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:45:23,000	[INFO]	339	SUCCESS	+13.0	
2020-12-10 07:45:23,001	[DEBUG]	
2020-12-10 07:45:26,219	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:45:26,220	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:45:27,102	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:45:27,982	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:45:27,983	[INFO]	343	SUCCESS	+13.0	
2020-12-10 07:45:27,983	[DEBUG]	
2020-12-10 07:45:28,939	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:45:32,234	[INFO]	345	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:45:32,235	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:45:35,680	[INFO]	346	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:45:35,681	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 44,49 ****
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:45:35,683	[INFO]	347	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:45:35,683	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:45:35,684	[INFO]	348	SUCCESS	+13.0	
2020-12-10 07:45:35,685	[DEBUG]	
2020-12-10 07:45:36,894	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:45:38,170	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:45:42,316	[INFO]	351	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:45:42,317	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:45:43,267	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:45:43,268	[INFO]	353	SUCCESS	+13.0	
2020-12-10 07:45:43,268	[DEBUG]	
2020-12-10 07:45:44,362	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:45:45,593	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:45:46,503	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:45:49,767	[INFO]	357	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 07:45:49,767	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:45:49,768	[INFO]	358	SUCCESS	+13.0	
2020-12-10 07:45:49,768	[DEBUG]	
2020-12-10 07:45:50,654	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:45:53,929	[INFO]	360	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:45:53,930	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:45:57,249	[INFO]	361	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:45:57,251	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:46:00,515	[INFO]	362	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:46:00,516	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:46:03,722	[INFO]	363	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:46:03,723	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:46:04,619	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:46:05,544	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:46:05,546	[INFO]	366	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:46:05,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left = mergesort(left);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:46:05,548	[INFO]	367	SUCCESS	+13.0	
2020-12-10 07:46:05,549	[DEBUG]	
2020-12-10 07:46:05,550	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:46:06,428	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:46:07,371	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:46:10,698	[INFO]	371	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:46:10,699	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:46:10,699	[INFO]	372	SUCCESS	+13.0	
2020-12-10 07:46:10,700	[DEBUG]	
2020-12-10 07:46:11,461	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:46:14,714	[INFO]	374	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:46:14,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:46:14,716	[INFO]	375	SUCCESS	+13.0	
2020-12-10 07:46:14,716	[DEBUG]	
2020-12-10 07:46:15,433	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:46:16,349	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:46:17,209	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:46:18,088	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:46:18,821	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:46:19,733	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:46:22,838	[INFO]	382	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:46:22,839	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:46:22,840	[INFO]	383	SUCCESS	+13.0	
2020-12-10 07:46:22,840	[DEBUG]	
2020-12-10 07:46:26,145	[INFO]	384	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:46:26,146	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:46:27,018	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:46:27,916	[INFO]	386	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:46:27,917	[INFO]	387	SUCCESS	+13.0	
2020-12-10 07:46:27,917	[DEBUG]	
2020-12-10 07:46:28,841	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:46:29,734	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:46:32,881	[INFO]	390	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:46:32,882	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:46:33,782	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:46:33,783	[INFO]	392	SUCCESS	+13.0	
2020-12-10 07:46:33,783	[DEBUG]	
2020-12-10 07:46:34,659	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:46:37,971	[INFO]	394	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:46:37,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:46:37,972	[INFO]	395	SUCCESS	+13.0	
2020-12-10 07:46:37,973	[DEBUG]	
2020-12-10 07:46:38,797	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:46:42,103	[INFO]	397	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:46:42,104	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:46:42,939	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:46:42,940	[INFO]	399	SUCCESS	+13.0	
2020-12-10 07:46:42,940	[DEBUG]	
2020-12-10 07:46:43,804	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:46:47,071	[INFO]	401	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:46:47,073	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:46:47,073	[INFO]	402	SUCCESS	+13.0	
2020-12-10 07:46:47,074	[DEBUG]	
2020-12-10 07:46:47,758	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:46:51,155	[INFO]	404	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:46:51,157	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:46:52,008	[INFO]	405	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:46:52,009	[INFO]	406	SUCCESS	+13.0	
2020-12-10 07:46:52,010	[DEBUG]	
2020-12-10 07:46:52,912	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:46:56,209	[INFO]	408	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:46:56,210	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 07:46:56,211	[INFO]	409	SUCCESS	+13.0	
2020-12-10 07:46:56,211	[DEBUG]	
2020-12-10 07:46:57,048	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:46:57,050	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:46:57,968	[INFO]	412	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:47:01,377	[INFO]	413	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:47:01,380	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 07:47:04,620	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:47:04,621	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
--- 40,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:47:07,815	[INFO]	415	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:47:07,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:47:07,816	[INFO]	416	SUCCESS	+13.0	
2020-12-10 07:47:07,817	[DEBUG]	
2020-12-10 07:47:08,711	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:47:09,582	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:47:12,938	[INFO]	419	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:47:12,939	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:47:13,809	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:47:17,089	[INFO]	421	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:47:17,090	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 39,44 ****
--- 40,48 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 07:47:20,402	[INFO]	422	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:47:20,403	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:47:21,260	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:47:22,160	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:47:22,850	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:47:22,851	[INFO]	426	SUCCESS	+13.0	
2020-12-10 07:47:22,852	[DEBUG]	
2020-12-10 07:47:23,740	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:47:24,605	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:47:25,489	[INFO]	429	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:47:28,757	[INFO]	430	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:47:28,758	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:47:32,087	[INFO]	431	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 07:47:32,088	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,31 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:47:35,261	[INFO]	432	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'})
2020-12-10 07:47:35,263	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i > left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:47:36,136	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:47:37,050	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:47:37,051	[INFO]	435	SUCCESS	+13.0	
2020-12-10 07:47:37,051	[DEBUG]	
2020-12-10 07:47:37,927	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:47:38,800	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:47:39,683	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:47:40,594	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:47:43,880	[INFO]	440	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:47:43,881	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:47:43,881	[INFO]	441	SUCCESS	+13.0	
2020-12-10 07:47:43,882	[DEBUG]	
2020-12-10 07:47:44,817	[INFO]	442	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:47:45,733	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:47:46,624	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:47:46,626	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:47:47,540	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:47:50,827	[INFO]	447	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:47:50,828	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:47:50,829	[INFO]	448	SUCCESS	+13.0	
2020-12-10 07:47:50,829	[DEBUG]	
2020-12-10 07:47:51,707	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:47:55,039	[INFO]	450	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:47:55,040	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:47:55,040	[INFO]	451	SUCCESS	+13.0	
2020-12-10 07:47:55,041	[DEBUG]	
2020-12-10 07:47:58,349	[INFO]	452	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:47:58,350	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 07:47:58,351	[INFO]	453	SUCCESS	+13.0	
2020-12-10 07:47:58,351	[DEBUG]	
2020-12-10 07:47:59,213	[INFO]	454	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:48:00,097	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:48:03,410	[INFO]	456	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:48:03,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:48:04,326	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:48:05,249	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:48:08,511	[INFO]	459	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:48:08,513	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:48:11,816	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:48:11,817	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:48:11,818	[INFO]	461	SUCCESS	+13.0	
2020-12-10 07:48:11,818	[DEBUG]	
2020-12-10 07:48:14,984	[INFO]	462	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:48:14,985	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:48:15,842	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:48:15,843	[INFO]	464	SUCCESS	+13.0	
2020-12-10 07:48:15,844	[DEBUG]	
2020-12-10 07:48:16,733	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:48:20,031	[INFO]	466	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:48:20,032	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 07:48:20,033	[INFO]	467	SUCCESS	+13.0	
2020-12-10 07:48:20,033	[DEBUG]	
2020-12-10 07:48:23,264	[INFO]	468	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:48:23,265	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:48:24,191	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:48:24,193	[INFO]	470	SUCCESS	+13.0	
2020-12-10 07:48:24,194	[DEBUG]	
2020-12-10 07:48:25,083	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:48:25,983	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:48:26,877	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:48:27,755	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:48:28,683	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:48:31,840	[INFO]	476	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:48:31,841	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:48:31,841	[INFO]	477	SUCCESS	+13.0	
2020-12-10 07:48:31,842	[DEBUG]	
2020-12-10 07:48:35,298	[INFO]	478	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:48:35,299	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:48:35,299	[INFO]	479	SUCCESS	+13.0	
2020-12-10 07:48:35,300	[DEBUG]	
2020-12-10 07:48:36,168	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:48:37,061	[INFO]	481	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:48:37,951	[INFO]	482	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:48:38,832	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:48:39,761	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:48:40,673	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:48:44,030	[INFO]	486	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:48:44,031	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 07:48:44,032	[INFO]	487	SUCCESS	+13.0	
2020-12-10 07:48:44,032	[DEBUG]	
2020-12-10 07:48:47,361	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:48:47,362	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:48:50,692	[INFO]	489	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:48:50,693	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 41,46 ****
--- 42,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:48:53,870	[INFO]	490	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:48:53,871	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:48:57,154	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:48:57,156	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
***************
*** 41,46 ****
--- 42,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:48:58,048	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:48:58,770	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:48:59,726	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:49:03,129	[INFO]	495	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:49:03,131	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,38 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 44,52 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:49:03,133	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:49:03,135	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }
***************
*** 41,46 ****
--- 42,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:49:03,992	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:49:04,874	[INFO]	498	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:49:05,881	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:49:06,813	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:49:06,813	[INFO]	==== END ====
2020-12-10 07:49:06,813	[INFO]	Reason: step budget
2020-12-10 07:49:06,814	[INFO]	
2020-12-10 07:49:06,814	[INFO]	========== EPOCH 14 ==========
2020-12-10 07:49:06,815	[INFO]	==== WARMUP ====
2020-12-10 07:49:10,212	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:49:10,212	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:49:13,570	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:49:13,571	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:49:16,899	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:49:16,899	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:49:20,328	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:49:20,329	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:49:20,329	[INFO]	==== START ====
2020-12-10 07:49:21,024	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:49:24,279	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:49:24,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:49:24,281	[INFO]	3	SUCCESS	+13.0	
2020-12-10 07:49:24,281	[DEBUG]	
2020-12-10 07:49:25,145	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:49:26,016	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:49:26,734	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:49:27,608	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:49:28,536	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:49:29,437	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:49:32,753	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:49:32,754	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 07:49:33,599	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:49:34,484	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:49:37,850	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:49:37,852	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+         i++;
          return result;
      }
  

2020-12-10 07:49:38,702	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:49:41,889	[INFO]	15	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:49:41,890	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:49:41,891	[INFO]	16	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:49:41,892	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:49:42,763	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:49:42,764	[INFO]	18	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:49:42,764	[DEBUG]	
2020-12-10 07:49:42,765	[INFO]	19	SUCCESS	+13.0	
2020-12-10 07:49:42,765	[DEBUG]	
2020-12-10 07:49:43,664	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:49:44,544	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:49:47,844	[INFO]	22	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:49:47,845	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:49:47,846	[INFO]	23	SUCCESS	+13.0	
2020-12-10 07:49:47,846	[DEBUG]	
2020-12-10 07:49:51,077	[INFO]	24	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:49:51,078	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:49:51,079	[INFO]	25	SUCCESS	+13.0	
2020-12-10 07:49:51,079	[DEBUG]	
2020-12-10 07:49:51,948	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:49:52,859	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:49:53,750	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:49:54,650	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:49:55,551	[INFO]	30	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:49:56,459	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:49:56,461	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:49:59,770	[INFO]	33	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:49:59,773	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:49:59,774	[INFO]	34	SUCCESS	+13.0	
2020-12-10 07:49:59,775	[DEBUG]	
2020-12-10 07:50:00,645	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:50:01,535	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:50:02,434	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:50:03,330	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:50:06,731	[INFO]	39	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:50:06,732	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:50:07,630	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:50:08,492	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:50:08,494	[INFO]	42	SUCCESS	+13.0	
2020-12-10 07:50:08,494	[DEBUG]	
2020-12-10 07:50:09,394	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:50:12,678	[INFO]	44	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:50:12,679	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:50:12,680	[INFO]	45	SUCCESS	+13.0	
2020-12-10 07:50:12,681	[DEBUG]	
2020-12-10 07:50:15,976	[INFO]	46	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:50:15,977	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:50:15,978	[INFO]	47	SUCCESS	+13.0	
2020-12-10 07:50:15,978	[DEBUG]	
2020-12-10 07:50:16,858	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:50:17,742	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:50:20,989	[INFO]	50	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:50:20,990	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:50:20,992	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:50:20,992	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:50:21,858	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:50:22,753	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:50:23,618	[INFO]	54	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:50:24,526	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:50:24,528	[INFO]	56	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:50:24,528	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:50:24,529	[INFO]	57	SUCCESS	+13.0	
2020-12-10 07:50:24,529	[DEBUG]	
2020-12-10 07:50:25,414	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:50:28,684	[INFO]	59	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='})
2020-12-10 07:50:28,685	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:50:28,686	[INFO]	60	SUCCESS	+13.0	
2020-12-10 07:50:28,686	[DEBUG]	
2020-12-10 07:50:31,911	[INFO]	61	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:50:31,912	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:50:32,781	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:50:32,783	[INFO]	63	SUCCESS	+13.0	
2020-12-10 07:50:32,783	[DEBUG]	
2020-12-10 07:50:33,503	[INFO]	64	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:50:34,386	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:50:35,385	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:50:38,696	[INFO]	67	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:50:38,697	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 07:50:38,697	[INFO]	68	SUCCESS	+13.0	
2020-12-10 07:50:38,698	[DEBUG]	
2020-12-10 07:50:39,610	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:50:42,975	[INFO]	70	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:50:42,978	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:50:43,843	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:50:44,721	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:50:44,722	[INFO]	73	SUCCESS	+13.0	
2020-12-10 07:50:44,723	[DEBUG]	
2020-12-10 07:50:47,992	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:50:47,993	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:50:47,994	[INFO]	75	SUCCESS	+13.0	
2020-12-10 07:50:47,994	[DEBUG]	
2020-12-10 07:50:51,288	[INFO]	76	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'})
2020-12-10 07:50:51,289	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) < right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:50:52,016	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:50:52,019	[INFO]	78	SUCCESS	+13.0	
2020-12-10 07:50:52,020	[DEBUG]	
2020-12-10 07:50:52,914	[INFO]	79	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:50:53,799	[INFO]	80	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:50:54,698	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:50:58,006	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:50:58,007	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:50:58,936	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:50:59,897	[INFO]	84	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:50:59,899	[INFO]	85	SUCCESS	+13.0	
2020-12-10 07:50:59,899	[DEBUG]	
2020-12-10 07:51:00,802	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:51:01,722	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:51:02,722	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:51:05,971	[INFO]	89	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:51:05,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:51:06,833	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:51:07,749	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:51:08,454	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:51:09,319	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:51:09,320	[INFO]	94	SUCCESS	+13.0	
2020-12-10 07:51:09,320	[DEBUG]	
2020-12-10 07:51:12,575	[INFO]	95	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:51:12,576	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:51:13,470	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:51:13,472	[INFO]	97	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:51:13,472	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:51:13,473	[INFO]	98	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:51:13,473	[DEBUG]	
2020-12-10 07:51:13,474	[INFO]	99	SUCCESS	+13.0	
2020-12-10 07:51:13,474	[DEBUG]	
2020-12-10 07:51:14,370	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:51:15,081	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:51:15,950	[INFO]	102	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:51:16,824	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:51:17,761	[INFO]	104	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:51:18,661	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:51:19,571	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:51:22,854	[INFO]	107	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:51:22,855	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:51:22,855	[INFO]	108	SUCCESS	+13.0	
2020-12-10 07:51:22,856	[DEBUG]	
2020-12-10 07:51:23,731	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:51:24,680	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:51:27,916	[INFO]	111	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:51:27,917	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:51:27,918	[INFO]	112	SUCCESS	+13.0	
2020-12-10 07:51:27,919	[DEBUG]	
2020-12-10 07:51:28,824	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:51:32,010	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:51:32,011	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 07:51:32,909	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:51:32,910	[INFO]	116	SUCCESS	+13.0	
2020-12-10 07:51:32,910	[DEBUG]	
2020-12-10 07:51:33,787	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:51:34,673	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:51:35,417	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:51:36,309	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:51:37,215	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:51:40,379	[INFO]	122	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:51:40,381	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:51:40,383	[INFO]	123	SUCCESS	+13.0	
2020-12-10 07:51:40,384	[DEBUG]	
2020-12-10 07:51:41,258	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:51:44,511	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:51:44,512	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:51:44,513	[INFO]	126	SUCCESS	+13.0	
2020-12-10 07:51:44,513	[DEBUG]	
2020-12-10 07:51:45,383	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:51:46,286	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:51:49,582	[INFO]	129	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:51:49,583	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 07:51:49,584	[INFO]	130	SUCCESS	+13.0	
2020-12-10 07:51:49,584	[DEBUG]	
2020-12-10 07:51:52,899	[INFO]	131	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:51:52,900	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:51:52,901	[INFO]	132	SUCCESS	+13.0	
2020-12-10 07:51:52,901	[DEBUG]	
2020-12-10 07:51:53,765	[INFO]	133	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:51:54,634	[INFO]	134	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:51:58,152	[INFO]	135	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:51:58,153	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 07:51:58,154	[INFO]	136	SUCCESS	+13.0	
2020-12-10 07:51:58,155	[DEBUG]	
2020-12-10 07:51:59,012	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:52:02,379	[INFO]	138	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:52:02,380	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:52:02,380	[INFO]	139	SUCCESS	+13.0	
2020-12-10 07:52:02,381	[DEBUG]	
2020-12-10 07:52:05,596	[INFO]	140	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:52:05,598	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:52:08,801	[INFO]	141	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:52:08,803	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 35,40 ****
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int j = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 07:52:09,676	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:52:09,677	[INFO]	143	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:52:09,678	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 j++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:52:09,679	[INFO]	144	SUCCESS	+13.0	
2020-12-10 07:52:09,679	[DEBUG]	
2020-12-10 07:52:10,596	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:52:11,469	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:52:14,793	[INFO]	147	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 07:52:14,794	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:52:14,795	[INFO]	148	SUCCESS	+13.0	
2020-12-10 07:52:14,795	[DEBUG]	
2020-12-10 07:52:15,684	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:52:16,550	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:52:17,399	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:52:18,291	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:52:19,159	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:52:22,426	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:52:22,427	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:52:22,428	[INFO]	155	SUCCESS	+13.0	
2020-12-10 07:52:22,428	[DEBUG]	
2020-12-10 07:52:23,126	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:52:26,387	[INFO]	157	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:52:26,388	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:52:29,631	[INFO]	158	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:52:29,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,39 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:52:30,523	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:52:31,455	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:52:31,457	[INFO]	161	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:52:31,457	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,39 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:52:32,335	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:52:33,260	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:52:33,264	[INFO]	164	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:52:33,265	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:52:33,267	[INFO]	165	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:52:33,268	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:52:33,269	[INFO]	166	SUCCESS	+13.0	
2020-12-10 07:52:33,270	[DEBUG]	
2020-12-10 07:52:34,143	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:52:37,415	[INFO]	168	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:52:37,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 i++;
                  j++;
              }
          }

2020-12-10 07:52:40,714	[INFO]	169	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:52:40,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,35 ----
          int i = 0;
          int j = 0;
  
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 i++;
+                 j++;
+             }
+         }
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));

2020-12-10 07:52:44,021	[INFO]	170	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:52:44,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:52:44,880	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:52:45,763	[INFO]	172	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:52:45,764	[INFO]	173	SUCCESS	+13.0	
2020-12-10 07:52:45,765	[DEBUG]	
2020-12-10 07:52:45,766	[INFO]	174	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:52:45,766	[DEBUG]	
2020-12-10 07:52:46,647	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:52:47,562	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:52:48,264	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:52:48,265	[INFO]	178	SUCCESS	+13.0	
2020-12-10 07:52:48,266	[DEBUG]	
2020-12-10 07:52:49,127	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:52:50,044	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:52:50,997	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:52:54,281	[INFO]	182	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:52:54,282	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:52:54,283	[INFO]	183	SUCCESS	+13.0	
2020-12-10 07:52:54,283	[DEBUG]	
2020-12-10 07:52:55,162	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:52:56,050	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:52:56,965	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:52:57,856	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:53:01,153	[INFO]	188	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:53:01,154	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:53:01,155	[INFO]	189	SUCCESS	+13.0	
2020-12-10 07:53:01,156	[DEBUG]	
2020-12-10 07:53:02,010	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:53:02,908	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:53:03,798	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:53:04,704	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:53:07,996	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:53:07,997	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:53:11,248	[INFO]	195	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:53:11,249	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,28 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:53:11,250	[INFO]	196	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:53:11,250	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 07:53:12,118	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:53:12,119	[INFO]	198	SUCCESS	+13.0	
2020-12-10 07:53:12,120	[DEBUG]	
2020-12-10 07:53:13,017	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:53:13,896	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:53:17,248	[INFO]	201	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:53:17,249	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,40 ----
                  j++;
              }
          }
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:53:17,250	[INFO]	202	SUCCESS	+13.0	
2020-12-10 07:53:17,250	[DEBUG]	
2020-12-10 07:53:18,196	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:53:18,911	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:53:22,128	[INFO]	205	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:53:22,129	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:53:22,131	[INFO]	206	SUCCESS	+13.0	
2020-12-10 07:53:22,131	[DEBUG]	
2020-12-10 07:53:25,493	[INFO]	207	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:53:25,495	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 07:53:26,356	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:53:26,357	[INFO]	209	SUCCESS	+13.0	
2020-12-10 07:53:26,357	[DEBUG]	
2020-12-10 07:53:27,247	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:53:28,138	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:53:31,437	[INFO]	212	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:53:31,438	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:53:32,348	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:53:32,349	[INFO]	214	SUCCESS	+13.0	
2020-12-10 07:53:32,350	[DEBUG]	
2020-12-10 07:53:33,240	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:53:34,130	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:53:35,030	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:53:35,903	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:53:35,905	[INFO]	219	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:53:35,905	[DEBUG]	
2020-12-10 07:53:39,190	[INFO]	220	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:53:39,191	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:53:39,192	[INFO]	221	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:53:39,193	[DEBUG]	
2020-12-10 07:53:39,193	[INFO]	222	SUCCESS	+13.0	
2020-12-10 07:53:39,193	[DEBUG]	
2020-12-10 07:53:42,425	[INFO]	223	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:53:42,426	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         
          return result;
      }
  

2020-12-10 07:53:42,426	[INFO]	224	SUCCESS	+13.0	
2020-12-10 07:53:42,427	[DEBUG]	
2020-12-10 07:53:43,334	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:53:46,613	[INFO]	226	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:53:46,614	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:53:47,481	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:53:48,402	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:53:49,321	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:53:50,026	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:53:50,027	[INFO]	231	SUCCESS	+13.0	
2020-12-10 07:53:50,028	[DEBUG]	
2020-12-10 07:53:50,029	[INFO]	232	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:53:50,029	[DEBUG]	
2020-12-10 07:53:50,030	[INFO]	233	SUCCESS	+13.0	
2020-12-10 07:53:50,030	[DEBUG]	
2020-12-10 07:53:53,339	[INFO]	234	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:53:53,340	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:53:56,665	[INFO]	235	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:53:56,667	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:53:57,543	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:53:58,453	[INFO]	237	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:53:58,455	[INFO]	238	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:53:58,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:53:59,354	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:53:59,355	[INFO]	240	SUCCESS	+13.0	
2020-12-10 07:53:59,355	[DEBUG]	
2020-12-10 07:54:00,215	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:54:01,125	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:54:02,019	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:54:02,760	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:54:03,627	[INFO]	245	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:54:04,533	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:54:05,426	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:54:06,337	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:54:09,594	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:54:09,595	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 07:54:09,595	[INFO]	250	SUCCESS	+13.0	
2020-12-10 07:54:09,596	[DEBUG]	
2020-12-10 07:54:10,537	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 07:54:13,766	[INFO]	252	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:54:13,767	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 07:54:13,767	[INFO]	253	SUCCESS	+13.0	
2020-12-10 07:54:13,768	[DEBUG]	
2020-12-10 07:54:14,665	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:54:15,552	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:54:16,494	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:54:17,376	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:54:18,310	[INFO]	258	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:54:18,311	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:54:19,201	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:54:20,147	[INFO]	261	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:54:20,149	[INFO]	262	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:54:20,150	[DEBUG]	
2020-12-10 07:54:21,057	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:54:21,957	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:54:22,894	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:54:22,895	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:54:26,350	[INFO]	267	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:54:26,351	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:54:26,352	[INFO]	268	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:54:26,352	[DEBUG]	
2020-12-10 07:54:26,353	[INFO]	269	SUCCESS	+13.0	
2020-12-10 07:54:26,353	[DEBUG]	
2020-12-10 07:54:27,277	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:54:28,015	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:54:28,934	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:54:29,917	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 07:54:30,827	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:54:31,778	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:54:32,670	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 07:54:33,602	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:54:36,836	[INFO]	278	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:54:36,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:54:36,838	[INFO]	279	SUCCESS	+13.0	
2020-12-10 07:54:36,838	[DEBUG]	
2020-12-10 07:54:37,738	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:54:41,045	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:54:41,046	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:54:41,955	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 07:54:41,957	[INFO]	283	SUCCESS	+13.0	
2020-12-10 07:54:41,958	[DEBUG]	
2020-12-10 07:54:42,890	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:54:43,794	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:54:47,069	[INFO]	286	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:54:47,070	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:54:50,546	[INFO]	287	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:54:50,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 45,50 ****
--- 49,55 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:54:54,048	[INFO]	288	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:54:54,049	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 07:54:54,049	[INFO]	289	SUCCESS	+13.0	
2020-12-10 07:54:54,050	[DEBUG]	
2020-12-10 07:54:54,902	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:54:55,773	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:54:56,686	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:54:59,975	[INFO]	293	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:54:59,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:55:00,903	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:55:00,905	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 07:55:00,906	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:55:01,845	[INFO]	296	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:55:01,846	[INFO]	297	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:55:01,847	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:55:01,848	[INFO]	298	SUCCESS	+13.0	
2020-12-10 07:55:01,848	[DEBUG]	
2020-12-10 07:55:02,731	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:55:03,609	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 07:55:04,341	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 07:55:05,072	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:55:05,974	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:55:06,907	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:55:10,192	[INFO]	305	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:55:10,195	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:55:11,085	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:55:11,086	[INFO]	307	SUCCESS	+13.0	
2020-12-10 07:55:11,086	[DEBUG]	
2020-12-10 07:55:14,434	[INFO]	308	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 07:55:14,435	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 07:55:14,436	[INFO]	309	SUCCESS	+13.0	
2020-12-10 07:55:14,436	[DEBUG]	
2020-12-10 07:55:17,668	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:55:17,669	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:55:17,670	[INFO]	311	SUCCESS	+13.0	
2020-12-10 07:55:17,670	[DEBUG]	
2020-12-10 07:55:18,566	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:55:19,315	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:55:20,179	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:55:23,447	[INFO]	315	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 07:55:23,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 07:55:23,451	[INFO]	316	SUCCESS	+13.0	
2020-12-10 07:55:23,452	[DEBUG]	
2020-12-10 07:55:24,326	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:55:25,040	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:55:25,947	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:55:26,812	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:55:26,814	[INFO]	321	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:55:26,814	[DEBUG]	
2020-12-10 07:55:26,815	[INFO]	322	SUCCESS	+13.0	
2020-12-10 07:55:26,815	[DEBUG]	
2020-12-10 07:55:27,529	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:55:28,377	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:55:29,309	[INFO]	325	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:55:30,239	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:55:31,120	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:55:32,031	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:55:32,946	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:55:33,833	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:55:38,048	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:55:38,049	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:55:38,050	[INFO]	332	SUCCESS	+13.0	
2020-12-10 07:55:38,050	[DEBUG]	
2020-12-10 07:55:38,999	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:55:39,911	[INFO]	334	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:55:40,801	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:55:41,682	[INFO]	336	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:55:44,884	[INFO]	337	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:55:44,885	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:55:44,885	[INFO]	338	SUCCESS	+13.0	
2020-12-10 07:55:44,886	[DEBUG]	
2020-12-10 07:55:45,759	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 07:55:49,024	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:55:49,026	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 07:55:49,027	[INFO]	341	SUCCESS	+13.0	
2020-12-10 07:55:49,028	[DEBUG]	
2020-12-10 07:55:49,756	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:55:50,647	[INFO]	343	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:55:51,563	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:55:54,797	[INFO]	345	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:55:54,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:55:58,029	[INFO]	346	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:55:58,030	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:55:58,922	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:55:59,853	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:55:59,855	[INFO]	349	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:55:59,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:56:03,114	[INFO]	350	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:56:03,116	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 48,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:03,118	[INFO]	351	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:56:03,120	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 48,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:06,400	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:56:06,402	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:07,278	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:56:07,279	[INFO]	354	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:56:07,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             i++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:56:07,280	[INFO]	355	SUCCESS	+13.0	
2020-12-10 07:56:07,281	[DEBUG]	
2020-12-10 07:56:10,517	[INFO]	356	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:56:10,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:56:11,403	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:56:11,404	[INFO]	358	SUCCESS	+13.0	
2020-12-10 07:56:11,404	[DEBUG]	
2020-12-10 07:56:14,742	[INFO]	359	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:56:14,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:56:15,614	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:56:16,494	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:56:17,378	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:56:18,302	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 07:56:21,559	[INFO]	364	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:56:21,560	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 36,41 ****
--- 40,46 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:56:22,443	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:56:23,149	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:56:24,034	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:56:24,913	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:56:25,825	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:56:29,153	[INFO]	370	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:56:29,156	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 36,41 ****
--- 41,47 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int j = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 07:56:32,374	[INFO]	371	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:56:32,375	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 07:56:33,264	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 07:56:36,521	[INFO]	373	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:56:36,524	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,32 ****
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 43,48 ****
--- 48,54 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:39,856	[INFO]	374	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:56:39,859	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 43,48 ****
--- 47,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:40,695	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:56:41,623	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:56:44,880	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:56:44,881	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 07:56:44,882	[INFO]	378	SUCCESS	+13.0	
2020-12-10 07:56:44,882	[DEBUG]	
2020-12-10 07:56:48,110	[INFO]	379	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:56:48,110	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:56:48,111	[INFO]	380	SUCCESS	+13.0	
2020-12-10 07:56:48,112	[DEBUG]	
2020-12-10 07:56:48,975	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:56:52,288	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:56:52,289	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 07:56:53,190	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:56:54,056	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 07:56:54,939	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 07:56:54,940	[INFO]	386	SUCCESS	+13.0	
2020-12-10 07:56:54,941	[DEBUG]	
2020-12-10 07:56:54,942	[INFO]	387	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 07:56:54,943	[DEBUG]	
2020-12-10 07:56:54,943	[INFO]	388	SUCCESS	+13.0	
2020-12-10 07:56:54,944	[DEBUG]	
2020-12-10 07:56:55,828	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 07:56:56,717	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:56:57,612	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:56:58,492	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:56:59,192	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:57:00,062	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:57:00,952	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 07:57:01,838	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:57:05,094	[INFO]	397	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 07:57:05,095	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 07:57:05,972	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:57:05,974	[INFO]	399	SUCCESS	+13.0	
2020-12-10 07:57:05,975	[DEBUG]	
2020-12-10 07:57:06,842	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:57:07,751	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:57:08,654	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 07:57:09,516	[INFO]	403	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 07:57:10,417	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:57:13,740	[INFO]	405	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:57:13,741	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:57:13,742	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:57:13,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:57:14,588	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:57:15,447	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 07:57:16,316	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:57:16,317	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:57:16,318	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:57:17,189	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 07:57:17,191	[INFO]	412	SUCCESS	+13.0	
2020-12-10 07:57:17,191	[DEBUG]	
2020-12-10 07:57:18,072	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 07:57:18,975	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:57:22,248	[INFO]	415	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 07:57:22,249	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:57:23,122	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:57:23,125	[INFO]	417	SUCCESS	+13.0	
2020-12-10 07:57:23,125	[DEBUG]	
2020-12-10 07:57:26,390	[INFO]	418	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:57:26,391	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:57:27,292	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:57:28,170	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:57:28,172	[INFO]	421	SUCCESS	+13.0	
2020-12-10 07:57:28,172	[DEBUG]	
2020-12-10 07:57:29,116	[INFO]	422	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:57:32,415	[INFO]	423	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:57:32,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 07:57:32,416	[INFO]	424	SUCCESS	+13.0	
2020-12-10 07:57:32,417	[DEBUG]	
2020-12-10 07:57:33,281	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:57:36,489	[INFO]	426	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:57:36,490	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:57:37,366	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:57:38,238	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 07:57:39,134	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:57:42,429	[INFO]	430	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 07:57:42,430	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,36 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 07:57:42,431	[INFO]	431	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:57:42,431	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:57:42,432	[INFO]	432	SUCCESS	+13.0	
2020-12-10 07:57:42,432	[DEBUG]	
2020-12-10 07:57:45,655	[INFO]	433	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 07:57:45,656	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:57:46,525	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 07:57:46,526	[INFO]	435	SUCCESS	+13.0	
2020-12-10 07:57:46,526	[DEBUG]	
2020-12-10 07:57:49,788	[INFO]	436	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 07:57:49,789	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 07:57:49,790	[INFO]	437	SUCCESS	+13.0	
2020-12-10 07:57:49,790	[DEBUG]	
2020-12-10 07:57:50,722	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:57:54,041	[INFO]	439	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 07:57:54,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:57:54,943	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:57:54,945	[INFO]	441	SUCCESS	+13.0	
2020-12-10 07:57:54,946	[DEBUG]	
2020-12-10 07:57:55,846	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:57:56,771	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:57:57,668	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:57:58,559	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:57:59,481	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:58:00,414	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:58:03,651	[INFO]	448	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:58:03,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:03,653	[INFO]	449	SUCCESS	+13.0	
2020-12-10 07:58:03,653	[DEBUG]	
2020-12-10 07:58:04,549	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:58:07,849	[INFO]	451	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:58:07,850	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:58:11,162	[INFO]	452	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:58:11,164	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,36 ****
--- 25,41 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             }
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:58:14,318	[INFO]	453	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:58:14,319	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 07:58:15,175	[INFO]	454	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:58:16,088	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:58:16,090	[INFO]	456	SUCCESS	+13.0	
2020-12-10 07:58:16,091	[DEBUG]	
2020-12-10 07:58:16,982	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 07:58:17,844	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:58:18,714	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:58:19,605	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 07:58:22,861	[INFO]	461	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:58:22,862	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:58:22,863	[INFO]	462	SUCCESS	+13.0	
2020-12-10 07:58:22,863	[DEBUG]	
2020-12-10 07:58:26,168	[INFO]	463	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='})
2020-12-10 07:58:26,169	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:58:26,170	[INFO]	464	SUCCESS	+13.0	
2020-12-10 07:58:26,170	[DEBUG]	
2020-12-10 07:58:27,044	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:58:27,949	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:58:28,863	[INFO]	467	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:58:29,761	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:58:30,658	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:58:31,525	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 07:58:34,799	[INFO]	471	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:58:34,800	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:38,008	[INFO]	472	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:58:38,009	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
--- 44,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+ 
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 07:58:38,901	[INFO]	473	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:58:38,902	[INFO]	474	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 07:58:38,903	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:38,903	[INFO]	475	SUCCESS	+13.0	
2020-12-10 07:58:38,904	[DEBUG]	
2020-12-10 07:58:39,809	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 07:58:40,687	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 07:58:43,980	[INFO]	478	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:58:43,981	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 07:58:43,982	[INFO]	479	SUCCESS	+13.0	
2020-12-10 07:58:43,982	[DEBUG]	
2020-12-10 07:58:43,983	[INFO]	480	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:58:43,983	[DEBUG]	
2020-12-10 07:58:44,813	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 07:58:45,700	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 07:58:45,702	[INFO]	483	SUCCESS	+13.0	
2020-12-10 07:58:45,702	[DEBUG]	
2020-12-10 07:58:46,583	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 07:58:47,306	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 07:58:47,307	[INFO]	486	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 07:58:47,308	[DEBUG]	
2020-12-10 07:58:47,309	[INFO]	487	SUCCESS	+13.0	
2020-12-10 07:58:47,309	[DEBUG]	
2020-12-10 07:58:48,178	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 07:58:48,179	[INFO]	489	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 07:58:49,088	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 07:58:49,998	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:58:53,277	[INFO]	492	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:58:53,278	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:54,139	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:58:54,140	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:58:54,141	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:54,142	[INFO]	495	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:58:54,142	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:58:54,143	[INFO]	496	SUCCESS	+13.0	
2020-12-10 07:58:54,143	[DEBUG]	
2020-12-10 07:58:57,444	[INFO]	497	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 07:58:57,447	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,36 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 07:58:57,449	[INFO]	498	SUCCESS	+13.0	
2020-12-10 07:58:57,449	[DEBUG]	
2020-12-10 07:59:00,696	[INFO]	499	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 07:59:00,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 07:59:04,034	[INFO]	500	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 07:59:04,035	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,35 ****
--- 28,40 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 07:59:04,035	[INFO]	==== END ====
2020-12-10 07:59:04,035	[INFO]	Reason: step budget
2020-12-10 07:59:04,036	[INFO]	
2020-12-10 07:59:04,036	[INFO]	========== EPOCH 15 ==========
2020-12-10 07:59:04,036	[INFO]	==== WARMUP ====
2020-12-10 07:59:07,221	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:59:07,221	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:59:10,441	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:59:10,441	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:59:13,622	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 07:59:13,622	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:59:16,894	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 07:59:16,895	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 07:59:16,895	[INFO]	==== START ====
2020-12-10 07:59:17,761	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:59:18,761	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 07:59:19,675	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:59:22,963	[INFO]	4	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 07:59:22,964	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:59:22,965	[INFO]	5	SUCCESS	+13.0	
2020-12-10 07:59:22,965	[DEBUG]	
2020-12-10 07:59:23,816	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 07:59:24,691	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 07:59:25,571	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 07:59:26,442	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 07:59:29,678	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:59:29,679	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 left = mergesort(left);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:59:29,680	[INFO]	11	SUCCESS	+13.0	
2020-12-10 07:59:29,680	[DEBUG]	
2020-12-10 07:59:30,555	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:59:31,459	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 07:59:32,377	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 07:59:33,299	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 07:59:36,549	[INFO]	16	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 07:59:36,551	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 07:59:37,436	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:59:37,439	[INFO]	18	SUCCESS	+13.0	
2020-12-10 07:59:37,440	[DEBUG]	
2020-12-10 07:59:40,666	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 07:59:40,666	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 07:59:43,835	[INFO]	20	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 07:59:43,836	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:44,503	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 07:59:47,640	[INFO]	22	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:59:47,641	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:50,900	[INFO]	23	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:59:50,901	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:54,155	[INFO]	24	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 07:59:54,156	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,49 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:54,157	[INFO]	25	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 07:59:54,157	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:55,066	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 07:59:55,071	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:59:55,072	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 07:59:58,346	[INFO]	28	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 07:59:58,347	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:00:01,583	[INFO]	29	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:00:01,584	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:00:02,445	[INFO]	30	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:00:03,353	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:00:06,614	[INFO]	32	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:00:06,616	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 44,49 ****
--- 49,55 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:00:06,617	[INFO]	33	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:00:06,618	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 44,49 ****
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:00:07,734	[INFO]	34	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:00:10,992	[INFO]	35	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:00:10,993	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
--- 31,46 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 44,49 ****
--- 49,55 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:00:11,876	[INFO]	36	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:00:15,278	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:00:15,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
--- 31,46 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 45,50 ****
--- 50,58 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 08:00:18,472	[INFO]	38	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:00:18,475	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
--- 31,46 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:00:18,478	[INFO]	39	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:18,480	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,41 ****
--- 31,46 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:00:19,351	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:00:20,220	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:21,102	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:00:24,450	[INFO]	43	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:24,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:00:25,309	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:25,311	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:00:25,311	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:00:28,602	[INFO]	46	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:00:28,604	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,36 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 24,40 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:00:28,606	[INFO]	47	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:00:28,607	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:00:29,494	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:00:30,447	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:00:31,346	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:00:34,518	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:34,520	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 48,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:00:35,575	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:00:36,544	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:00:37,469	[INFO]	54	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:00:38,352	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:00:41,520	[INFO]	56	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:41,521	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:00:44,706	[INFO]	57	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:00:44,708	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:00:45,582	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:00:45,583	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:00:45,584	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:00:46,451	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:00:46,452	[INFO]	61	SUCCESS	+13.0	
2020-12-10 08:00:46,453	[DEBUG]	
2020-12-10 08:00:47,481	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:00:48,401	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:00:49,153	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:00:52,449	[INFO]	65	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:00:52,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 08:00:52,450	[INFO]	66	SUCCESS	+13.0	
2020-12-10 08:00:52,451	[DEBUG]	
2020-12-10 08:00:53,335	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:00:54,223	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:00:55,126	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:00:58,409	[INFO]	70	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:00:58,409	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:00:58,410	[INFO]	71	SUCCESS	+13.0	
2020-12-10 08:00:58,411	[DEBUG]	
2020-12-10 08:00:59,280	[INFO]	72	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:01:02,532	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:01:02,533	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,53 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 08:01:02,534	[INFO]	74	SUCCESS	+13.0	
2020-12-10 08:01:02,534	[DEBUG]	
2020-12-10 08:01:05,681	[INFO]	75	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:01:05,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 08:01:05,683	[INFO]	76	SUCCESS	+13.0	
2020-12-10 08:01:05,684	[DEBUG]	
2020-12-10 08:01:06,564	[INFO]	77	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:01:07,445	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:01:10,743	[INFO]	79	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:01:10,743	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:01:11,615	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:01:11,617	[INFO]	81	SUCCESS	+13.0	
2020-12-10 08:01:11,617	[DEBUG]	
2020-12-10 08:01:14,971	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:01:14,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:01:15,818	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:01:15,819	[INFO]	84	SUCCESS	+13.0	
2020-12-10 08:01:15,819	[DEBUG]	
2020-12-10 08:01:19,047	[INFO]	85	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:01:19,048	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:01:19,049	[INFO]	86	SUCCESS	+13.0	
2020-12-10 08:01:19,049	[DEBUG]	
2020-12-10 08:01:22,397	[INFO]	87	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:01:22,398	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 08:01:22,399	[INFO]	88	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:01:22,400	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 08:01:22,401	[INFO]	89	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:01:22,401	[DEBUG]	
2020-12-10 08:01:22,402	[INFO]	90	SUCCESS	+13.0	
2020-12-10 08:01:22,402	[DEBUG]	
2020-12-10 08:01:23,278	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:01:24,166	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:01:25,054	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:01:28,276	[INFO]	94	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:01:28,277	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 08:01:29,190	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:01:29,192	[INFO]	96	SUCCESS	+13.0	
2020-12-10 08:01:29,192	[DEBUG]	
2020-12-10 08:01:30,095	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:01:30,973	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:01:31,897	[INFO]	99	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:01:32,599	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:01:35,889	[INFO]	101	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:01:35,890	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:01:35,891	[INFO]	102	SUCCESS	+13.0	
2020-12-10 08:01:35,891	[DEBUG]	
2020-12-10 08:01:39,116	[INFO]	103	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:01:39,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:01:40,014	[INFO]	104	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:01:40,744	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:01:40,747	[INFO]	106	SUCCESS	+13.0	
2020-12-10 08:01:40,747	[DEBUG]	
2020-12-10 08:01:41,632	[INFO]	107	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:01:42,517	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:01:43,386	[INFO]	109	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:01:44,269	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:01:45,150	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:01:48,418	[INFO]	112	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:01:48,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:01:49,331	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:01:52,539	[INFO]	114	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:01:52,540	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:01:53,437	[INFO]	115	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:01:56,651	[INFO]	116	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:01:56,652	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:01:56,652	[INFO]	117	SUCCESS	+13.0	
2020-12-10 08:01:56,653	[DEBUG]	
2020-12-10 08:01:57,535	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:02:00,855	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:02:00,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:02:00,857	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:02:00,858	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:02:00,859	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:02:00,859	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:02:00,860	[INFO]	122	SUCCESS	+13.0	
2020-12-10 08:02:00,861	[DEBUG]	
2020-12-10 08:02:01,600	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:02:02,464	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:02:03,164	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:02:04,026	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:02:04,915	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:02:05,777	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:02:08,992	[INFO]	129	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:02:08,993	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:02:08,993	[INFO]	130	SUCCESS	+13.0	
2020-12-10 08:02:08,994	[DEBUG]	
2020-12-10 08:02:09,861	[INFO]	131	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:02:13,117	[INFO]	132	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:02:13,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:02:13,978	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:02:14,847	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:02:15,724	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:02:16,620	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:02:19,916	[INFO]	137	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:02:19,918	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 31,37 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:02:20,613	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:02:21,473	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:02:21,474	[INFO]	140	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:02:21,475	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:02:21,476	[INFO]	141	SUCCESS	+13.0	
2020-12-10 08:02:21,476	[DEBUG]	
2020-12-10 08:02:24,732	[INFO]	142	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:02:24,733	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:02:24,733	[INFO]	143	SUCCESS	+13.0	
2020-12-10 08:02:24,734	[DEBUG]	
2020-12-10 08:02:25,647	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:02:26,337	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:02:26,339	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:02:27,244	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:02:30,563	[INFO]	148	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:02:30,564	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 08:02:31,429	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:02:31,430	[INFO]	150	SUCCESS	+13.0	
2020-12-10 08:02:31,430	[DEBUG]	
2020-12-10 08:02:32,302	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:02:33,179	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:02:34,071	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:02:37,283	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:02:37,284	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:02:38,165	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:02:38,167	[INFO]	156	SUCCESS	+13.0	
2020-12-10 08:02:38,168	[DEBUG]	
2020-12-10 08:02:39,051	[INFO]	157	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:02:39,917	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:02:43,099	[INFO]	159	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:02:43,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 08:02:43,986	[INFO]	160	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:02:43,988	[INFO]	161	SUCCESS	+13.0	
2020-12-10 08:02:43,988	[DEBUG]	
2020-12-10 08:02:44,874	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:02:45,783	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:02:46,665	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:02:49,959	[INFO]	165	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:02:49,960	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:02:50,901	[INFO]	166	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:02:50,903	[INFO]	167	SUCCESS	+13.0	
2020-12-10 08:02:50,904	[DEBUG]	
2020-12-10 08:02:51,824	[INFO]	168	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:02:52,749	[INFO]	169	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:02:53,641	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:02:54,534	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:02:57,817	[INFO]	172	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:02:57,818	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:02:58,693	[INFO]	173	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:02:59,589	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:03:00,463	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:03:03,689	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:03:03,690	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 39,44 ****
--- 40,46 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:03:04,554	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:03:07,920	[INFO]	178	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:03:07,921	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+                 j++;
                  j++;
              }
          }
***************
*** 39,44 ****
--- 41,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:03:11,238	[INFO]	179	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:03:11,239	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,34 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+                 j++;
                  j++;
              }
          }

2020-12-10 08:03:14,444	[INFO]	180	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:03:14,445	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:03:14,446	[INFO]	181	SUCCESS	+13.0	
2020-12-10 08:03:14,446	[DEBUG]	
2020-12-10 08:03:15,324	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:03:16,214	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:03:17,106	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:03:17,999	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:03:18,888	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:03:22,114	[INFO]	187	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:03:22,115	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 08:03:22,998	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:03:26,195	[INFO]	189	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:03:26,198	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:03:26,200	[INFO]	190	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:03:26,202	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  

2020-12-10 08:03:26,203	[INFO]	191	SUCCESS	+13.0	
2020-12-10 08:03:26,204	[DEBUG]	
2020-12-10 08:03:27,092	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:03:27,960	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:03:31,412	[INFO]	194	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:03:31,413	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 08:03:31,413	[INFO]	195	SUCCESS	+13.0	
2020-12-10 08:03:31,414	[DEBUG]	
2020-12-10 08:03:32,254	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:03:35,520	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:03:35,521	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,36 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:03:36,416	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:03:37,307	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:03:37,309	[INFO]	200	SUCCESS	+13.0	
2020-12-10 08:03:37,309	[DEBUG]	
2020-12-10 08:03:40,589	[INFO]	201	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:03:40,590	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:03:40,591	[INFO]	202	SUCCESS	+13.0	
2020-12-10 08:03:40,591	[DEBUG]	
2020-12-10 08:03:41,428	[INFO]	203	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:03:42,265	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:03:42,267	[INFO]	205	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:03:42,268	[INFO]	206	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:03:42,268	[DEBUG]	
2020-12-10 08:03:42,268	[INFO]	207	SUCCESS	+13.0	
2020-12-10 08:03:42,269	[DEBUG]	
2020-12-10 08:03:43,179	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:03:46,466	[INFO]	209	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:03:46,468	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         right = mergesort(right);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:03:46,470	[INFO]	210	SUCCESS	+13.0	
2020-12-10 08:03:46,471	[DEBUG]	
2020-12-10 08:03:49,703	[INFO]	211	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:03:49,704	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left = mergesort(left);
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:03:49,705	[INFO]	212	SUCCESS	+13.0	
2020-12-10 08:03:49,705	[DEBUG]	
2020-12-10 08:03:50,594	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:03:54,027	[INFO]	214	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:03:54,028	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 08:03:57,292	[INFO]	215	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:03:57,293	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,24 ****
--- 18,26 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:03:58,161	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:03:58,163	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:03:58,164	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,24 ****
--- 18,26 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:03:59,034	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:03:59,768	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:03:59,770	[INFO]	220	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:03:59,771	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,24 ****
--- 18,26 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:03:59,772	[INFO]	221	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:03:59,773	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,24 ****
--- 18,26 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:03:59,774	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:03:59,775	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 08:03:59,776	[INFO]	223	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:03:59,776	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         right = mergesort(right);
          int i = 0;
          int j = 0;
  

2020-12-10 08:03:59,777	[INFO]	224	SUCCESS	+13.0	
2020-12-10 08:03:59,777	[DEBUG]	
2020-12-10 08:04:00,683	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:04:01,575	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:04:01,577	[INFO]	227	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:04:01,577	[DEBUG]	
2020-12-10 08:04:01,578	[INFO]	228	SUCCESS	+13.0	
2020-12-10 08:04:01,578	[DEBUG]	
2020-12-10 08:04:02,291	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:04:03,163	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:04:04,068	[INFO]	231	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:04:04,981	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:04:05,875	[INFO]	233	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:04:06,755	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:04:10,016	[INFO]	235	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:04:10,019	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:04:10,895	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:04:10,896	[INFO]	237	SUCCESS	+13.0	
2020-12-10 08:04:10,896	[DEBUG]	
2020-12-10 08:04:11,788	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:04:12,660	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:04:13,590	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:04:14,464	[INFO]	241	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:04:15,362	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:04:16,258	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:04:17,120	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:04:20,366	[INFO]	245	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:04:20,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 08:04:21,249	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:04:21,250	[INFO]	247	SUCCESS	+13.0	
2020-12-10 08:04:21,250	[DEBUG]	
2020-12-10 08:04:22,146	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:04:23,037	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:04:23,913	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:04:24,796	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:04:25,682	[INFO]	252	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:04:26,541	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:04:27,243	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:04:30,556	[INFO]	255	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:04:30,557	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:04:30,557	[INFO]	256	SUCCESS	+13.0	
2020-12-10 08:04:30,558	[DEBUG]	
2020-12-10 08:04:31,428	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:04:32,181	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:04:33,062	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:04:36,284	[INFO]	260	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:04:36,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:04:36,286	[INFO]	261	SUCCESS	+13.0	
2020-12-10 08:04:36,287	[DEBUG]	
2020-12-10 08:04:37,162	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:04:40,395	[INFO]	263	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:04:40,396	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:04:41,287	[INFO]	264	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:04:41,290	[INFO]	265	SUCCESS	+13.0	
2020-12-10 08:04:41,291	[DEBUG]	
2020-12-10 08:04:42,217	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:04:45,465	[INFO]	267	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:04:45,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:04:45,466	[INFO]	268	SUCCESS	+13.0	
2020-12-10 08:04:45,467	[DEBUG]	
2020-12-10 08:04:48,736	[INFO]	269	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:04:48,737	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:04:48,738	[INFO]	270	SUCCESS	+13.0	
2020-12-10 08:04:48,739	[DEBUG]	
2020-12-10 08:04:52,025	[INFO]	271	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:04:52,027	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:04:52,028	[INFO]	272	SUCCESS	+13.0	
2020-12-10 08:04:52,028	[DEBUG]	
2020-12-10 08:04:52,917	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:04:53,816	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:04:54,719	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:04:55,612	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:04:56,546	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:04:57,465	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:04:58,363	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:04:59,242	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:04:59,940	[INFO]	281	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:05:00,649	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:05:01,556	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:05:02,284	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:05:03,130	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:05:04,020	[INFO]	286	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:05:04,737	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:05:05,633	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:05:06,498	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:05:07,384	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:05:10,842	[INFO]	291	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:05:10,843	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 08:05:10,844	[INFO]	292	SUCCESS	+13.0	
2020-12-10 08:05:10,844	[DEBUG]	
2020-12-10 08:05:14,193	[INFO]	293	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:05:14,195	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 08:05:14,197	[INFO]	294	SUCCESS	+13.0	
2020-12-10 08:05:14,198	[DEBUG]	
2020-12-10 08:05:17,743	[INFO]	295	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:05:17,744	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:05:18,643	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:05:18,644	[INFO]	297	SUCCESS	+13.0	
2020-12-10 08:05:18,644	[DEBUG]	
2020-12-10 08:05:19,741	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:05:20,465	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:05:21,333	[INFO]	300	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:05:22,044	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:05:25,369	[INFO]	302	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:05:25,370	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:05:26,278	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:05:27,181	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:05:27,182	[INFO]	305	SUCCESS	+13.0	
2020-12-10 08:05:27,182	[DEBUG]	
2020-12-10 08:05:28,073	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:05:31,683	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:05:31,684	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:05:32,489	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:05:32,490	[INFO]	309	SUCCESS	+13.0	
2020-12-10 08:05:32,490	[DEBUG]	
2020-12-10 08:05:35,981	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:05:35,982	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:05:35,984	[INFO]	311	SUCCESS	+13.0	
2020-12-10 08:05:35,984	[DEBUG]	
2020-12-10 08:05:37,218	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:05:38,497	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:05:39,570	[INFO]	314	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:05:40,724	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:05:41,812	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:05:42,916	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:05:43,815	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:05:47,465	[INFO]	319	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:05:47,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 08:05:47,467	[INFO]	320	SUCCESS	+13.0	
2020-12-10 08:05:47,467	[DEBUG]	
2020-12-10 08:05:48,320	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:05:49,232	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:05:52,575	[INFO]	323	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:05:52,576	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:05:52,577	[INFO]	324	SUCCESS	+13.0	
2020-12-10 08:05:52,577	[DEBUG]	
2020-12-10 08:05:55,975	[INFO]	325	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:05:55,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:05:55,976	[INFO]	326	SUCCESS	+13.0	
2020-12-10 08:05:55,977	[DEBUG]	
2020-12-10 08:05:56,854	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:05:57,722	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:05:58,627	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:05:59,539	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:06:00,454	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:06:01,341	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:06:01,343	[INFO]	333	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:06:01,344	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,43 ****
--- 38,44 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 08:06:04,656	[INFO]	334	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:06:04,660	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         result.add(right.get(j));
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 38,43 ****
--- 40,46 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int i = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));

2020-12-10 08:06:05,531	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:06:08,944	[INFO]	336	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:06:08,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:06:08,947	[INFO]	337	SUCCESS	+13.0	
2020-12-10 08:06:08,947	[DEBUG]	
2020-12-10 08:06:09,846	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:06:10,778	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:06:11,660	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:06:12,534	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:06:13,433	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:06:16,551	[INFO]	343	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:06:16,553	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:06:17,393	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:06:18,272	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:06:18,976	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:06:18,977	[INFO]	347	SUCCESS	+13.0	
2020-12-10 08:06:18,977	[DEBUG]	
2020-12-10 08:06:19,922	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:06:23,161	[INFO]	349	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='})
2020-12-10 08:06:23,162	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:06:23,163	[INFO]	350	SUCCESS	+13.0	
2020-12-10 08:06:23,163	[DEBUG]	
2020-12-10 08:06:24,057	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:06:27,275	[INFO]	352	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:06:27,276	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:06:27,277	[INFO]	353	SUCCESS	+13.0	
2020-12-10 08:06:27,277	[DEBUG]	
2020-12-10 08:06:28,147	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:06:31,484	[INFO]	355	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:06:31,486	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:06:32,352	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:06:33,068	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:06:33,963	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:06:33,964	[INFO]	359	SUCCESS	+13.0	
2020-12-10 08:06:33,964	[DEBUG]	
2020-12-10 08:06:34,871	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:06:35,731	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:06:39,050	[INFO]	362	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:06:39,051	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:06:39,903	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:06:39,904	[INFO]	364	SUCCESS	+13.0	
2020-12-10 08:06:39,904	[DEBUG]	
2020-12-10 08:06:40,592	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:06:41,463	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:06:42,362	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:06:43,271	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:06:46,572	[INFO]	369	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:06:46,575	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:06:46,577	[INFO]	370	SUCCESS	+13.0	
2020-12-10 08:06:46,577	[DEBUG]	
2020-12-10 08:06:47,427	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:06:48,305	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:06:49,192	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:06:50,086	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:06:53,363	[INFO]	375	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:06:53,365	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,39 ----
                  j++;
              }
          }
!         if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             }
          return result;
      }
  

2020-12-10 08:06:53,367	[INFO]	376	SUCCESS	+13.0	
2020-12-10 08:06:53,367	[DEBUG]	
2020-12-10 08:06:54,270	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:06:55,145	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:06:56,037	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:06:56,911	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:06:57,787	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:07:01,016	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:07:01,017	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 08:07:01,018	[INFO]	383	SUCCESS	+13.0	
2020-12-10 08:07:01,018	[DEBUG]	
2020-12-10 08:07:01,742	[INFO]	384	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:07:02,637	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:07:05,827	[INFO]	386	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:07:05,828	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         j++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:07:05,829	[INFO]	387	SUCCESS	+13.0	
2020-12-10 08:07:05,829	[DEBUG]	
2020-12-10 08:07:06,682	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:07:09,969	[INFO]	389	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='})
2020-12-10 08:07:09,970	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i == left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:07:10,856	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:07:14,156	[INFO]	391	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:07:14,157	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i == left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:07:17,414	[INFO]	392	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:07:17,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:07:17,416	[INFO]	393	SUCCESS	+13.0	
2020-12-10 08:07:17,416	[DEBUG]	
2020-12-10 08:07:20,744	[INFO]	394	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:07:20,745	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:07:21,628	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:07:22,518	[INFO]	396	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:07:22,519	[INFO]	397	SUCCESS	+13.0	
2020-12-10 08:07:22,519	[DEBUG]	
2020-12-10 08:07:23,399	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:07:26,681	[INFO]	399	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:07:26,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:07:29,879	[INFO]	400	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:07:29,881	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:07:33,172	[INFO]	401	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:07:33,174	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:07:33,177	[INFO]	402	SUCCESS	+13.0	
2020-12-10 08:07:33,178	[DEBUG]	
2020-12-10 08:07:36,449	[INFO]	403	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:07:36,450	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:07:37,149	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:07:38,008	[INFO]	405	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:07:38,009	[INFO]	406	SUCCESS	+13.0	
2020-12-10 08:07:38,010	[DEBUG]	
2020-12-10 08:07:38,932	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:07:42,152	[INFO]	408	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:07:42,153	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:07:43,032	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:07:43,034	[INFO]	410	SUCCESS	+13.0	
2020-12-10 08:07:43,035	[DEBUG]	
2020-12-10 08:07:43,928	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:07:44,809	[INFO]	412	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:07:45,765	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:07:49,131	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:07:49,134	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:07:49,136	[INFO]	415	SUCCESS	+13.0	
2020-12-10 08:07:49,137	[DEBUG]	
2020-12-10 08:07:52,414	[INFO]	416	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:07:52,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(left.get(i));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:07:52,416	[INFO]	417	SUCCESS	+13.0	
2020-12-10 08:07:52,416	[DEBUG]	
2020-12-10 08:07:52,417	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:07:53,312	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:07:54,188	[INFO]	420	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:07:55,068	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:07:55,980	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:07:56,877	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:07:56,878	[INFO]	424	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:07:56,879	[DEBUG]	
2020-12-10 08:08:00,202	[INFO]	425	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:08:00,203	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:08:03,501	[INFO]	426	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:08:03,504	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,30 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:08:03,507	[INFO]	427	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:08:03,509	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,30 ****
--- 20,32 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:08:06,752	[INFO]	428	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:08:06,754	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:08:06,754	[INFO]	429	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:08:06,755	[DEBUG]	
2020-12-10 08:08:06,755	[INFO]	430	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:08:06,756	[DEBUG]	
2020-12-10 08:08:10,067	[INFO]	431	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:08:10,068	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:08:10,773	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:08:11,648	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:08:12,551	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:08:12,553	[INFO]	435	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:08:12,553	[DEBUG]	
2020-12-10 08:08:12,554	[INFO]	436	SUCCESS	+13.0	
2020-12-10 08:08:12,554	[DEBUG]	
2020-12-10 08:08:15,902	[INFO]	437	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:08:15,903	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:16,759	[INFO]	438	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:08:17,632	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:08:18,511	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:08:21,784	[INFO]	441	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:08:21,785	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:21,786	[INFO]	442	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:08:21,786	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:22,684	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:08:22,685	[INFO]	444	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:08:22,686	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,28 ----
          int i = 0;
          int j = 0;
  
!         
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:22,687	[INFO]	445	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:08:22,687	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:22,688	[INFO]	446	SUCCESS	+13.0	
2020-12-10 08:08:22,688	[DEBUG]	
2020-12-10 08:08:23,584	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:08:26,864	[INFO]	448	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:08:26,864	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:08:27,779	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:08:27,780	[INFO]	450	SUCCESS	+13.0	
2020-12-10 08:08:27,780	[DEBUG]	
2020-12-10 08:08:28,722	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:08:29,636	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:08:30,529	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:08:31,247	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:08:32,124	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:08:35,431	[INFO]	456	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:08:35,432	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:08:35,433	[INFO]	457	SUCCESS	+13.0	
2020-12-10 08:08:35,433	[DEBUG]	
2020-12-10 08:08:36,310	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:08:36,312	[INFO]	459	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:08:36,313	[DEBUG]	
2020-12-10 08:08:37,217	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:08:37,219	[INFO]	461	SUCCESS	+13.0	
2020-12-10 08:08:37,220	[DEBUG]	
2020-12-10 08:08:38,123	[INFO]	462	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:08:39,041	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:08:39,776	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:08:40,637	[INFO]	465	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:08:41,566	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:08:42,434	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:08:43,343	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:08:44,221	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:08:47,465	[INFO]	470	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:08:47,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:08:48,372	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:08:48,373	[INFO]	472	SUCCESS	+13.0	
2020-12-10 08:08:48,373	[DEBUG]	
2020-12-10 08:08:51,593	[INFO]	473	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:08:51,594	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:08:54,865	[INFO]	474	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:08:54,866	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 42,47 ****
--- 34,40 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:08:58,089	[INFO]	475	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:08:58,090	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:08:58,091	[INFO]	476	SUCCESS	+13.0	
2020-12-10 08:08:58,091	[DEBUG]	
2020-12-10 08:09:01,342	[INFO]	477	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:09:01,344	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:09:02,233	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:09:03,136	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:09:03,137	[INFO]	480	SUCCESS	+13.0	
2020-12-10 08:09:03,137	[DEBUG]	
2020-12-10 08:09:03,841	[INFO]	481	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:09:04,731	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:09:08,044	[INFO]	483	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:09:08,045	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:09:08,046	[INFO]	484	SUCCESS	+13.0	
2020-12-10 08:09:08,047	[DEBUG]	
2020-12-10 08:09:08,048	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:09:11,348	[INFO]	486	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:09:11,349	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:09:12,218	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:09:15,517	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:09:15,520	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:09:15,523	[INFO]	489	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:09:15,524	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:09:18,723	[INFO]	490	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:09:18,724	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:09:18,725	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:09:18,725	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:09:19,661	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:09:19,663	[INFO]	493	SUCCESS	+13.0	
2020-12-10 08:09:19,663	[DEBUG]	
2020-12-10 08:09:22,936	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:09:22,937	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:09:22,938	[INFO]	495	SUCCESS	+13.0	
2020-12-10 08:09:22,938	[DEBUG]	
2020-12-10 08:09:26,169	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:09:26,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:09:26,172	[INFO]	497	SUCCESS	+13.0	
2020-12-10 08:09:26,172	[DEBUG]	
2020-12-10 08:09:26,861	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:09:27,765	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:09:28,695	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:09:28,695	[INFO]	==== END ====
2020-12-10 08:09:28,695	[INFO]	Reason: step budget
2020-12-10 08:09:28,696	[INFO]	
2020-12-10 08:09:28,696	[INFO]	========== EPOCH 16 ==========
2020-12-10 08:09:28,696	[INFO]	==== WARMUP ====
2020-12-10 08:09:31,981	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:09:31,982	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:09:35,196	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:09:35,196	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:09:38,427	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:09:38,427	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:09:41,648	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 08:09:41,648	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:09:41,648	[INFO]	==== START ====
2020-12-10 08:09:42,533	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:09:43,425	[INFO]	2	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:09:44,437	[INFO]	3	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:09:45,323	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:09:46,211	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:09:47,100	[INFO]	6	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:09:50,448	[INFO]	7	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:09:50,449	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:09:51,350	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:09:51,352	[INFO]	9	SUCCESS	+13.0	
2020-12-10 08:09:51,352	[DEBUG]	
2020-12-10 08:09:52,267	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:09:53,141	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:09:54,045	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:09:54,957	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:09:55,832	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:09:59,029	[INFO]	15	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:09:59,030	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:09:59,031	[INFO]	16	SUCCESS	+13.0	
2020-12-10 08:09:59,031	[DEBUG]	
2020-12-10 08:09:59,901	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:10:00,569	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:10:03,880	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:10:03,881	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:10:04,730	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:10:05,613	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:10:05,615	[INFO]	22	SUCCESS	+13.0	
2020-12-10 08:10:05,615	[DEBUG]	
2020-12-10 08:10:06,494	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:10:07,401	[INFO]	24	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:10:08,301	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:10:11,557	[INFO]	26	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:10:11,558	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:10:12,434	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:10:12,435	[INFO]	28	SUCCESS	+13.0	
2020-12-10 08:10:12,435	[DEBUG]	
2020-12-10 08:10:15,684	[INFO]	29	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:10:15,685	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:10:15,686	[INFO]	30	SUCCESS	+13.0	
2020-12-10 08:10:15,686	[DEBUG]	
2020-12-10 08:10:16,553	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:10:17,439	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:10:18,332	[INFO]	33	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:10:19,067	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:10:22,417	[INFO]	35	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:10:22,418	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:10:22,419	[INFO]	36	SUCCESS	+13.0	
2020-12-10 08:10:22,420	[DEBUG]	
2020-12-10 08:10:25,629	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:10:25,630	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:10:25,631	[INFO]	38	SUCCESS	+13.0	
2020-12-10 08:10:25,631	[DEBUG]	
2020-12-10 08:10:26,522	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:10:27,460	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:10:28,361	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:10:29,281	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:10:30,166	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:10:31,055	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:10:34,364	[INFO]	45	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:10:34,365	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:10:34,366	[INFO]	46	SUCCESS	+13.0	
2020-12-10 08:10:34,366	[DEBUG]	
2020-12-10 08:10:35,392	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:10:36,287	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:10:37,184	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:10:38,086	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:10:39,007	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:10:39,928	[INFO]	52	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:10:40,801	[INFO]	53	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:10:41,691	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:10:42,608	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:10:43,499	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:10:44,410	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:10:44,413	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:10:47,707	[INFO]	59	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:10:47,708	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:10:48,592	[INFO]	60	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:10:49,477	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:10:50,369	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:10:51,304	[INFO]	63	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:10:51,305	[INFO]	64	SUCCESS	+13.0	
2020-12-10 08:10:51,306	[DEBUG]	
2020-12-10 08:10:52,215	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:10:55,513	[INFO]	66	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:10:55,514	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:10:58,748	[INFO]	67	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:10:58,749	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 36,42 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:10:58,750	[INFO]	68	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:10:58,751	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 36,42 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:10:59,587	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:11:02,900	[INFO]	70	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:11:02,901	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:11:03,736	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:11:06,939	[INFO]	72	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:11:06,940	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:11:06,942	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:11:06,942	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:11:07,825	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:11:08,694	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:11:08,697	[INFO]	76	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:11:08,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:11:08,700	[INFO]	77	SUCCESS	+13.0	
2020-12-10 08:11:08,700	[DEBUG]	
2020-12-10 08:11:09,609	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:11:10,495	[INFO]	79	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:11:11,370	[INFO]	80	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:11:14,751	[INFO]	81	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:11:14,752	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:11:18,040	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:11:18,041	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+             }
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 43,48 ****
--- 47,53 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:11:18,042	[INFO]	83	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:11:18,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:11:18,043	[INFO]	84	SUCCESS	+13.0	
2020-12-10 08:11:18,043	[DEBUG]	
2020-12-10 08:11:18,728	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:11:19,633	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:11:20,523	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:11:21,409	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:11:22,323	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:11:23,226	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:11:24,103	[INFO]	91	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:11:24,974	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:11:28,271	[INFO]	93	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:11:28,272	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:11:31,520	[INFO]	94	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:11:31,521	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 23,34 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:11:31,522	[INFO]	95	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:11:31,522	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:11:34,748	[INFO]	96	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:11:34,749	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:11:34,750	[INFO]	97	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:11:34,751	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:11:34,752	[INFO]	98	SUCCESS	+13.0	
2020-12-10 08:11:34,752	[DEBUG]	
2020-12-10 08:11:35,642	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:11:36,528	[INFO]	100	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:11:37,463	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:11:38,377	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:11:39,241	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:11:40,147	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:11:41,029	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:11:41,908	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:11:42,786	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:11:43,694	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:11:44,422	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:11:45,314	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:11:48,568	[INFO]	111	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:11:48,569	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:11:48,570	[INFO]	112	SUCCESS	+13.0	
2020-12-10 08:11:48,570	[DEBUG]	
2020-12-10 08:11:49,443	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:11:52,751	[INFO]	114	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:11:52,752	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(right.get(j));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:11:53,665	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:11:53,668	[INFO]	116	SUCCESS	+13.0	
2020-12-10 08:11:53,669	[DEBUG]	
2020-12-10 08:11:54,375	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:11:55,262	[INFO]	118	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:11:56,153	[INFO]	119	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:11:57,011	[INFO]	120	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:12:00,268	[INFO]	121	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:12:00,270	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:00,272	[INFO]	122	SUCCESS	+13.0	
2020-12-10 08:12:00,272	[DEBUG]	
2020-12-10 08:12:03,540	[INFO]	123	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:12:03,541	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:03,542	[INFO]	124	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:12:03,543	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:04,414	[INFO]	125	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:12:04,415	[INFO]	126	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:12:04,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:04,416	[INFO]	127	SUCCESS	+13.0	
2020-12-10 08:12:04,417	[DEBUG]	
2020-12-10 08:12:05,330	[INFO]	128	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:12:08,626	[INFO]	129	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:12:08,627	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:11,834	[INFO]	130	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:12:11,835	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:12:12,532	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:12:15,841	[INFO]	132	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:12:15,842	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:12:15,843	[INFO]	133	SUCCESS	+13.0	
2020-12-10 08:12:15,844	[DEBUG]	
2020-12-10 08:12:16,737	[INFO]	134	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:12:20,085	[INFO]	135	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:12:20,086	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:12:20,087	[INFO]	136	SUCCESS	+13.0	
2020-12-10 08:12:20,087	[DEBUG]	
2020-12-10 08:12:20,946	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:12:21,811	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:12:22,801	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:12:26,088	[INFO]	140	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:12:26,089	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:26,089	[INFO]	141	SUCCESS	+13.0	
2020-12-10 08:12:26,090	[DEBUG]	
2020-12-10 08:12:26,938	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:12:27,806	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:12:31,141	[INFO]	144	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:12:31,142	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:12:32,003	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:12:32,004	[INFO]	146	SUCCESS	+13.0	
2020-12-10 08:12:32,005	[DEBUG]	
2020-12-10 08:12:32,898	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:12:33,793	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:12:34,683	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:12:37,922	[INFO]	150	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:12:37,924	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:12:38,796	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:12:42,077	[INFO]	152	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:12:42,078	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:12:45,308	[INFO]	153	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:12:45,309	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 41,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:12:48,655	[INFO]	154	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:12:48,656	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:12:49,544	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:12:50,444	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:12:51,268	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:12:54,609	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:12:54,610	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:12:55,310	[INFO]	159	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:12:55,311	[INFO]	160	SUCCESS	+13.0	
2020-12-10 08:12:55,312	[DEBUG]	
2020-12-10 08:12:58,558	[INFO]	161	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:12:58,559	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:12:59,435	[INFO]	162	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:13:00,353	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:13:01,246	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:13:02,129	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:13:02,130	[INFO]	166	SUCCESS	+13.0	
2020-12-10 08:13:02,131	[DEBUG]	
2020-12-10 08:13:03,027	[INFO]	167	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:13:03,912	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:13:04,792	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:13:05,704	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:13:05,705	[INFO]	171	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:13:05,705	[DEBUG]	
2020-12-10 08:13:06,417	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:13:07,313	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:13:08,179	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:13:08,181	[INFO]	175	SUCCESS	+13.0	
2020-12-10 08:13:08,181	[DEBUG]	
2020-12-10 08:13:09,074	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:13:09,782	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:13:10,671	[INFO]	178	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:13:13,838	[INFO]	179	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:13:13,839	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 08:13:13,840	[INFO]	180	SUCCESS	+13.0	
2020-12-10 08:13:13,840	[DEBUG]	
2020-12-10 08:13:14,738	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:13:15,633	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:13:18,918	[INFO]	183	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:13:18,919	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 08:13:18,920	[INFO]	184	SUCCESS	+13.0	
2020-12-10 08:13:18,920	[DEBUG]	
2020-12-10 08:13:18,921	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:13:18,921	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:13:22,155	[INFO]	186	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:13:22,156	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:13:25,509	[INFO]	187	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:13:25,510	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:13:25,511	[INFO]	188	SUCCESS	+13.0	
2020-12-10 08:13:25,511	[DEBUG]	
2020-12-10 08:13:28,835	[INFO]	189	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:13:28,836	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 08:13:29,737	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:13:30,675	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:13:30,676	[INFO]	192	SUCCESS	+13.0	
2020-12-10 08:13:30,676	[DEBUG]	
2020-12-10 08:13:31,576	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:13:32,473	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:13:35,769	[INFO]	195	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:13:35,770	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 08:13:35,771	[INFO]	196	SUCCESS	+13.0	
2020-12-10 08:13:35,771	[DEBUG]	
2020-12-10 08:13:36,647	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:13:37,588	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:13:38,460	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:13:39,363	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:13:42,631	[INFO]	201	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:13:42,632	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:13:42,633	[INFO]	202	SUCCESS	+13.0	
2020-12-10 08:13:42,633	[DEBUG]	
2020-12-10 08:13:43,513	[INFO]	203	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:13:43,514	[INFO]	204	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:13:43,514	[DEBUG]	
2020-12-10 08:13:46,867	[INFO]	205	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:13:46,869	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 08:13:46,871	[INFO]	206	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:13:46,872	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
                  result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 08:13:47,726	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:13:47,727	[INFO]	208	SUCCESS	+13.0	
2020-12-10 08:13:47,727	[DEBUG]	
2020-12-10 08:13:51,003	[INFO]	209	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:13:51,004	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:13:51,005	[INFO]	210	SUCCESS	+13.0	
2020-12-10 08:13:51,005	[DEBUG]	
2020-12-10 08:13:51,872	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:13:52,814	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:13:53,556	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:13:54,444	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:13:55,329	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:13:58,549	[INFO]	216	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:13:58,550	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             right = mergesort(right);
  
              return merge(left, right);
          }

2020-12-10 08:13:58,551	[INFO]	217	SUCCESS	+13.0	
2020-12-10 08:13:58,551	[DEBUG]	
2020-12-10 08:13:59,262	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:13:59,264	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:14:00,138	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:14:03,385	[INFO]	221	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:14:03,386	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:14:04,259	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:14:07,457	[INFO]	223	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='})
2020-12-10 08:14:07,458	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,32 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:14:08,146	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:14:09,036	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:14:09,932	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:14:13,251	[INFO]	227	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='})
2020-12-10 08:14:13,252	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:14:14,128	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:14:17,485	[INFO]	229	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:14:17,486	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:14:17,487	[INFO]	230	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='})
2020-12-10 08:14:17,487	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:14:20,745	[INFO]	231	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:14:20,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 20,28 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:14:23,932	[INFO]	232	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:14:23,934	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 20,28 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:23,935	[INFO]	233	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:14:23,936	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 20,28 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:24,821	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:14:25,729	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:14:26,628	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:14:29,983	[INFO]	237	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '=='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:14:29,984	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j == right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:33,309	[INFO]	238	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:14:33,310	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:34,161	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:14:37,485	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:14:37,486	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 51,57 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:37,487	[INFO]	241	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:14:37,488	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 51,57 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:40,710	[INFO]	242	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:14:40,711	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,44 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
!             }
!         }
!         result.add(left.get(i));
          return result;
      }
  
***************
*** 43,48 ****
--- 51,57 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:14:43,958	[INFO]	243	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:14:43,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,44 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
!             }
!         }
!         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:14:47,207	[INFO]	244	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:14:47,208	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:14:48,084	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:14:51,438	[INFO]	246	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:14:51,440	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 27,33 ****
--- 36,50 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:14:54,773	[INFO]	247	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:14:54,775	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:14:55,785	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:14:59,066	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:14:59,067	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
- 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
--- 20,25 ----
***************
*** 30,35 ****
--- 29,36 ----
                  j++;
              }
          }
+ 
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:15:02,410	[INFO]	250	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:15:02,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:15:03,276	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:15:03,278	[INFO]	252	SUCCESS	+13.0	
2020-12-10 08:15:03,278	[DEBUG]	
2020-12-10 08:15:04,174	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:15:04,873	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:15:05,791	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:15:06,669	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:15:07,585	[INFO]	257	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:15:11,042	[INFO]	258	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:15:11,043	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:15:11,805	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:15:11,806	[INFO]	260	SUCCESS	+13.0	
2020-12-10 08:15:11,806	[DEBUG]	
2020-12-10 08:15:15,154	[INFO]	261	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:15:15,155	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:15:18,552	[INFO]	262	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:15:18,553	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,44 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
+             }
+         }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:15:19,566	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:15:20,465	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:15:23,731	[INFO]	265	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:15:23,732	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:15:23,732	[INFO]	266	SUCCESS	+13.0	
2020-12-10 08:15:23,733	[DEBUG]	
2020-12-10 08:15:24,611	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:15:27,783	[INFO]	268	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:15:27,784	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 08:15:27,785	[INFO]	269	SUCCESS	+13.0	
2020-12-10 08:15:27,786	[DEBUG]	
2020-12-10 08:15:31,099	[INFO]	270	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:15:31,100	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:15:31,960	[INFO]	271	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:15:31,961	[INFO]	272	SUCCESS	+13.0	
2020-12-10 08:15:31,961	[DEBUG]	
2020-12-10 08:15:32,687	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:15:36,337	[INFO]	274	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:15:36,339	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 08:15:36,340	[INFO]	275	SUCCESS	+13.0	
2020-12-10 08:15:36,340	[DEBUG]	
2020-12-10 08:15:37,619	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:15:38,756	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:15:39,865	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:15:41,067	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:15:42,206	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:15:43,242	[INFO]	281	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:15:44,219	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:15:45,143	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:15:46,034	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:15:49,304	[INFO]	285	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:15:49,306	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:15:50,169	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:15:50,170	[INFO]	287	SUCCESS	+13.0	
2020-12-10 08:15:50,170	[DEBUG]	
2020-12-10 08:15:51,088	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:15:51,990	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:15:52,878	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:15:53,813	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:15:54,689	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:15:55,568	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:15:56,475	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:15:59,958	[INFO]	295	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:15:59,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:15:59,960	[INFO]	296	SUCCESS	+13.0	
2020-12-10 08:15:59,960	[DEBUG]	
2020-12-10 08:16:00,795	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:16:01,675	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:16:04,945	[INFO]	299	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:16:04,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:16:04,947	[INFO]	300	SUCCESS	+13.0	
2020-12-10 08:16:04,947	[DEBUG]	
2020-12-10 08:16:04,948	[INFO]	301	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:16:04,948	[DEBUG]	
2020-12-10 08:16:04,949	[INFO]	302	SUCCESS	+13.0	
2020-12-10 08:16:04,949	[DEBUG]	
2020-12-10 08:16:08,171	[INFO]	303	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:16:08,172	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:16:09,033	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:16:09,751	[INFO]	305	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:16:09,754	[INFO]	306	SUCCESS	+13.0	
2020-12-10 08:16:09,755	[DEBUG]	
2020-12-10 08:16:10,618	[INFO]	307	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:16:11,510	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:16:14,807	[INFO]	309	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:16:14,808	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:16:14,809	[INFO]	310	SUCCESS	+13.0	
2020-12-10 08:16:14,809	[DEBUG]	
2020-12-10 08:16:15,683	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:16:16,584	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:16:17,478	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:16:18,362	[INFO]	314	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:16:19,282	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:16:20,192	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:16:23,424	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:16:23,425	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:16:24,323	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:16:25,204	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:16:25,206	[INFO]	320	SUCCESS	+13.0	
2020-12-10 08:16:25,206	[DEBUG]	
2020-12-10 08:16:28,528	[INFO]	321	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:16:28,529	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:16:28,529	[INFO]	322	SUCCESS	+13.0	
2020-12-10 08:16:28,530	[DEBUG]	
2020-12-10 08:16:29,415	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:16:32,724	[INFO]	324	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 08:16:32,724	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:16:32,725	[INFO]	325	SUCCESS	+13.0	
2020-12-10 08:16:32,725	[DEBUG]	
2020-12-10 08:16:33,601	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:16:34,481	[INFO]	327	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:16:35,369	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:16:35,371	[INFO]	329	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:16:35,371	[DEBUG]	
2020-12-10 08:16:36,289	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:16:36,290	[INFO]	331	SUCCESS	+13.0	
2020-12-10 08:16:36,291	[DEBUG]	
2020-12-10 08:16:39,548	[INFO]	332	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:16:39,549	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:16:40,250	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:16:40,251	[INFO]	334	SUCCESS	+13.0	
2020-12-10 08:16:40,251	[DEBUG]	
2020-12-10 08:16:41,135	[INFO]	335	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:16:44,413	[INFO]	336	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:16:44,414	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:16:45,294	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:16:45,295	[INFO]	338	SUCCESS	+13.0	
2020-12-10 08:16:45,295	[DEBUG]	
2020-12-10 08:16:46,160	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:16:49,417	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:16:49,418	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 08:16:50,285	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:16:51,189	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:16:51,190	[INFO]	343	SUCCESS	+13.0	
2020-12-10 08:16:51,191	[DEBUG]	
2020-12-10 08:16:52,099	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:16:52,783	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:16:53,680	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:16:53,682	[INFO]	347	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '=='})
2020-12-10 08:16:53,682	[DEBUG]	
2020-12-10 08:16:53,683	[INFO]	348	SUCCESS	+13.0	
2020-12-10 08:16:53,683	[DEBUG]	
2020-12-10 08:16:56,960	[INFO]	349	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:16:56,961	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:16:57,827	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:16:57,828	[INFO]	351	SUCCESS	+13.0	
2020-12-10 08:16:57,829	[DEBUG]	
2020-12-10 08:16:58,726	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:16:59,457	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:17:00,325	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:17:01,244	[INFO]	355	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:17:01,957	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:17:02,839	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:17:03,712	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:17:04,599	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:17:05,482	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:17:06,355	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:17:07,079	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:17:10,348	[INFO]	363	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:17:10,349	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         i++;
          return result;
      }
  

2020-12-10 08:17:10,350	[INFO]	364	SUCCESS	+13.0	
2020-12-10 08:17:10,350	[DEBUG]	
2020-12-10 08:17:11,212	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:17:11,214	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:17:12,133	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:17:15,280	[INFO]	368	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:17:15,281	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 08:17:15,282	[INFO]	369	SUCCESS	+13.0	
2020-12-10 08:17:15,282	[DEBUG]	
2020-12-10 08:17:16,145	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:17:17,055	[INFO]	371	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:17:17,951	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:17:18,829	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:17:19,731	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:17:20,618	[INFO]	375	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:17:21,524	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:17:22,403	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:17:23,296	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:17:24,205	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:17:25,086	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:17:25,980	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:17:29,247	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:17:29,248	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:17:32,404	[INFO]	383	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:17:32,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:17:32,409	[INFO]	384	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:17:32,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:17:35,642	[INFO]	385	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:17:35,643	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:17:38,926	[INFO]	386	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:17:38,927	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:17:39,773	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:17:39,775	[INFO]	388	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 08:17:39,775	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:17:39,776	[INFO]	389	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'})
2020-12-10 08:17:39,776	[DEBUG]	
2020-12-10 08:17:40,669	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:17:40,670	[INFO]	391	SUCCESS	+13.0	
2020-12-10 08:17:40,670	[DEBUG]	
2020-12-10 08:17:41,681	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:17:42,572	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:17:45,836	[INFO]	394	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:17:45,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:17:45,838	[INFO]	395	SUCCESS	+13.0	
2020-12-10 08:17:45,838	[DEBUG]	
2020-12-10 08:17:49,114	[INFO]	396	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:17:49,115	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:17:49,116	[INFO]	397	SUCCESS	+13.0	
2020-12-10 08:17:49,116	[DEBUG]	
2020-12-10 08:17:49,998	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:17:50,931	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:17:51,633	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:17:52,503	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:17:56,036	[INFO]	402	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:17:56,037	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:17:56,038	[INFO]	403	SUCCESS	+13.0	
2020-12-10 08:17:56,039	[DEBUG]	
2020-12-10 08:17:57,204	[INFO]	404	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:18:01,526	[INFO]	405	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:18:01,527	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:18:02,527	[INFO]	406	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:18:03,403	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:18:04,313	[INFO]	408	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:18:05,196	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:18:08,438	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:18:08,439	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:18:09,326	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:18:09,327	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:18:09,328	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:18:09,329	[INFO]	413	SUCCESS	+13.0	
2020-12-10 08:18:09,329	[DEBUG]	
2020-12-10 08:18:10,258	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:18:11,176	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:18:12,094	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:18:12,969	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:18:13,852	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:18:14,726	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:18:17,950	[INFO]	420	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:18:17,951	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:18:21,233	[INFO]	421	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:18:21,234	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,34 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 45,51 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:18:22,143	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:18:23,019	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:18:26,457	[INFO]	424	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:18:26,458	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:18:26,459	[INFO]	425	SUCCESS	+13.0	
2020-12-10 08:18:26,459	[DEBUG]	
2020-12-10 08:18:27,339	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:18:30,611	[INFO]	427	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:18:30,611	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:18:30,612	[INFO]	428	SUCCESS	+13.0	
2020-12-10 08:18:30,612	[DEBUG]	
2020-12-10 08:18:31,455	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:18:34,794	[INFO]	430	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:18:34,795	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:18:34,796	[INFO]	431	SUCCESS	+13.0	
2020-12-10 08:18:34,796	[DEBUG]	
2020-12-10 08:18:35,672	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:18:36,550	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:18:37,456	[INFO]	434	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:18:38,387	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:18:39,264	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:18:40,170	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:18:41,073	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:18:41,933	[INFO]	439	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:18:42,846	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:18:43,738	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:18:44,631	[INFO]	442	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:18:44,632	[INFO]	443	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:18:44,632	[DEBUG]	
2020-12-10 08:18:45,498	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:18:45,500	[INFO]	445	SUCCESS	+13.0	
2020-12-10 08:18:45,500	[DEBUG]	
2020-12-10 08:18:46,368	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:18:47,253	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:18:47,978	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:18:48,878	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:18:49,785	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:18:50,673	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:18:51,591	[INFO]	452	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:18:52,484	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:18:53,390	[INFO]	454	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:18:54,278	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:18:57,609	[INFO]	456	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:18:57,610	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:18:57,611	[INFO]	457	SUCCESS	+13.0	
2020-12-10 08:18:57,612	[DEBUG]	
2020-12-10 08:19:00,853	[INFO]	458	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:19:00,854	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:19:00,854	[INFO]	459	SUCCESS	+13.0	
2020-12-10 08:19:00,855	[DEBUG]	
2020-12-10 08:19:01,738	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:19:02,460	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:19:05,729	[INFO]	462	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:19:05,730	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:19:06,611	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:19:06,612	[INFO]	464	SUCCESS	+13.0	
2020-12-10 08:19:06,612	[DEBUG]	
2020-12-10 08:19:09,964	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:19:09,965	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 i++;
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:19:09,966	[INFO]	466	SUCCESS	+13.0	
2020-12-10 08:19:09,967	[DEBUG]	
2020-12-10 08:19:10,829	[INFO]	467	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:19:10,831	[INFO]	468	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:19:10,831	[DEBUG]	
2020-12-10 08:19:10,832	[INFO]	469	SUCCESS	+13.0	
2020-12-10 08:19:10,833	[DEBUG]	
2020-12-10 08:19:11,690	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:19:12,554	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:19:15,820	[INFO]	472	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:19:15,820	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:19:16,705	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:19:17,579	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:19:17,581	[INFO]	475	SUCCESS	+13.0	
2020-12-10 08:19:17,581	[DEBUG]	
2020-12-10 08:19:20,860	[INFO]	476	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:19:20,861	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:19:24,277	[INFO]	477	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:19:24,278	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,37 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 08:19:25,204	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:19:26,102	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:19:26,105	[INFO]	480	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:19:26,107	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,37 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 24,37 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 08:19:27,008	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:19:27,011	[INFO]	482	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:19:27,012	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:19:27,013	[INFO]	483	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:19:27,014	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:19:27,016	[INFO]	484	SUCCESS	+13.0	
2020-12-10 08:19:27,016	[DEBUG]	
2020-12-10 08:19:27,886	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:19:28,817	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:19:29,722	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:19:30,602	[INFO]	488	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:19:31,510	[INFO]	489	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:19:32,422	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:19:33,315	[INFO]	491	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:19:36,597	[INFO]	492	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:19:36,598	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 08:19:39,870	[INFO]	493	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:19:39,871	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 41,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:19:40,758	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:19:41,805	[INFO]	495	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:19:41,806	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:19:41,807	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  

2020-12-10 08:19:41,807	[INFO]	497	SUCCESS	+13.0	
2020-12-10 08:19:41,808	[DEBUG]	
2020-12-10 08:19:42,714	[INFO]	498	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:19:42,716	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:19:43,606	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:19:43,607	[INFO]	==== END ====
2020-12-10 08:19:43,607	[INFO]	Reason: step budget
2020-12-10 08:19:43,608	[INFO]	
2020-12-10 08:19:43,608	[INFO]	========== EPOCH 17 ==========
2020-12-10 08:19:43,608	[INFO]	==== WARMUP ====
2020-12-10 08:19:46,883	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:19:46,883	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:19:50,143	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:19:50,143	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:19:53,412	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:19:53,412	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:19:56,631	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 08:19:56,631	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:19:56,631	[INFO]	==== START ====
2020-12-10 08:19:57,519	[INFO]	1	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:20:00,862	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:20:00,863	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:20:00,864	[INFO]	3	SUCCESS	+13.0	
2020-12-10 08:20:00,864	[DEBUG]	
2020-12-10 08:20:04,192	[INFO]	4	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:20:04,193	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:20:05,040	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:20:05,042	[INFO]	6	SUCCESS	+13.0	
2020-12-10 08:20:05,042	[DEBUG]	
2020-12-10 08:20:05,995	[INFO]	7	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:20:06,891	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:20:07,793	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:20:08,708	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:20:09,601	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:20:10,514	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:20:11,392	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:20:12,291	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:20:13,198	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:20:14,100	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:20:17,406	[INFO]	17	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:20:17,407	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:20:18,272	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:20:19,137	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:20:19,138	[INFO]	20	SUCCESS	+13.0	
2020-12-10 08:20:19,139	[DEBUG]	
2020-12-10 08:20:22,436	[INFO]	21	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:20:22,437	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:20:22,438	[INFO]	22	SUCCESS	+13.0	
2020-12-10 08:20:22,439	[DEBUG]	
2020-12-10 08:20:25,669	[INFO]	23	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:20:25,670	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:20:25,671	[INFO]	24	SUCCESS	+13.0	
2020-12-10 08:20:25,671	[DEBUG]	
2020-12-10 08:20:26,539	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:20:29,797	[INFO]	26	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:20:29,798	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         
          return result;
      }
  

2020-12-10 08:20:30,651	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:20:31,514	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:20:32,365	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:20:32,367	[INFO]	30	SUCCESS	+13.0	
2020-12-10 08:20:32,367	[DEBUG]	
2020-12-10 08:20:33,237	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:20:36,736	[INFO]	32	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:20:36,737	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,45 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:20:36,738	[INFO]	33	SUCCESS	+13.0	
2020-12-10 08:20:36,738	[DEBUG]	
2020-12-10 08:20:40,282	[INFO]	34	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:20:40,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:20:40,286	[INFO]	35	SUCCESS	+13.0	
2020-12-10 08:20:40,287	[DEBUG]	
2020-12-10 08:20:41,183	[INFO]	36	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:20:44,532	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:20:44,533	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:20:45,376	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:20:45,378	[INFO]	39	SUCCESS	+13.0	
2020-12-10 08:20:45,378	[DEBUG]	
2020-12-10 08:20:46,273	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:20:49,549	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:20:49,550	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:20:50,243	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:20:51,166	[INFO]	43	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:20:51,872	[INFO]	44	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:20:52,767	[INFO]	45	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:20:52,768	[INFO]	46	SUCCESS	+13.0	
2020-12-10 08:20:52,768	[DEBUG]	
2020-12-10 08:20:53,691	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:20:54,559	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:20:55,447	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:20:56,332	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:20:57,222	[INFO]	51	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:20:58,145	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:20:59,052	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:21:02,436	[INFO]	54	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:21:02,437	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:21:05,676	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:21:05,677	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  
***************
*** 42,47 ****
--- 51,57 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:21:08,943	[INFO]	56	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:21:08,944	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 08:21:08,945	[INFO]	57	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:21:08,946	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 08:21:12,122	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:21:12,125	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 52,58 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:21:15,265	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:21:15,266	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:21:18,432	[INFO]	60	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:21:18,433	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:21:19,325	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:21:19,327	[INFO]	62	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:21:19,327	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int i = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:21:19,328	[INFO]	63	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:21:19,328	[DEBUG]	
2020-12-10 08:21:20,220	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:21:20,221	[INFO]	65	SUCCESS	+13.0	
2020-12-10 08:21:20,222	[DEBUG]	
2020-12-10 08:21:21,138	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:21:21,142	[INFO]	67	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:21:21,143	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 08:21:22,068	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:21:22,071	[INFO]	69	SUCCESS	+13.0	
2020-12-10 08:21:22,072	[DEBUG]	
2020-12-10 08:21:25,352	[INFO]	70	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:21:25,353	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:21:25,354	[INFO]	71	SUCCESS	+13.0	
2020-12-10 08:21:25,354	[DEBUG]	
2020-12-10 08:21:26,205	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:21:27,083	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:21:27,813	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:21:31,101	[INFO]	75	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:21:31,103	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:21:31,822	[INFO]	76	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:21:35,109	[INFO]	77	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:21:35,110	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,30 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 23,31 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:21:38,311	[INFO]	78	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:21:38,312	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:21:38,313	[INFO]	79	SUCCESS	+13.0	
2020-12-10 08:21:38,313	[DEBUG]	
2020-12-10 08:21:41,597	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:21:41,598	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:21:44,813	[INFO]	81	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:21:44,815	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:21:44,816	[INFO]	82	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:21:44,816	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:21:45,694	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:21:48,940	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:21:48,941	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:21:48,942	[INFO]	85	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:21:48,943	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:21:49,835	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:21:50,548	[INFO]	87	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:21:50,550	[INFO]	88	SUCCESS	+13.0	
2020-12-10 08:21:50,550	[DEBUG]	
2020-12-10 08:21:53,832	[INFO]	89	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 08:21:53,834	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:21:54,710	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:21:54,712	[INFO]	91	SUCCESS	+13.0	
2020-12-10 08:21:54,712	[DEBUG]	
2020-12-10 08:21:58,031	[INFO]	92	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '<='})
2020-12-10 08:21:58,032	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j <= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:21:58,033	[INFO]	93	SUCCESS	+13.0	
2020-12-10 08:21:58,033	[DEBUG]	
2020-12-10 08:21:58,900	[INFO]	94	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:21:59,783	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:22:03,123	[INFO]	96	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:22:03,124	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 08:22:03,125	[INFO]	97	SUCCESS	+13.0	
2020-12-10 08:22:03,126	[DEBUG]	
2020-12-10 08:22:06,335	[INFO]	98	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:22:06,336	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:22:07,177	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:22:08,042	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:22:08,043	[INFO]	101	SUCCESS	+13.0	
2020-12-10 08:22:08,044	[DEBUG]	
2020-12-10 08:22:08,044	[INFO]	102	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:22:08,045	[DEBUG]	
2020-12-10 08:22:08,045	[INFO]	103	SUCCESS	+13.0	
2020-12-10 08:22:08,046	[DEBUG]	
2020-12-10 08:22:09,031	[INFO]	104	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:22:12,303	[INFO]	105	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:22:12,304	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:22:15,575	[INFO]	106	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:22:15,576	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:15,578	[INFO]	107	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:22:15,578	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:22:16,437	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:22:16,438	[INFO]	109	SUCCESS	+13.0	
2020-12-10 08:22:16,438	[DEBUG]	
2020-12-10 08:22:17,362	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:22:18,247	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:22:18,248	[INFO]	112	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:22:18,248	[DEBUG]	
2020-12-10 08:22:18,249	[INFO]	113	SUCCESS	+13.0	
2020-12-10 08:22:18,249	[DEBUG]	
2020-12-10 08:22:19,139	[INFO]	114	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:22:20,050	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:22:20,937	[INFO]	116	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:22:24,199	[INFO]	117	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'})
2020-12-10 08:22:24,199	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) > right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:22:25,070	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:22:25,071	[INFO]	119	SUCCESS	+13.0	
2020-12-10 08:22:25,071	[DEBUG]	
2020-12-10 08:22:25,953	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:22:26,832	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:22:27,716	[INFO]	122	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:22:28,654	[INFO]	123	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:22:31,961	[INFO]	124	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:22:31,962	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:35,370	[INFO]	125	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:22:35,371	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 45,51 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:36,208	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:22:36,212	[INFO]	127	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:22:36,214	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 45,51 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:37,094	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:22:37,952	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:22:37,954	[INFO]	130	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:22:37,955	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 45,51 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:37,956	[INFO]	131	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:22:37,957	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,31 ----
          int i = 0;
          int j = 0;
  
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 45,51 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:41,349	[INFO]	132	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:22:41,350	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,31 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 46,52 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:41,351	[INFO]	133	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:22:41,352	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,31 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 40,46 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
--- 46,52 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
!             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:22:42,190	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:22:43,070	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:22:46,307	[INFO]	136	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:22:46,308	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,31 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(right.get(j));
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:22:49,588	[INFO]	137	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:22:49,590	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:22:49,590	[INFO]	138	SUCCESS	+13.0	
2020-12-10 08:22:49,591	[DEBUG]	
2020-12-10 08:22:50,473	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:22:51,381	[INFO]	140	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:22:52,265	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:22:53,154	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:22:56,460	[INFO]	143	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:22:56,461	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:22:56,462	[INFO]	144	SUCCESS	+13.0	
2020-12-10 08:22:56,462	[DEBUG]	
2020-12-10 08:22:59,685	[INFO]	145	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:22:59,686	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:22:59,686	[INFO]	146	SUCCESS	+13.0	
2020-12-10 08:22:59,687	[DEBUG]	
2020-12-10 08:23:00,567	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:23:01,477	[INFO]	148	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:23:02,362	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:23:03,238	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:23:04,120	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:23:07,374	[INFO]	152	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:23:07,376	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:23:07,377	[INFO]	153	SUCCESS	+13.0	
2020-12-10 08:23:07,377	[DEBUG]	
2020-12-10 08:23:10,626	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:23:10,628	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:23:10,630	[INFO]	155	SUCCESS	+13.0	
2020-12-10 08:23:10,631	[DEBUG]	
2020-12-10 08:23:11,492	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:23:12,395	[INFO]	157	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:23:13,282	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:23:14,164	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:23:15,095	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:23:18,344	[INFO]	161	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:23:18,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:23:18,345	[INFO]	162	SUCCESS	+13.0	
2020-12-10 08:23:18,346	[DEBUG]	
2020-12-10 08:23:19,233	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:23:20,119	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:23:23,419	[INFO]	165	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:23:23,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:23:24,296	[INFO]	166	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:23:25,169	[INFO]	167	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:23:25,170	[INFO]	168	SUCCESS	+13.0	
2020-12-10 08:23:25,171	[DEBUG]	
2020-12-10 08:23:26,064	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:23:29,366	[INFO]	170	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:23:29,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
-             } else {
-                 result.add(right.get(j));
-                 j++;
              }
-         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,30 ----
          int i = 0;
          int j = 0;
  
!         if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:23:29,368	[INFO]	171	SUCCESS	+13.0	
2020-12-10 08:23:29,368	[DEBUG]	
2020-12-10 08:23:30,260	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:23:31,134	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:23:32,030	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:23:32,942	[INFO]	175	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:23:36,331	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:23:36,332	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:23:36,333	[INFO]	177	SUCCESS	+13.0	
2020-12-10 08:23:36,333	[DEBUG]	
2020-12-10 08:23:37,193	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:23:38,086	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:23:38,975	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:23:39,880	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:23:40,769	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:23:41,670	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:23:42,550	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:23:45,928	[INFO]	185	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:23:45,929	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 08:23:45,929	[INFO]	186	SUCCESS	+13.0	
2020-12-10 08:23:45,930	[DEBUG]	
2020-12-10 08:23:46,795	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:23:47,668	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:23:48,560	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:23:49,469	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:23:50,356	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:23:51,286	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:23:52,162	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:23:53,044	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:23:53,933	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:23:54,849	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:23:55,728	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:23:56,632	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:23:57,505	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:23:58,395	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:24:01,600	[INFO]	201	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:24:01,601	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:24:02,301	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:24:02,302	[INFO]	203	SUCCESS	+13.0	
2020-12-10 08:24:02,302	[DEBUG]	
2020-12-10 08:24:03,195	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:24:06,434	[INFO]	205	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '>='})
2020-12-10 08:24:06,435	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) >= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:24:06,435	[INFO]	206	SUCCESS	+13.0	
2020-12-10 08:24:06,436	[DEBUG]	
2020-12-10 08:24:07,296	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:24:10,513	[INFO]	208	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:24:10,514	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:24:10,515	[INFO]	209	SUCCESS	+13.0	
2020-12-10 08:24:10,516	[DEBUG]	
2020-12-10 08:24:11,397	[INFO]	210	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:24:12,288	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:24:13,194	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:24:14,084	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:24:14,982	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:24:15,873	[INFO]	215	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:24:16,577	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:24:16,578	[INFO]	217	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:24:16,579	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:24:19,835	[INFO]	218	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:24:19,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,31 ****
--- 25,44 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
              } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+             } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:24:20,560	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:24:20,563	[INFO]	220	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:24:20,564	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:24:20,565	[INFO]	221	SUCCESS	+13.0	
2020-12-10 08:24:20,566	[DEBUG]	
2020-12-10 08:24:21,428	[INFO]	222	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:24:22,297	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:24:25,600	[INFO]	224	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:24:25,601	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:24:26,453	[INFO]	225	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:24:27,339	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:24:28,214	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:24:29,119	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:24:32,438	[INFO]	229	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:24:32,439	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         right = mergesort(right);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 35,40 ****
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         ArrayList<Integer> result = new ArrayList<Integer>(100);
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:24:33,349	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:24:36,779	[INFO]	231	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:24:36,780	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         ArrayList<Integer> result = new ArrayList<Integer>(100);
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:24:36,781	[INFO]	232	SUCCESS	+13.0	
2020-12-10 08:24:36,781	[DEBUG]	
2020-12-10 08:24:37,646	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:24:38,547	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:24:41,786	[INFO]	235	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:24:41,789	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:24:42,691	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:24:42,694	[INFO]	237	SUCCESS	+13.0	
2020-12-10 08:24:42,695	[DEBUG]	
2020-12-10 08:24:45,920	[INFO]	238	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:24:45,921	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         left = mergesort(left);
          return result;
      }
  

2020-12-10 08:24:46,797	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:24:47,682	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:24:48,568	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:24:48,569	[INFO]	242	SUCCESS	+13.0	
2020-12-10 08:24:48,570	[DEBUG]	
2020-12-10 08:24:49,484	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:24:50,222	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:24:51,136	[INFO]	245	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:24:52,036	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:24:52,926	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:24:53,860	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:24:54,784	[INFO]	249	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:24:55,657	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:24:58,876	[INFO]	251	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:24:58,877	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:24:58,877	[INFO]	252	SUCCESS	+13.0	
2020-12-10 08:24:58,878	[DEBUG]	
2020-12-10 08:24:59,748	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:25:00,758	[INFO]	254	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:25:01,677	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:25:02,545	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:25:05,725	[INFO]	257	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:25:05,727	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:25:05,729	[INFO]	258	SUCCESS	+13.0	
2020-12-10 08:25:05,729	[DEBUG]	
2020-12-10 08:25:06,577	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:25:09,833	[INFO]	260	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:25:09,835	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 08:25:09,836	[INFO]	261	SUCCESS	+13.0	
2020-12-10 08:25:09,837	[DEBUG]	
2020-12-10 08:25:10,727	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:25:11,646	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:25:14,971	[INFO]	264	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:25:14,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             right.addAll(arr.subList(middle, arr.size()));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:25:15,866	[INFO]	265	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:25:16,781	[INFO]	266	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:25:16,782	[INFO]	267	SUCCESS	+13.0	
2020-12-10 08:25:16,783	[DEBUG]	
2020-12-10 08:25:20,093	[INFO]	268	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:25:20,094	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:25:20,095	[INFO]	269	SUCCESS	+13.0	
2020-12-10 08:25:20,095	[DEBUG]	
2020-12-10 08:25:20,981	[INFO]	270	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:25:21,904	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:25:22,823	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:25:23,727	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:25:24,669	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:25:25,591	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:25:26,497	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:25:29,816	[INFO]	277	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:25:29,817	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:25:33,136	[INFO]	278	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:25:33,137	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:25:34,001	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:25:34,894	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:25:39,478	[INFO]	281	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:25:39,479	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:25:40,384	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:25:40,386	[INFO]	283	SUCCESS	+13.0	
2020-12-10 08:25:40,386	[DEBUG]	
2020-12-10 08:25:41,479	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:25:42,633	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:25:43,556	[INFO]	286	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:25:44,708	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:25:45,744	[INFO]	288	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:25:46,652	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:25:47,543	[INFO]	290	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:25:48,409	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:25:49,310	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:25:50,217	[INFO]	293	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:25:51,147	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:25:54,393	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:25:54,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:25:54,395	[INFO]	296	SUCCESS	+13.0	
2020-12-10 08:25:54,395	[DEBUG]	
2020-12-10 08:25:57,676	[INFO]	297	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:25:57,677	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 08:25:57,678	[INFO]	298	SUCCESS	+13.0	
2020-12-10 08:25:57,679	[DEBUG]	
2020-12-10 08:25:58,568	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:25:59,491	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:26:02,695	[INFO]	301	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:26:02,696	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:26:02,697	[INFO]	302	SUCCESS	+13.0	
2020-12-10 08:26:02,697	[DEBUG]	
2020-12-10 08:26:03,573	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:26:04,465	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:26:05,380	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:26:06,296	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:26:07,227	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:26:08,110	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:26:09,018	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:26:09,020	[INFO]	310	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:26:09,020	[DEBUG]	
2020-12-10 08:26:09,021	[INFO]	311	SUCCESS	+13.0	
2020-12-10 08:26:09,022	[DEBUG]	
2020-12-10 08:26:12,431	[INFO]	312	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:26:12,432	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:26:13,278	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:26:13,279	[INFO]	314	SUCCESS	+13.0	
2020-12-10 08:26:13,279	[DEBUG]	
2020-12-10 08:26:14,168	[INFO]	315	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:26:15,059	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:26:18,344	[INFO]	317	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:26:18,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             left = mergesort(left);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:26:18,346	[INFO]	318	SUCCESS	+13.0	
2020-12-10 08:26:18,346	[DEBUG]	
2020-12-10 08:26:19,181	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:26:20,078	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:26:23,378	[INFO]	321	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:26:23,378	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 j++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:26:23,379	[INFO]	322	SUCCESS	+13.0	
2020-12-10 08:26:23,379	[DEBUG]	
2020-12-10 08:26:26,714	[INFO]	323	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:26:26,715	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 08:26:26,716	[INFO]	324	SUCCESS	+13.0	
2020-12-10 08:26:26,716	[DEBUG]	
2020-12-10 08:26:27,622	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:26:31,037	[INFO]	326	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:26:31,039	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:26:31,040	[INFO]	327	SUCCESS	+13.0	
2020-12-10 08:26:31,040	[DEBUG]	
2020-12-10 08:26:31,897	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:26:32,618	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:26:33,475	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:26:34,366	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:26:35,269	[INFO]	332	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:26:36,182	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:26:37,039	[INFO]	334	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:26:37,925	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:26:38,814	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:26:39,679	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:26:40,559	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:26:41,487	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:26:42,359	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:26:43,252	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:26:44,146	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:26:45,019	[INFO]	343	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:26:48,294	[INFO]	344	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:26:48,296	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 08:26:49,157	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:26:50,056	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:26:50,993	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:26:50,994	[INFO]	348	SUCCESS	+13.0	
2020-12-10 08:26:50,994	[DEBUG]	
2020-12-10 08:26:51,872	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:26:52,771	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:26:53,685	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:26:56,844	[INFO]	352	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:26:56,845	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:26:57,735	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:26:57,737	[INFO]	354	SUCCESS	+13.0	
2020-12-10 08:26:57,737	[DEBUG]	
2020-12-10 08:26:58,436	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:26:59,336	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:27:00,235	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:27:01,110	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:27:02,001	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:27:05,314	[INFO]	360	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:27:05,315	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:27:05,316	[INFO]	361	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:27:05,317	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:27:05,318	[INFO]	362	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:27:05,318	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:27:05,319	[INFO]	363	SUCCESS	+13.0	
2020-12-10 08:27:05,319	[DEBUG]	
2020-12-10 08:27:06,199	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:27:07,112	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:27:07,973	[INFO]	366	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:27:08,882	[INFO]	367	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:27:09,768	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:27:13,064	[INFO]	369	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:27:13,065	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:27:13,065	[INFO]	370	SUCCESS	+13.0	
2020-12-10 08:27:13,066	[DEBUG]	
2020-12-10 08:27:13,955	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:27:14,833	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:27:15,695	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:27:16,595	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:27:17,471	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:27:18,357	[INFO]	376	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:27:21,632	[INFO]	377	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:27:21,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:27:21,634	[INFO]	378	SUCCESS	+13.0	
2020-12-10 08:27:21,634	[DEBUG]	
2020-12-10 08:27:22,513	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:27:23,205	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:27:26,453	[INFO]	381	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:27:26,454	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:27:26,455	[INFO]	382	SUCCESS	+13.0	
2020-12-10 08:27:26,455	[DEBUG]	
2020-12-10 08:27:27,317	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:27:30,636	[INFO]	384	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:27:30,637	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 right = mergesort(right);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:27:31,496	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:27:31,497	[INFO]	386	SUCCESS	+13.0	
2020-12-10 08:27:31,497	[DEBUG]	
2020-12-10 08:27:32,380	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:27:35,613	[INFO]	388	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:27:35,614	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:27:36,505	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:27:37,390	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:27:40,686	[INFO]	391	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:27:40,689	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,35 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:27:43,888	[INFO]	392	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:27:43,889	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:27:43,890	[INFO]	393	SUCCESS	+13.0	
2020-12-10 08:27:43,890	[DEBUG]	
2020-12-10 08:27:44,772	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:27:45,701	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:27:46,603	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:27:47,502	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:27:48,396	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:27:48,398	[INFO]	399	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:27:48,398	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:27:48,399	[INFO]	400	SUCCESS	+13.0	
2020-12-10 08:27:48,399	[DEBUG]	
2020-12-10 08:27:49,334	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:27:50,244	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:27:51,151	[INFO]	403	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:27:52,085	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:27:55,338	[INFO]	405	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:27:55,339	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:27:58,580	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:27:58,581	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,48 ****
--- 41,50 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:27:59,467	[INFO]	407	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:28:02,836	[INFO]	408	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:28:02,837	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:28:02,838	[INFO]	409	SUCCESS	+13.0	
2020-12-10 08:28:02,838	[DEBUG]	
2020-12-10 08:28:03,684	[INFO]	410	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:28:04,585	[INFO]	411	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:28:07,843	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:28:07,844	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:28:07,844	[INFO]	413	SUCCESS	+13.0	
2020-12-10 08:28:07,845	[DEBUG]	
2020-12-10 08:28:11,164	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:28:11,165	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:28:11,166	[INFO]	415	SUCCESS	+13.0	
2020-12-10 08:28:11,166	[DEBUG]	
2020-12-10 08:28:12,033	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:28:15,297	[INFO]	417	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='})
2020-12-10 08:28:15,298	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:28:18,562	[INFO]	418	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:28:18,564	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:28:18,565	[INFO]	419	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='})
2020-12-10 08:28:18,565	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:28:19,523	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:28:19,524	[INFO]	421	SUCCESS	+13.0	
2020-12-10 08:28:19,525	[DEBUG]	
2020-12-10 08:28:20,412	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:28:21,293	[INFO]	423	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:28:22,197	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:28:23,105	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:28:24,026	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:28:24,900	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:28:24,902	[INFO]	428	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:28:24,902	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:28:25,804	[INFO]	429	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:28:25,805	[INFO]	430	SUCCESS	+13.0	
2020-12-10 08:28:25,805	[DEBUG]	
2020-12-10 08:28:26,681	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:28:27,556	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:28:28,474	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:28:29,395	[INFO]	434	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:28:32,682	[INFO]	435	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:28:32,683	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:28:33,606	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:28:33,608	[INFO]	437	SUCCESS	+13.0	
2020-12-10 08:28:33,609	[DEBUG]	
2020-12-10 08:28:36,955	[INFO]	438	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:28:36,956	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,47 ****
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
!             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:28:36,957	[INFO]	439	SUCCESS	+13.0	
2020-12-10 08:28:36,957	[DEBUG]	
2020-12-10 08:28:37,816	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:28:38,693	[INFO]	441	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:28:39,602	[INFO]	442	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:28:40,318	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:28:41,198	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:28:42,092	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:28:42,834	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:28:46,009	[INFO]	447	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:28:46,009	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:28:46,010	[INFO]	448	SUCCESS	+13.0	
2020-12-10 08:28:46,010	[DEBUG]	
2020-12-10 08:28:46,881	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:28:47,790	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:28:48,680	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:28:51,993	[INFO]	452	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:28:51,993	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:28:51,994	[INFO]	453	SUCCESS	+13.0	
2020-12-10 08:28:51,995	[DEBUG]	
2020-12-10 08:28:55,276	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:28:55,276	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:28:55,277	[INFO]	455	SUCCESS	+13.0	
2020-12-10 08:28:55,277	[DEBUG]	
2020-12-10 08:28:58,508	[INFO]	456	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:28:58,509	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:01,741	[INFO]	457	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:29:01,742	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,32 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:02,635	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:29:02,636	[INFO]	459	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:29:02,637	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:05,890	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:29:05,892	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,33 ****
--- 25,35 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;
+                 left = mergesort(left);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:29:06,752	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:29:06,753	[INFO]	462	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:29:06,754	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:10,056	[INFO]	463	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:29:10,058	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,31 ****
--- 25,33 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
+                 left = mergesort(left);
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:29:10,962	[INFO]	464	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:29:10,964	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:29:10,964	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:11,859	[INFO]	466	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:29:12,757	[INFO]	467	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:29:12,758	[INFO]	468	SUCCESS	+13.0	
2020-12-10 08:29:12,758	[DEBUG]	
2020-12-10 08:29:16,059	[INFO]	469	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:29:16,060	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:29:19,221	[INFO]	470	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:29:19,222	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:29:19,223	[INFO]	471	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:29:19,223	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:29:19,224	[INFO]	472	SUCCESS	+13.0	
2020-12-10 08:29:19,224	[DEBUG]	
2020-12-10 08:29:20,103	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:29:21,001	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:29:21,890	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:29:22,812	[INFO]	476	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:29:23,687	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:29:24,569	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:29:25,472	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:29:26,375	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:29:27,261	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:29:27,974	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:29:28,884	[INFO]	483	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:29:32,099	[INFO]	484	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 08:29:32,099	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:29:32,985	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:29:33,963	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:29:33,965	[INFO]	487	SUCCESS	+13.0	
2020-12-10 08:29:33,965	[DEBUG]	
2020-12-10 08:29:37,253	[INFO]	488	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:29:37,253	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:29:37,254	[INFO]	489	SUCCESS	+13.0	
2020-12-10 08:29:37,255	[DEBUG]	
2020-12-10 08:29:38,136	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:29:41,458	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:29:41,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:29:41,460	[INFO]	492	SUCCESS	+13.0	
2020-12-10 08:29:41,460	[DEBUG]	
2020-12-10 08:29:42,313	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:29:43,178	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:29:44,092	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:29:44,990	[INFO]	496	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:29:45,879	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:29:46,593	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:29:47,463	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:29:50,767	[INFO]	500	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:29:50,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:29:50,768	[INFO]	==== END ====
2020-12-10 08:29:50,768	[INFO]	Reason: step budget
2020-12-10 08:29:50,769	[INFO]	
2020-12-10 08:29:50,769	[INFO]	========== EPOCH 18 ==========
2020-12-10 08:29:50,769	[INFO]	==== WARMUP ====
2020-12-10 08:29:53,994	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:29:53,994	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:29:57,241	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:29:57,241	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:30:00,504	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:30:00,504	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:30:03,729	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 08:30:03,730	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:30:03,730	[INFO]	==== START ====
2020-12-10 08:30:07,053	[INFO]	1	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:30:07,054	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:30:07,055	[INFO]	2	SUCCESS	+13.0	
2020-12-10 08:30:07,055	[DEBUG]	
2020-12-10 08:30:10,536	[INFO]	3	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:30:10,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:30:10,538	[INFO]	4	SUCCESS	+13.0	
2020-12-10 08:30:10,538	[DEBUG]	
2020-12-10 08:30:13,827	[INFO]	5	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:30:13,828	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 08:30:13,828	[INFO]	6	SUCCESS	+13.0	
2020-12-10 08:30:13,829	[DEBUG]	
2020-12-10 08:30:14,714	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:30:15,594	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:30:16,501	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:30:19,823	[INFO]	10	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:30:19,824	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:30:20,709	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:30:20,712	[INFO]	12	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:30:20,713	[DEBUG]	
2020-12-10 08:30:23,974	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:30:23,975	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:30:23,976	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:30:23,977	[DEBUG]	
2020-12-10 08:30:24,855	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:30:25,785	[INFO]	16	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:30:26,687	[INFO]	17	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:30:26,688	[INFO]	18	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:30:26,688	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:30:26,689	[INFO]	19	SUCCESS	+13.0	
2020-12-10 08:30:26,689	[DEBUG]	
2020-12-10 08:30:29,955	[INFO]	20	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:30:29,957	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:30:30,878	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:30:31,791	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:30:35,230	[INFO]	23	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:30:35,232	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 18,23 ****
--- 18,24 ----
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
+         left = mergesort(left);
          int i = 0;
          int j = 0;
  
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:30:36,298	[INFO]	24	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:30:37,415	[INFO]	25	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:30:37,416	[INFO]	26	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:30:37,417	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             left.addAll(arr.subList(0,middle));
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:30:38,497	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:30:38,498	[INFO]	28	SUCCESS	+13.0	
2020-12-10 08:30:38,499	[DEBUG]	
2020-12-10 08:30:41,964	[INFO]	29	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:30:41,966	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:30:45,220	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:30:45,221	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:30:48,542	[INFO]	31	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:30:48,543	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:30:49,461	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:30:49,463	[INFO]	33	SUCCESS	+13.0	
2020-12-10 08:30:49,463	[DEBUG]	
2020-12-10 08:30:52,838	[INFO]	34	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:30:52,839	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:30:53,747	[INFO]	35	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:30:53,748	[INFO]	36	SUCCESS	+13.0	
2020-12-10 08:30:53,749	[DEBUG]	
2020-12-10 08:30:54,649	[INFO]	37	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:30:57,966	[INFO]	38	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:30:57,967	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 08:30:57,968	[INFO]	39	SUCCESS	+13.0	
2020-12-10 08:30:57,968	[DEBUG]	
2020-12-10 08:30:59,019	[INFO]	40	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:30:59,945	[INFO]	41	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:31:00,835	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:31:04,068	[INFO]	43	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:31:04,069	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:31:04,070	[INFO]	44	SUCCESS	+13.0	
2020-12-10 08:31:04,070	[DEBUG]	
2020-12-10 08:31:04,071	[INFO]	45	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:31:04,072	[DEBUG]	
2020-12-10 08:31:04,914	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:31:05,823	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:31:06,731	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:31:06,733	[INFO]	49	SUCCESS	+13.0	
2020-12-10 08:31:06,733	[DEBUG]	
2020-12-10 08:31:07,633	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:31:10,887	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:31:10,888	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:31:10,889	[INFO]	52	SUCCESS	+13.0	
2020-12-10 08:31:10,889	[DEBUG]	
2020-12-10 08:31:14,117	[INFO]	53	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:31:14,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,49 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:31:14,119	[INFO]	54	SUCCESS	+13.0	
2020-12-10 08:31:14,119	[DEBUG]	
2020-12-10 08:31:17,325	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:31:17,326	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:31:17,327	[INFO]	56	SUCCESS	+13.0	
2020-12-10 08:31:17,327	[DEBUG]	
2020-12-10 08:31:18,207	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:31:19,091	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:31:22,367	[INFO]	59	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:31:22,370	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:31:22,371	[INFO]	60	SUCCESS	+13.0	
2020-12-10 08:31:22,372	[DEBUG]	
2020-12-10 08:31:25,686	[INFO]	61	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:31:25,689	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:31:26,587	[INFO]	62	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:31:26,590	[INFO]	63	SUCCESS	+13.0	
2020-12-10 08:31:26,590	[DEBUG]	
2020-12-10 08:31:29,775	[INFO]	64	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:31:29,776	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:31:29,778	[INFO]	65	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 08:31:29,778	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:31:29,779	[INFO]	66	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='})
2020-12-10 08:31:29,779	[DEBUG]	
2020-12-10 08:31:30,644	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:31:31,566	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:31:31,567	[INFO]	69	SUCCESS	+13.0	
2020-12-10 08:31:31,567	[DEBUG]	
2020-12-10 08:31:32,470	[INFO]	70	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:31:35,721	[INFO]	71	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:31:35,722	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:31:35,723	[INFO]	72	SUCCESS	+13.0	
2020-12-10 08:31:35,723	[DEBUG]	
2020-12-10 08:31:36,600	[INFO]	73	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:31:39,868	[INFO]	74	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:31:39,869	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }

2020-12-10 08:31:43,145	[INFO]	75	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:31:43,146	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 42,47 ****
--- 46,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:31:46,440	[INFO]	76	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:31:46,442	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  j++;
              }
          }
***************
*** 42,47 ****
--- 46,53 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:31:49,649	[INFO]	77	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:31:49,650	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:31:50,541	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:31:53,895	[INFO]	79	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:31:53,897	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:31:57,205	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:31:57,209	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:00,493	[INFO]	81	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:32:00,495	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:01,404	[INFO]	82	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:32:01,409	[INFO]	83	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:32:01,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:01,413	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:32:01,415	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:04,759	[INFO]	85	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:32:04,761	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 39,47 ****
--- 40,50 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:04,763	[INFO]	86	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:32:04,764	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 39,47 ****
--- 40,50 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:04,765	[INFO]	87	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:32:04,766	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:05,675	[INFO]	88	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:32:08,980	[INFO]	89	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:32:08,983	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 31,36 ****
--- 32,38 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 42,47 ****
--- 44,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:12,263	[INFO]	90	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:32:12,264	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(left.get(i));
                  i++;
              } else {
***************
*** 31,36 ****
--- 32,38 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 42,47 ****
--- 44,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:15,455	[INFO]	91	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:32:15,456	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:18,732	[INFO]	92	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:32:18,733	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 42,49 ****
--- 43,52 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:32:19,630	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:32:19,632	[INFO]	94	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:32:19,633	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(right.get(j));
          return result;
      }
  
***************
*** 42,47 ****
--- 43,49 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:22,917	[INFO]	95	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:32:22,918	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left.addAll(arr.subList(0,middle));
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:32:23,868	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:32:24,765	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:32:24,766	[INFO]	98	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:32:24,767	[DEBUG]	
2020-12-10 08:32:24,768	[INFO]	99	SUCCESS	+13.0	
2020-12-10 08:32:24,768	[DEBUG]	
2020-12-10 08:32:28,181	[INFO]	100	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:32:28,182	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:32:28,183	[INFO]	101	SUCCESS	+13.0	
2020-12-10 08:32:28,184	[DEBUG]	
2020-12-10 08:32:31,467	[INFO]	102	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:32:31,468	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 j++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:32:32,338	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:32:32,339	[INFO]	104	SUCCESS	+13.0	
2020-12-10 08:32:32,339	[DEBUG]	
2020-12-10 08:32:33,227	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:32:36,473	[INFO]	106	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:32:36,474	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:32:37,351	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:32:37,352	[INFO]	108	SUCCESS	+13.0	
2020-12-10 08:32:37,353	[DEBUG]	
2020-12-10 08:32:40,484	[INFO]	109	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:32:40,486	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:32:40,487	[INFO]	110	SUCCESS	+13.0	
2020-12-10 08:32:40,487	[DEBUG]	
2020-12-10 08:32:41,372	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:32:42,273	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:32:45,561	[INFO]	113	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:32:45,562	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:32:46,446	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:32:47,340	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:32:48,262	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:32:49,173	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:32:49,176	[INFO]	118	SUCCESS	+13.0	
2020-12-10 08:32:49,177	[DEBUG]	
2020-12-10 08:32:50,085	[INFO]	119	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:32:53,410	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:32:53,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:32:54,281	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:32:55,192	[INFO]	122	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:32:55,194	[INFO]	123	SUCCESS	+13.0	
2020-12-10 08:32:55,194	[DEBUG]	
2020-12-10 08:32:55,196	[INFO]	124	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:32:55,197	[DEBUG]	
2020-12-10 08:32:56,057	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:32:59,420	[INFO]	126	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:32:59,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }

2020-12-10 08:32:59,422	[INFO]	127	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:32:59,422	[DEBUG]	
2020-12-10 08:32:59,423	[INFO]	128	SUCCESS	+13.0	
2020-12-10 08:32:59,423	[DEBUG]	
2020-12-10 08:33:02,640	[INFO]	129	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 08:33:02,642	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:33:05,910	[INFO]	130	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:33:05,911	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
!             ArrayList<Integer> left = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:33:05,912	[INFO]	131	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 08:33:05,913	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:33:05,913	[INFO]	132	SUCCESS	+13.0	
2020-12-10 08:33:05,914	[DEBUG]	
2020-12-10 08:33:06,764	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:33:07,669	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:33:08,566	[INFO]	135	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:33:09,463	[INFO]	136	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:33:10,368	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:33:13,643	[INFO]	138	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:33:13,644	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,44 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:33:16,849	[INFO]	139	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:33:16,851	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,40 ****
--- 30,52 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:33:20,076	[INFO]	140	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:33:20,078	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,47 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 35,40 ****
--- 53,61 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:33:20,991	[INFO]	141	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:33:20,994	[INFO]	142	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:33:20,996	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,40 ****
--- 30,52 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:33:24,319	[INFO]	143	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:33:24,320	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,40 ****
--- 30,52 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
***************
*** 45,50 ****
--- 57,63 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 08:33:24,321	[INFO]	144	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:33:24,322	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,40 ****
--- 30,52 ----
                  j++;
              }
          }
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 08:33:27,558	[INFO]	145	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:33:27,559	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 08:33:28,467	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:33:29,407	[INFO]	147	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:33:32,663	[INFO]	148	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:33:32,664	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,47 ****
--- 37,51 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:36,026	[INFO]	149	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:33:36,028	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,47 ****
--- 37,52 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:36,897	[INFO]	150	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:33:37,789	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:33:38,677	[INFO]	152	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:33:39,599	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:33:40,485	[INFO]	154	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:33:43,766	[INFO]	155	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:33:43,767	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,47 ****
--- 37,53 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:44,638	[INFO]	156	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:33:47,995	[INFO]	157	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:33:47,997	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 38,47 ****
--- 38,50 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:48,881	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:33:52,265	[INFO]	159	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:33:52,267	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         left = mergesort(left);
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 38,47 ****
--- 40,52 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:55,564	[INFO]	160	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:33:55,566	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         left = mergesort(left);
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 38,47 ****
--- 40,51 ----
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
+             int j = 0;
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:33:58,806	[INFO]	161	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:33:58,807	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
          int i = 0;
          int j = 0;
  
+         left = mergesort(left);
+ 
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
***************
*** 42,47 ****
--- 44,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:34:02,036	[INFO]	162	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:34:02,037	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         left = mergesort(left);
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:34:02,920	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:34:02,921	[INFO]	164	SUCCESS	+13.0	
2020-12-10 08:34:02,921	[DEBUG]	
2020-12-10 08:34:03,793	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:34:04,702	[INFO]	166	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:34:05,410	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:34:06,295	[INFO]	168	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:34:09,531	[INFO]	169	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:34:09,532	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:34:09,533	[INFO]	170	SUCCESS	+13.0	
2020-12-10 08:34:09,533	[DEBUG]	
2020-12-10 08:34:12,788	[INFO]	171	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:34:12,790	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:34:12,792	[INFO]	172	SUCCESS	+13.0	
2020-12-10 08:34:12,793	[DEBUG]	
2020-12-10 08:34:13,645	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:34:14,510	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:34:17,780	[INFO]	175	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:34:17,780	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:34:18,642	[INFO]	176	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:34:19,544	[INFO]	177	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:34:19,545	[INFO]	178	SUCCESS	+13.0	
2020-12-10 08:34:19,546	[DEBUG]	
2020-12-10 08:34:20,430	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:34:21,153	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:34:22,015	[INFO]	181	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:34:22,915	[INFO]	182	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:34:23,794	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:34:24,667	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:34:25,561	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:34:26,455	[INFO]	186	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:34:27,378	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:34:28,299	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:34:29,238	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:34:29,240	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:34:30,104	[INFO]	191	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:34:30,990	[INFO]	192	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:34:31,857	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:34:31,859	[INFO]	194	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:34:31,859	[DEBUG]	
2020-12-10 08:34:31,860	[INFO]	195	SUCCESS	+13.0	
2020-12-10 08:34:31,860	[DEBUG]	
2020-12-10 08:34:32,554	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:34:35,790	[INFO]	197	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:34:35,791	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:34:35,792	[INFO]	198	SUCCESS	+13.0	
2020-12-10 08:34:35,792	[DEBUG]	
2020-12-10 08:34:36,684	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:34:37,547	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:34:38,259	[INFO]	201	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:34:39,129	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:34:42,383	[INFO]	203	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:34:42,384	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:34:43,260	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:34:46,531	[INFO]	205	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:34:46,532	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,27 ****
--- 20,29 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:34:47,411	[INFO]	206	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:34:50,681	[INFO]	207	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:34:50,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:34:51,563	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:34:54,853	[INFO]	209	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:34:54,854	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:34:58,054	[INFO]	210	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:34:58,058	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:34:58,950	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:35:02,197	[INFO]	212	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:35:02,198	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,54 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
! 
!             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 08:35:02,200	[INFO]	213	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:35:02,200	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:35:02,201	[INFO]	214	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:35:02,202	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(left.get(i));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 45,50 ****
--- 46,52 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:35:05,392	[INFO]	215	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:35:05,393	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:35:06,279	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:35:07,173	[INFO]	217	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:35:07,174	[INFO]	218	SUCCESS	+13.0	
2020-12-10 08:35:07,175	[DEBUG]	
2020-12-10 08:35:08,054	[INFO]	219	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:35:09,063	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:35:09,946	[INFO]	221	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:35:13,248	[INFO]	222	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 7), 'value': '<'})
2020-12-10 08:35:13,249	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,28 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
!             if (left.get(i) < right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:35:13,250	[INFO]	223	SUCCESS	+13.0	
2020-12-10 08:35:13,250	[DEBUG]	
2020-12-10 08:35:14,150	[INFO]	224	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:35:15,038	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:35:18,261	[INFO]	226	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:35:18,262	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,37 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:35:18,973	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:35:18,976	[INFO]	228	SUCCESS	+13.0	
2020-12-10 08:35:18,977	[DEBUG]	
2020-12-10 08:35:19,884	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:35:23,170	[INFO]	230	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:35:23,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         i++;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:35:23,172	[INFO]	231	SUCCESS	+13.0	
2020-12-10 08:35:23,172	[DEBUG]	
2020-12-10 08:35:24,029	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:35:27,328	[INFO]	233	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:35:27,329	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:35:27,329	[INFO]	234	SUCCESS	+13.0	
2020-12-10 08:35:27,330	[DEBUG]	
2020-12-10 08:35:28,190	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:35:29,103	[INFO]	236	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:35:29,980	[INFO]	237	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:35:30,878	[INFO]	238	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:35:31,774	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:35:32,503	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:35:33,394	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:35:34,281	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:35:35,269	[INFO]	243	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:35:39,601	[INFO]	244	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:35:39,602	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:35:39,603	[INFO]	245	SUCCESS	+13.0	
2020-12-10 08:35:39,603	[DEBUG]	
2020-12-10 08:35:40,504	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:35:41,411	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:35:42,287	[INFO]	248	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:35:45,571	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:35:45,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:35:45,573	[INFO]	250	SUCCESS	+13.0	
2020-12-10 08:35:45,573	[DEBUG]	
2020-12-10 08:35:45,574	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:35:46,461	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:35:47,357	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:35:48,225	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:35:48,965	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:35:49,835	[INFO]	256	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:35:50,760	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:35:51,635	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:35:52,532	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:35:53,412	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:35:56,685	[INFO]	261	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:35:56,686	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:35:56,687	[INFO]	262	SUCCESS	+13.0	
2020-12-10 08:35:56,687	[DEBUG]	
2020-12-10 08:35:57,551	[INFO]	263	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:35:58,432	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:36:01,759	[INFO]	265	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:36:01,760	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:36:01,761	[INFO]	266	SUCCESS	+13.0	
2020-12-10 08:36:01,761	[DEBUG]	
2020-12-10 08:36:02,604	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:36:03,474	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:36:06,755	[INFO]	269	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:36:06,756	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         left = mergesort(left);
          return result;
      }
  

2020-12-10 08:36:06,756	[INFO]	270	SUCCESS	+13.0	
2020-12-10 08:36:06,757	[DEBUG]	
2020-12-10 08:36:07,599	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:36:10,883	[INFO]	272	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '!='})
2020-12-10 08:36:10,884	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i != left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:36:10,885	[INFO]	273	SUCCESS	+13.0	
2020-12-10 08:36:10,885	[DEBUG]	
2020-12-10 08:36:11,777	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:36:12,629	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:36:13,519	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:36:16,890	[INFO]	277	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:36:16,891	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:36:17,715	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:36:17,716	[INFO]	279	SUCCESS	+13.0	
2020-12-10 08:36:17,716	[DEBUG]	
2020-12-10 08:36:18,597	[INFO]	280	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:36:21,817	[INFO]	281	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 08:36:21,818	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:36:22,704	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:36:22,705	[INFO]	283	SUCCESS	+13.0	
2020-12-10 08:36:22,705	[DEBUG]	
2020-12-10 08:36:23,591	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:36:26,828	[INFO]	285	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:36:26,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:36:26,829	[INFO]	286	SUCCESS	+13.0	
2020-12-10 08:36:26,830	[DEBUG]	
2020-12-10 08:36:27,713	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:36:28,644	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:36:31,947	[INFO]	289	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:36:31,948	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:36:31,949	[INFO]	290	SUCCESS	+13.0	
2020-12-10 08:36:31,949	[DEBUG]	
2020-12-10 08:36:32,641	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:36:33,522	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:36:34,381	[INFO]	293	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:36:35,260	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:36:36,161	[INFO]	295	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:36:37,040	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:36:40,438	[INFO]	297	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:36:40,440	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:36:41,288	[INFO]	298	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:36:44,534	[INFO]	299	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:36:44,535	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,36 ****
--- 28,41 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:36:47,734	[INFO]	300	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:36:47,735	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:36:48,607	[INFO]	301	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:36:48,608	[INFO]	302	SUCCESS	+13.0	
2020-12-10 08:36:48,608	[DEBUG]	
2020-12-10 08:36:49,491	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:36:50,407	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:36:51,320	[INFO]	305	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:36:52,225	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:36:55,489	[INFO]	307	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:36:55,491	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:36:56,351	[INFO]	308	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:36:57,242	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:36:57,244	[INFO]	310	SUCCESS	+13.0	
2020-12-10 08:36:57,245	[DEBUG]	
2020-12-10 08:36:57,966	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:36:58,836	[INFO]	312	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:36:58,837	[INFO]	313	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:36:58,838	[DEBUG]	
2020-12-10 08:36:58,838	[INFO]	314	SUCCESS	+13.0	
2020-12-10 08:36:58,839	[DEBUG]	
2020-12-10 08:36:59,719	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:37:00,610	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:37:01,495	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:37:02,375	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:37:03,272	[INFO]	319	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:37:06,601	[INFO]	320	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:37:06,602	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:37:06,603	[INFO]	321	SUCCESS	+13.0	
2020-12-10 08:37:06,603	[DEBUG]	
2020-12-10 08:37:07,472	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:37:10,838	[INFO]	323	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:37:10,838	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 j++;
                  j++;
              }
          }

2020-12-10 08:37:10,839	[INFO]	324	SUCCESS	+13.0	
2020-12-10 08:37:10,840	[DEBUG]	
2020-12-10 08:37:14,058	[INFO]	325	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:37:14,059	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:37:14,957	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:37:14,959	[INFO]	327	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:37:14,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:37:18,169	[INFO]	328	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:37:18,171	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 37,45 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:37:19,053	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:37:19,055	[INFO]	330	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:37:19,055	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 return result;
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 36,41 ****
--- 37,45 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:37:19,056	[INFO]	331	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:37:19,057	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,44 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:37:19,058	[INFO]	332	SUCCESS	+13.0	
2020-12-10 08:37:19,058	[DEBUG]	
2020-12-10 08:37:19,941	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:37:23,260	[INFO]	334	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:37:23,261	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:37:24,117	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:37:24,118	[INFO]	336	SUCCESS	+13.0	
2020-12-10 08:37:24,119	[DEBUG]	
2020-12-10 08:37:25,009	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:37:25,727	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:37:25,729	[INFO]	339	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:37:25,729	[DEBUG]	
2020-12-10 08:37:25,730	[INFO]	340	SUCCESS	+13.0	
2020-12-10 08:37:25,730	[DEBUG]	
2020-12-10 08:37:26,591	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:37:27,473	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:37:30,691	[INFO]	343	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:37:30,692	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 i++;
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:37:30,693	[INFO]	344	SUCCESS	+13.0	
2020-12-10 08:37:30,693	[DEBUG]	
2020-12-10 08:37:31,626	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:37:34,875	[INFO]	346	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:37:34,876	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:37:34,877	[INFO]	347	SUCCESS	+13.0	
2020-12-10 08:37:34,878	[DEBUG]	
2020-12-10 08:37:35,732	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:37:36,616	[INFO]	349	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:37:37,551	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:37:38,433	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:37:39,343	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:37:42,673	[INFO]	353	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:37:42,674	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:37:43,570	[INFO]	354	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:37:43,571	[INFO]	355	SUCCESS	+13.0	
2020-12-10 08:37:43,572	[DEBUG]	
2020-12-10 08:37:44,427	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:37:45,310	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:37:48,572	[INFO]	358	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:37:48,573	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
--- 24,33 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  i++;
+             }
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:37:48,574	[INFO]	359	SUCCESS	+13.0	
2020-12-10 08:37:48,575	[DEBUG]	
2020-12-10 08:37:48,576	[INFO]	360	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:37:48,576	[DEBUG]	
2020-12-10 08:37:49,488	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:37:49,490	[INFO]	362	SUCCESS	+13.0	
2020-12-10 08:37:49,490	[DEBUG]	
2020-12-10 08:37:52,707	[INFO]	363	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:37:52,708	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             left = mergesort(left);
  
              return merge(left, right);
          }

2020-12-10 08:37:53,622	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:37:53,625	[INFO]	365	SUCCESS	+13.0	
2020-12-10 08:37:53,626	[DEBUG]	
2020-12-10 08:37:56,885	[INFO]	366	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:37:56,886	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:37:56,887	[INFO]	367	SUCCESS	+13.0	
2020-12-10 08:37:56,887	[DEBUG]	
2020-12-10 08:37:57,761	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:37:58,657	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:37:59,570	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:38:00,471	[INFO]	371	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:38:01,375	[INFO]	372	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:38:02,283	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:38:03,268	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:38:06,518	[INFO]	375	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:38:06,518	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         
          return result;
      }
  

2020-12-10 08:38:07,360	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:38:07,361	[INFO]	377	SUCCESS	+13.0	
2020-12-10 08:38:07,362	[DEBUG]	
2020-12-10 08:38:08,228	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:38:11,538	[INFO]	379	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:38:11,539	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:38:11,540	[INFO]	380	SUCCESS	+13.0	
2020-12-10 08:38:11,540	[DEBUG]	
2020-12-10 08:38:12,380	[INFO]	381	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:38:15,587	[INFO]	382	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:38:15,588	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 result.add(right.get(j));
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:38:15,589	[INFO]	383	SUCCESS	+13.0	
2020-12-10 08:38:15,589	[DEBUG]	
2020-12-10 08:38:16,484	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:38:17,347	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:38:18,250	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:38:18,252	[INFO]	387	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:38:19,136	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:38:19,884	[INFO]	389	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:38:20,766	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:38:21,658	[INFO]	391	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:38:24,843	[INFO]	392	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:38:24,844	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:38:25,735	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:38:25,736	[INFO]	394	SUCCESS	+13.0	
2020-12-10 08:38:25,736	[DEBUG]	
2020-12-10 08:38:26,642	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:38:27,552	[INFO]	396	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:38:30,888	[INFO]	397	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:38:30,889	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:38:31,743	[INFO]	398	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:38:31,744	[INFO]	399	SUCCESS	+13.0	
2020-12-10 08:38:31,744	[DEBUG]	
2020-12-10 08:38:35,006	[INFO]	400	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:38:35,007	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:38:35,915	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:38:36,813	[INFO]	402	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:38:36,814	[INFO]	403	SUCCESS	+13.0	
2020-12-10 08:38:36,814	[DEBUG]	
2020-12-10 08:38:37,714	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:38:38,614	[INFO]	405	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:38:39,497	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:38:42,759	[INFO]	407	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:38:42,760	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:38:46,059	[INFO]	408	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:38:46,060	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:38:46,933	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:38:50,246	[INFO]	410	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:38:50,248	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,37 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return merge(left, right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
***************
*** 39,44 ****
--- 40,46 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:38:51,184	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:38:54,420	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:38:54,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
***************
*** 39,44 ****
--- 40,46 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int i = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:38:55,323	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:38:56,196	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:38:59,470	[INFO]	415	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:38:59,471	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:39:02,751	[INFO]	416	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:39:02,752	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,36 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 27,37 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:39:05,950	[INFO]	417	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:39:05,951	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:39:06,834	[INFO]	418	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:39:10,054	[INFO]	419	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:39:10,055	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,33 ****
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 22,34 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:39:10,986	[INFO]	420	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:39:10,988	[INFO]	421	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:39:10,988	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:39:10,989	[INFO]	422	SUCCESS	+13.0	
2020-12-10 08:39:10,989	[DEBUG]	
2020-12-10 08:39:11,882	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:39:12,591	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:39:13,480	[INFO]	425	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:39:16,768	[INFO]	426	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:39:16,771	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:39:16,772	[INFO]	427	SUCCESS	+13.0	
2020-12-10 08:39:16,773	[DEBUG]	
2020-12-10 08:39:17,657	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:39:17,658	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:39:18,557	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:39:19,475	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:39:20,368	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:39:21,258	[INFO]	433	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:39:22,131	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:39:23,097	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:39:24,026	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:39:24,909	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:39:25,821	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:39:26,686	[INFO]	439	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:39:27,557	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:39:30,910	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:39:30,911	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:39:30,912	[INFO]	442	SUCCESS	+13.0	
2020-12-10 08:39:30,912	[DEBUG]	
2020-12-10 08:39:34,092	[INFO]	443	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:39:34,093	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:39:34,970	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:39:34,971	[INFO]	445	SUCCESS	+13.0	
2020-12-10 08:39:34,971	[DEBUG]	
2020-12-10 08:39:35,842	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:39:36,741	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:39:37,630	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:39:38,540	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:39:39,439	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:39:40,318	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:39:41,188	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:39:42,056	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:39:45,366	[INFO]	454	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:39:45,367	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 left = mergesort(left);
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:39:45,368	[INFO]	455	SUCCESS	+13.0	
2020-12-10 08:39:45,368	[DEBUG]	
2020-12-10 08:39:48,612	[INFO]	456	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:39:48,613	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 08:39:49,500	[INFO]	457	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:39:50,422	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:39:53,781	[INFO]	459	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:39:53,782	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,46 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:39:57,030	[INFO]	460	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:39:57,031	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,46 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 51,57 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:40:00,163	[INFO]	461	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:40:00,165	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,46 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,50 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 51,62 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:40:03,364	[INFO]	462	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:40:03,366	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,47 ----
                  j++;
              }
          }
+ 
+         while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,50 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 52,63 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:40:06,949	[INFO]	463	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:40:06,950	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,31 ****
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 40,50 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 42,53 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int j = 0;
  
              return merge(left, right);
          }

2020-12-10 08:40:10,232	[INFO]	464	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:40:10,233	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,31 ****
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 45,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:40:13,497	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:40:13,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,31 ****
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.add(right.get(j));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:40:13,499	[INFO]	466	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:40:13,500	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(right.get(j));
                  j++;
              }
          }

2020-12-10 08:40:13,501	[INFO]	467	SUCCESS	+13.0	
2020-12-10 08:40:13,501	[DEBUG]	
2020-12-10 08:40:14,365	[INFO]	468	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:40:15,350	[INFO]	469	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:40:16,223	[INFO]	470	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:40:16,940	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:40:17,795	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:40:18,705	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:40:19,608	[INFO]	474	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:40:22,802	[INFO]	475	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:40:22,803	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,42 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:40:22,804	[INFO]	476	SUCCESS	+13.0	
2020-12-10 08:40:22,804	[DEBUG]	
2020-12-10 08:40:23,666	[INFO]	477	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:40:24,589	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:40:25,454	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:40:26,328	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:40:29,673	[INFO]	481	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:40:29,673	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return result;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:40:30,543	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:40:31,425	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:40:31,427	[INFO]	484	SUCCESS	+13.0	
2020-12-10 08:40:31,427	[DEBUG]	
2020-12-10 08:40:32,329	[INFO]	485	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:40:33,225	[INFO]	486	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:40:34,095	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:40:34,096	[INFO]	488	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:40:34,096	[DEBUG]	
2020-12-10 08:40:34,097	[INFO]	489	SUCCESS	+13.0	
2020-12-10 08:40:34,097	[DEBUG]	
2020-12-10 08:40:35,054	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:40:35,990	[INFO]	491	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:40:39,339	[INFO]	492	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:40:39,340	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:40:42,698	[INFO]	493	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:40:42,699	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
--- 27,46 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
                  j++;
              }
          }
+                 j++;
+             }
+         }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:40:46,014	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:40:46,015	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,41 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  j++;
              }
          }

2020-12-10 08:40:46,015	[INFO]	495	SUCCESS	+13.0	
2020-12-10 08:40:46,016	[DEBUG]	
2020-12-10 08:40:46,887	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:40:47,766	[INFO]	497	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:40:48,689	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:40:49,591	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:40:50,498	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:40:50,498	[INFO]	==== END ====
2020-12-10 08:40:50,499	[INFO]	Reason: step budget
2020-12-10 08:40:50,499	[INFO]	
2020-12-10 08:40:50,499	[INFO]	========== EPOCH 19 ==========
2020-12-10 08:40:50,500	[INFO]	==== WARMUP ====
2020-12-10 08:40:53,834	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:40:53,834	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:40:57,074	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:40:57,074	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:41:00,276	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:41:00,276	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:41:03,472	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 08:41:03,473	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:41:03,473	[INFO]	==== START ====
2020-12-10 08:41:04,360	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:41:07,608	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:41:07,609	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,31 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:41:07,610	[INFO]	3	SUCCESS	+13.0	
2020-12-10 08:41:07,610	[DEBUG]	
2020-12-10 08:41:08,499	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:41:09,381	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:41:10,271	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:41:11,170	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:41:12,077	[INFO]	8	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:41:12,999	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:41:16,328	[INFO]	10	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '>='})
2020-12-10 08:41:16,329	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i >= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:41:16,330	[INFO]	11	SUCCESS	+13.0	
2020-12-10 08:41:16,330	[DEBUG]	
2020-12-10 08:41:17,192	[INFO]	12	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:41:20,420	[INFO]	13	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:41:20,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:41:23,652	[INFO]	14	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:41:23,653	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
--- 30,39 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:41:24,332	[INFO]	15	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:41:24,334	[INFO]	16	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:41:24,334	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:41:24,335	[INFO]	17	SUCCESS	+13.0	
2020-12-10 08:41:24,335	[DEBUG]	
2020-12-10 08:41:25,188	[INFO]	18	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:41:26,084	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:41:26,946	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:41:27,841	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:41:27,843	[INFO]	22	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:41:31,096	[INFO]	23	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='})
2020-12-10 08:41:31,097	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j != right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:41:31,992	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:41:31,993	[INFO]	25	SUCCESS	+13.0	
2020-12-10 08:41:31,994	[DEBUG]	
2020-12-10 08:41:32,886	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:41:33,777	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:41:34,682	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:41:35,608	[INFO]	29	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:41:36,478	[INFO]	30	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:41:39,724	[INFO]	31	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 08:41:39,725	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:41:40,441	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:41:41,326	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:41:41,327	[INFO]	34	SUCCESS	+13.0	
2020-12-10 08:41:41,328	[DEBUG]	
2020-12-10 08:41:44,649	[INFO]	35	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:41:44,650	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 08:41:45,543	[INFO]	36	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:41:45,545	[INFO]	37	SUCCESS	+13.0	
2020-12-10 08:41:45,546	[DEBUG]	
2020-12-10 08:41:46,428	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:41:46,430	[INFO]	39	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:41:46,430	[DEBUG]	
2020-12-10 08:41:49,653	[INFO]	40	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='})
2020-12-10 08:41:49,655	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:41:50,478	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:41:53,699	[INFO]	42	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:41:53,701	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,44 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
--- 35,47 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:41:54,560	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:41:57,748	[INFO]	44	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:41:57,750	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,44 ****
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
--- 30,48 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:41:58,584	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:42:01,842	[INFO]	46	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:42:01,846	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,45 ****
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
--- 30,52 ----
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:42:02,684	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:42:05,811	[INFO]	48	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:42:05,812	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,45 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
--- 23,52 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:42:06,680	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:42:09,814	[INFO]	50	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:09,817	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,45 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
--- 23,53 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:42:09,821	[INFO]	51	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:09,823	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,45 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
--- 23,53 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:42:13,041	[INFO]	52	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:13,043	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,44 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
--- 23,49 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:42:13,907	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:42:17,316	[INFO]	54	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '!='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:17,317	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,41 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 23,43 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() != 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:42:20,464	[INFO]	55	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:20,466	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,36 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 23,38 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:42:21,340	[INFO]	56	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:42:22,234	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:42:23,116	[INFO]	58	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:42:26,510	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:26,511	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 i++;
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:42:27,358	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:42:30,608	[INFO]	61	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:42:30,610	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:42:30,613	[INFO]	62	SUCCESS	+13.0	
2020-12-10 08:42:30,614	[DEBUG]	
2020-12-10 08:42:31,574	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:42:34,721	[INFO]	64	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:42:34,722	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,52 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             if (arr.size() == 0) { // <= 1 in correct version
!             return arr;
!         }
  
              return merge(left, right);
          }

2020-12-10 08:42:34,723	[INFO]	65	SUCCESS	+13.0	
2020-12-10 08:42:34,724	[DEBUG]	
2020-12-10 08:42:35,586	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:42:36,294	[INFO]	67	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:42:37,177	[INFO]	68	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:42:38,081	[INFO]	69	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:42:38,955	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:42:39,836	[INFO]	71	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:42:40,714	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:42:43,997	[INFO]	73	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:42:43,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:42:43,999	[INFO]	74	SUCCESS	+13.0	
2020-12-10 08:42:43,999	[DEBUG]	
2020-12-10 08:42:44,851	[INFO]	75	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:42:48,160	[INFO]	76	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:42:48,161	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:42:48,162	[INFO]	77	SUCCESS	+13.0	
2020-12-10 08:42:48,162	[DEBUG]	
2020-12-10 08:42:49,011	[INFO]	78	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:42:49,917	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:42:50,829	[INFO]	80	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:42:51,724	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:42:52,615	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:42:53,508	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:42:56,796	[INFO]	84	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:42:56,797	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             left.addAll(arr.subList(0,middle));
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:42:57,661	[INFO]	85	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:42:57,662	[INFO]	86	SUCCESS	+13.0	
2020-12-10 08:42:57,663	[DEBUG]	
2020-12-10 08:42:58,536	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:42:59,494	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:43:00,399	[INFO]	89	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:43:01,300	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:43:02,046	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:43:02,917	[INFO]	92	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:43:03,822	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:43:04,715	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:43:05,600	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:43:06,521	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:43:07,434	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:43:08,321	[INFO]	98	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:43:09,243	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:43:12,468	[INFO]	100	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:43:12,469	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:43:15,729	[INFO]	101	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:43:15,730	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,35 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 27,36 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:43:16,656	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:43:17,573	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:43:18,524	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:43:19,260	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:43:19,261	[INFO]	106	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:43:19,262	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:43:19,262	[INFO]	107	SUCCESS	+13.0	
2020-12-10 08:43:19,263	[DEBUG]	
2020-12-10 08:43:20,142	[INFO]	108	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:43:23,431	[INFO]	109	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:43:23,432	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:43:23,433	[INFO]	110	SUCCESS	+13.0	
2020-12-10 08:43:23,433	[DEBUG]	
2020-12-10 08:43:26,598	[INFO]	111	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<'})
2020-12-10 08:43:26,599	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() < 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:43:26,599	[INFO]	112	SUCCESS	+13.0	
2020-12-10 08:43:26,600	[DEBUG]	
2020-12-10 08:43:27,485	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:43:28,228	[INFO]	114	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:43:29,165	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:43:30,030	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:43:33,344	[INFO]	117	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:43:33,345	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:43:36,731	[INFO]	118	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:43:36,733	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
***************
*** 44,49 ****
--- 53,59 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:43:36,735	[INFO]	119	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:43:36,736	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:43:36,737	[INFO]	120	SUCCESS	+13.0	
2020-12-10 08:43:36,738	[DEBUG]	
2020-12-10 08:43:36,739	[INFO]	121	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:43:39,958	[INFO]	122	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:43:39,959	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:43:39,960	[INFO]	123	SUCCESS	+13.0	
2020-12-10 08:43:39,961	[DEBUG]	
2020-12-10 08:43:39,962	[INFO]	124	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:43:43,279	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:43:43,280	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:43:44,145	[INFO]	126	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:43:47,299	[INFO]	127	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:43:47,300	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left = mergesort(left);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:43:47,300	[INFO]	128	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:43:47,301	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:43:48,167	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:43:48,168	[INFO]	130	SUCCESS	+13.0	
2020-12-10 08:43:48,169	[DEBUG]	
2020-12-10 08:43:48,170	[INFO]	131	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:43:48,170	[DEBUG]	
2020-12-10 08:43:48,170	[INFO]	132	SUCCESS	+13.0	
2020-12-10 08:43:48,171	[DEBUG]	
2020-12-10 08:43:49,142	[INFO]	133	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:43:50,037	[INFO]	134	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:43:53,348	[INFO]	135	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:43:53,349	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:43:53,350	[INFO]	136	SUCCESS	+13.0	
2020-12-10 08:43:53,350	[DEBUG]	
2020-12-10 08:43:54,199	[INFO]	137	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:43:55,095	[INFO]	138	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:43:55,985	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:43:59,322	[INFO]	140	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:43:59,324	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,40 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  

2020-12-10 08:43:59,324	[INFO]	141	SUCCESS	+13.0	
2020-12-10 08:43:59,325	[DEBUG]	
2020-12-10 08:44:00,170	[INFO]	142	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:44:03,437	[INFO]	143	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:44:03,438	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:44:03,439	[INFO]	144	SUCCESS	+13.0	
2020-12-10 08:44:03,439	[DEBUG]	
2020-12-10 08:44:04,340	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:44:05,043	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:44:08,279	[INFO]	147	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:44:08,279	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:44:08,280	[INFO]	148	SUCCESS	+13.0	
2020-12-10 08:44:08,281	[DEBUG]	
2020-12-10 08:44:11,403	[INFO]	149	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:44:11,403	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:44:14,594	[INFO]	150	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 22)}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 08:44:14,595	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:44:17,821	[INFO]	151	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'})
2020-12-10 08:44:17,822	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j > right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:44:18,701	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:44:18,702	[INFO]	153	SUCCESS	+13.0	
2020-12-10 08:44:18,702	[DEBUG]	
2020-12-10 08:44:19,626	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:44:20,540	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:44:23,834	[INFO]	156	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:44:23,836	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:44:24,704	[INFO]	157	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:44:24,705	[INFO]	158	SUCCESS	+13.0	
2020-12-10 08:44:24,705	[DEBUG]	
2020-12-10 08:44:27,999	[INFO]	159	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:44:28,000	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:44:28,001	[INFO]	160	SUCCESS	+13.0	
2020-12-10 08:44:28,001	[DEBUG]	
2020-12-10 08:44:31,201	[INFO]	161	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:44:31,201	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         j++;
          return result;
      }
  

2020-12-10 08:44:31,202	[INFO]	162	SUCCESS	+13.0	
2020-12-10 08:44:31,202	[DEBUG]	
2020-12-10 08:44:32,101	[INFO]	163	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:44:32,965	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:44:33,870	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:44:34,799	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:44:35,668	[INFO]	167	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:44:36,574	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:44:37,455	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:44:38,327	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:44:39,201	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:44:40,092	[INFO]	172	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:44:43,403	[INFO]	173	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:44:43,404	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 08:44:44,292	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:44:45,162	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:44:46,066	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:44:46,985	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:44:46,986	[INFO]	178	SUCCESS	+13.0	
2020-12-10 08:44:46,987	[DEBUG]	
2020-12-10 08:44:50,253	[INFO]	179	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:44:50,254	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:44:51,163	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:44:54,419	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:44:54,420	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,50 ****
--- 39,54 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 08:44:57,712	[INFO]	182	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:44:57,713	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             left.addAll(arr.subList(0,middle));
  
              return merge(left, right);
          }

2020-12-10 08:44:57,714	[INFO]	183	SUCCESS	+13.0	
2020-12-10 08:44:57,714	[DEBUG]	
2020-12-10 08:45:01,064	[INFO]	184	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:45:01,065	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:45:01,892	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:45:01,893	[INFO]	186	SUCCESS	+13.0	
2020-12-10 08:45:01,894	[DEBUG]	
2020-12-10 08:45:05,111	[INFO]	187	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:45:05,112	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:45:05,113	[INFO]	188	SUCCESS	+13.0	
2020-12-10 08:45:05,113	[DEBUG]	
2020-12-10 08:45:05,998	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:45:06,910	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:45:06,914	[INFO]	191	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:45:06,915	[DEBUG]	
2020-12-10 08:45:06,917	[INFO]	192	SUCCESS	+13.0	
2020-12-10 08:45:06,918	[DEBUG]	
2020-12-10 08:45:07,924	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:45:08,846	[INFO]	194	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:45:09,731	[INFO]	195	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:45:10,622	[INFO]	196	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:45:11,503	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:45:12,389	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:45:13,296	[INFO]	199	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:45:14,166	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:45:15,084	[INFO]	201	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:45:15,965	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:45:16,866	[INFO]	203	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:45:17,734	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:45:20,971	[INFO]	205	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:45:20,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int i = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:45:20,973	[INFO]	206	SUCCESS	+13.0	
2020-12-10 08:45:20,973	[DEBUG]	
2020-12-10 08:45:24,223	[INFO]	207	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:45:24,226	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:45:27,420	[INFO]	208	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:45:27,421	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:45:27,422	[INFO]	209	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:45:27,422	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(left.get(i));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:45:27,423	[INFO]	210	SUCCESS	+13.0	
2020-12-10 08:45:27,423	[DEBUG]	
2020-12-10 08:45:28,291	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:45:29,216	[INFO]	212	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:45:29,953	[INFO]	213	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:45:30,823	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:45:31,709	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:45:32,619	[INFO]	216	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:45:33,489	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:45:34,379	[INFO]	218	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:45:35,383	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:45:36,620	[INFO]	220	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:45:37,892	[INFO]	221	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:45:39,190	[INFO]	222	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:45:40,349	[INFO]	223	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:45:41,489	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:45:42,599	[INFO]	225	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:45:43,584	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:45:44,760	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:45:45,922	[INFO]	228	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:45:46,815	[INFO]	229	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:45:47,737	[INFO]	230	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:45:48,620	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:45:48,621	[INFO]	232	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:45:48,622	[DEBUG]	
2020-12-10 08:45:49,509	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:45:49,511	[INFO]	234	SUCCESS	+13.0	
2020-12-10 08:45:49,511	[DEBUG]	
2020-12-10 08:45:50,406	[INFO]	235	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:45:53,713	[INFO]	236	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:45:53,714	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 right = mergesort(right);
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:45:54,441	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:45:54,443	[INFO]	238	SUCCESS	+13.0	
2020-12-10 08:45:54,443	[DEBUG]	
2020-12-10 08:45:57,667	[INFO]	239	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 08:45:57,668	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:46:00,987	[INFO]	240	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:46:00,988	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,38 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:46:04,233	[INFO]	241	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:46:04,234	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,29 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 21,38 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 53,59 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:05,114	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:46:08,616	[INFO]	243	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:46:08,617	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));
***************
*** 44,49 ****
--- 53,59 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:09,515	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:46:10,392	[INFO]	245	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:46:13,865	[INFO]	246	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:46:13,866	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:13,866	[INFO]	247	SUCCESS	+13.0	
2020-12-10 08:46:13,867	[DEBUG]	
2020-12-10 08:46:14,768	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:46:15,493	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:46:16,402	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:46:17,278	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:46:18,208	[INFO]	252	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:46:19,087	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:46:22,446	[INFO]	254	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:46:22,449	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:46:25,720	[INFO]	255	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:46:25,721	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:26,615	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:46:30,028	[INFO]	257	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:46:30,029	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:33,212	[INFO]	258	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:46:33,214	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:36,284	[INFO]	259	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:46:36,286	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,36 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 23,36 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
!             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:39,580	[INFO]	260	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:46:39,583	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,36 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 23,36 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             int j = 0;
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:46:42,839	[INFO]	261	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:46:42,840	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,36 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 23,36 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
!         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:46:46,117	[INFO]	262	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:46:46,118	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:46:49,284	[INFO]	263	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:46:49,285	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:46:52,559	[INFO]	264	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:46:52,560	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 23,33 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 j++;
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:46:55,753	[INFO]	265	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:46:55,754	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:46:56,684	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:46:57,601	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:46:57,604	[INFO]	268	SUCCESS	+13.0	
2020-12-10 08:46:57,605	[DEBUG]	
2020-12-10 08:46:58,633	[INFO]	269	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:47:01,859	[INFO]	270	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:47:01,861	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:47:01,863	[INFO]	271	SUCCESS	+13.0	
2020-12-10 08:47:01,864	[DEBUG]	
2020-12-10 08:47:02,726	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:47:03,616	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:47:04,521	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:47:05,446	[INFO]	275	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:47:06,352	[INFO]	276	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:47:07,279	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:47:08,203	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:47:09,092	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:47:09,979	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:47:10,882	[INFO]	281	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:47:14,121	[INFO]	282	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:47:14,122	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:47:14,123	[INFO]	283	SUCCESS	+13.0	
2020-12-10 08:47:14,124	[DEBUG]	
2020-12-10 08:47:15,013	[INFO]	284	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:47:15,937	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:47:16,811	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:47:17,689	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:47:18,570	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:47:19,493	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:47:20,405	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:47:21,312	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:47:22,217	[INFO]	292	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:47:25,510	[INFO]	293	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:47:25,511	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:47:25,511	[INFO]	294	SUCCESS	+13.0	
2020-12-10 08:47:25,512	[DEBUG]	
2020-12-10 08:47:28,749	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:47:28,750	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:47:31,997	[INFO]	296	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:47:31,998	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:47:32,853	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:47:36,128	[INFO]	298	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:47:36,129	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:47:37,024	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:47:40,295	[INFO]	300	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:47:40,296	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:47:43,504	[INFO]	301	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:47:43,505	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.add(right.get(j));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:47:43,506	[INFO]	302	SUCCESS	+13.0	
2020-12-10 08:47:43,506	[DEBUG]	
2020-12-10 08:47:44,400	[INFO]	303	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:47:45,304	[INFO]	304	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:47:46,238	[INFO]	305	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:47:46,957	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:47:47,868	[INFO]	307	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:47:48,799	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:47:49,731	[INFO]	309	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:47:53,015	[INFO]	310	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:47:53,016	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         right = mergesort(right);
          return result;
      }
  

2020-12-10 08:47:53,960	[INFO]	311	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:47:53,963	[INFO]	312	SUCCESS	+13.0	
2020-12-10 08:47:53,964	[DEBUG]	
2020-12-10 08:47:54,871	[INFO]	313	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:47:58,112	[INFO]	314	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:47:58,114	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 return result;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:47:58,116	[INFO]	315	SUCCESS	+13.0	
2020-12-10 08:47:58,117	[DEBUG]	
2020-12-10 08:47:58,120	[INFO]	316	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:47:58,121	[DEBUG]	
2020-12-10 08:47:58,122	[INFO]	317	SUCCESS	+13.0	
2020-12-10 08:47:58,123	[DEBUG]	
2020-12-10 08:47:58,984	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:47:59,667	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:48:00,561	[INFO]	320	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:48:01,491	[INFO]	321	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:48:02,385	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:48:03,267	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:48:04,161	[INFO]	324	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:48:04,864	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:48:05,754	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:48:09,058	[INFO]	327	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '=='})
2020-12-10 08:48:09,059	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i == left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:48:09,060	[INFO]	328	SUCCESS	+13.0	
2020-12-10 08:48:09,060	[DEBUG]	
2020-12-10 08:48:09,918	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:48:13,136	[INFO]	330	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'})
2020-12-10 08:48:13,138	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() > 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:48:14,026	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:48:14,934	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:48:14,935	[INFO]	333	SUCCESS	+13.0	
2020-12-10 08:48:14,936	[DEBUG]	
2020-12-10 08:48:18,116	[INFO]	334	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:48:18,117	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
  
              return merge(left, right);
          }

2020-12-10 08:48:18,118	[INFO]	335	SUCCESS	+13.0	
2020-12-10 08:48:18,118	[DEBUG]	
2020-12-10 08:48:21,373	[INFO]	336	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:48:21,374	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             j++;
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:48:21,375	[INFO]	337	SUCCESS	+13.0	
2020-12-10 08:48:21,376	[DEBUG]	
2020-12-10 08:48:22,266	[INFO]	338	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:48:23,184	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:48:24,063	[INFO]	340	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:48:24,971	[INFO]	341	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:48:28,290	[INFO]	342	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:48:28,291	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:48:28,292	[INFO]	343	SUCCESS	+13.0	
2020-12-10 08:48:28,292	[DEBUG]	
2020-12-10 08:48:29,177	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:48:30,071	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:48:30,982	[INFO]	346	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:48:32,046	[INFO]	347	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:48:35,306	[INFO]	348	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='})
2020-12-10 08:48:35,306	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j >= right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:48:36,182	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:48:37,075	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 5), 'value': '>='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:48:37,076	[INFO]	351	SUCCESS	+13.0	
2020-12-10 08:48:37,076	[DEBUG]	
2020-12-10 08:48:37,998	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:48:38,731	[INFO]	353	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:48:38,733	[INFO]	354	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:48:38,734	[DEBUG]	
2020-12-10 08:48:38,736	[INFO]	355	SUCCESS	+13.0	
2020-12-10 08:48:38,737	[DEBUG]	
2020-12-10 08:48:39,631	[INFO]	356	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:48:42,887	[INFO]	357	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:48:42,888	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:48:42,889	[INFO]	358	SUCCESS	+13.0	
2020-12-10 08:48:42,889	[DEBUG]	
2020-12-10 08:48:43,789	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:48:44,679	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:48:47,969	[INFO]	361	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:48:47,970	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:48:47,971	[INFO]	362	SUCCESS	+13.0	
2020-12-10 08:48:47,971	[DEBUG]	
2020-12-10 08:48:48,857	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:48:49,770	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:48:53,119	[INFO]	365	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:48:53,120	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:48:53,121	[INFO]	366	SUCCESS	+13.0	
2020-12-10 08:48:53,121	[DEBUG]	
2020-12-10 08:48:53,821	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:48:54,520	[INFO]	368	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:48:55,449	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:48:56,319	[INFO]	370	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:48:59,558	[INFO]	371	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:48:59,559	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:48:59,559	[INFO]	372	SUCCESS	+13.0	
2020-12-10 08:48:59,560	[DEBUG]	
2020-12-10 08:49:00,447	[INFO]	373	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:49:01,328	[INFO]	374	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:49:02,216	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:49:03,094	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:49:03,973	[INFO]	377	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:49:04,840	[INFO]	378	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:49:05,742	[INFO]	379	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:49:06,621	[INFO]	380	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:49:07,518	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:49:08,401	[INFO]	382	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:49:11,670	[INFO]	383	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:49:11,671	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 left = mergesort(left);
                  j++;
              }
          }

2020-12-10 08:49:11,672	[INFO]	384	SUCCESS	+13.0	
2020-12-10 08:49:11,672	[DEBUG]	
2020-12-10 08:49:11,673	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:49:11,674	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:49:14,897	[INFO]	387	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:49:14,898	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:49:15,808	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:49:19,082	[INFO]	389	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:49:19,083	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:49:19,084	[INFO]	390	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:49:19,085	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         left = mergesort(left);
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:49:19,086	[INFO]	391	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:49:19,086	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:49:20,002	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:49:23,250	[INFO]	393	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:49:23,251	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:26,455	[INFO]	394	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:49:26,457	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         i++;
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 42,50 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:26,458	[INFO]	395	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:49:26,459	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:26,460	[INFO]	396	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:49:26,461	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:27,567	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:49:27,571	[INFO]	398	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:49:27,572	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:28,493	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:49:28,495	[INFO]	400	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:49:28,496	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:29,432	[INFO]	401	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:49:32,586	[INFO]	402	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:49:32,589	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,49 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 41,53 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:49:32,593	[INFO]	403	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:49:32,595	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,49 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 41,53 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:49:32,599	[INFO]	404	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:49:32,602	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,49 ****
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 41,53 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:49:32,604	[INFO]	405	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:49:32,606	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:35,841	[INFO]	406	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:49:35,842	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 31,36 ****
--- 32,41 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
          return result;
      }
  
***************
*** 40,45 ****
--- 45,53 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:35,844	[INFO]	407	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:49:35,844	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:35,845	[INFO]	408	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:49:35,846	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:35,847	[INFO]	409	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:49:35,848	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:35,849	[INFO]	410	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:49:35,849	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:49:35,850	[INFO]	411	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:49:35,851	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             result.add(right.get(j));
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 40,45 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:39,094	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:49:39,095	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,40 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:39,783	[INFO]	413	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:49:40,651	[INFO]	414	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:49:41,644	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:49:41,646	[INFO]	416	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:49:41,647	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,40 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:49:44,962	[INFO]	417	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:49:44,965	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:49:44,967	[INFO]	418	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:49:44,969	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:49:45,849	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:49:46,727	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:49:47,638	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:49:47,640	[INFO]	422	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:49:47,640	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         i++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:49:47,641	[INFO]	423	SUCCESS	+13.0	
2020-12-10 08:49:47,641	[DEBUG]	
2020-12-10 08:49:47,642	[INFO]	424	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:49:47,643	[DEBUG]	
2020-12-10 08:49:47,643	[INFO]	425	SUCCESS	+13.0	
2020-12-10 08:49:47,644	[DEBUG]	
2020-12-10 08:49:48,523	[INFO]	426	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:49:51,871	[INFO]	427	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:49:51,872	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,34 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:49:52,815	[INFO]	428	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:49:52,816	[INFO]	429	SUCCESS	+13.0	
2020-12-10 08:49:52,817	[DEBUG]	
2020-12-10 08:49:56,122	[INFO]	430	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:49:56,124	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:49:56,998	[INFO]	431	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:49:57,898	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:49:57,899	[INFO]	433	SUCCESS	+13.0	
2020-12-10 08:49:57,899	[DEBUG]	
2020-12-10 08:50:01,089	[INFO]	434	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:50:01,090	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 08:50:01,983	[INFO]	435	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:50:02,719	[INFO]	436	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:03,577	[INFO]	437	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:50:03,578	[INFO]	438	SUCCESS	+13.0	
2020-12-10 08:50:03,579	[DEBUG]	
2020-12-10 08:50:06,924	[INFO]	439	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:50:06,925	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:50:06,926	[INFO]	440	SUCCESS	+13.0	
2020-12-10 08:50:06,926	[DEBUG]	
2020-12-10 08:50:07,800	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:50:08,684	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:50:09,572	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:50:10,467	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:50:11,384	[INFO]	445	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:50:12,272	[INFO]	446	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:50:15,653	[INFO]	447	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:50:15,654	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 08:50:15,655	[INFO]	448	SUCCESS	+13.0	
2020-12-10 08:50:15,655	[DEBUG]	
2020-12-10 08:50:16,520	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:50:17,421	[INFO]	450	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:50:18,329	[INFO]	451	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:50:19,217	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:50:20,097	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:50:20,981	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:50:21,702	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:50:22,604	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:50:25,862	[INFO]	457	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:50:25,863	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:50:26,753	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:50:26,755	[INFO]	459	SUCCESS	+13.0	
2020-12-10 08:50:26,756	[DEBUG]	
2020-12-10 08:50:27,657	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:50:28,547	[INFO]	461	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:50:29,465	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:50:30,348	[INFO]	463	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:50:33,554	[INFO]	464	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:50:33,557	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {

2020-12-10 08:50:36,912	[INFO]	465	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:50:36,914	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  	//System.out.println(String.valueOf(left.get(0).getClass()));
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
+         result.add(left.get(i));
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             int j = 0;
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:50:40,288	[INFO]	466	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:50:40,291	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:43,591	[INFO]	467	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:50:43,592	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,47 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:46,825	[INFO]	468	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:50:46,826	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,39 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:46,828	[INFO]	469	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:50:46,829	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,39 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:46,830	[INFO]	470	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:46,831	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,39 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:46,832	[INFO]	471	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:46,833	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,39 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
+             left.addAll(arr.subList(0,middle));
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:50,095	[INFO]	472	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:50,096	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 40,45 ****
--- 32,38 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:53,393	[INFO]	473	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:53,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int j = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:50:56,618	[INFO]	474	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:50:56,618	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 08:50:57,499	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:50:58,406	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:50:58,409	[INFO]	477	SUCCESS	+13.0	
2020-12-10 08:50:58,410	[DEBUG]	
2020-12-10 08:50:59,275	[INFO]	478	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:51:00,141	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:51:01,045	[INFO]	480	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:51:04,385	[INFO]	481	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:51:04,386	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         i++;
          return result;
      }
  

2020-12-10 08:51:04,387	[INFO]	482	SUCCESS	+13.0	
2020-12-10 08:51:04,387	[DEBUG]	
2020-12-10 08:51:05,241	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:51:06,123	[INFO]	484	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:51:06,826	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:51:07,542	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:51:08,400	[INFO]	487	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:51:09,276	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:51:10,145	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:51:11,061	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:51:11,968	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:51:12,838	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:51:16,105	[INFO]	493	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:51:16,106	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:51:16,970	[INFO]	494	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:51:17,913	[INFO]	495	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:51:17,916	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:51:17,917	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:51:21,196	[INFO]	497	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:51:21,197	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:51:22,062	[INFO]	498	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:51:25,345	[INFO]	499	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:51:25,347	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,48 ****
--- 44,50 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:51:28,570	[INFO]	500	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:51:28,573	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
***************
*** 43,50 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
!             right.addAll(arr.subList(middle, arr.size()));
  
              return merge(left, right);
          }

2020-12-10 08:51:28,574	[INFO]	==== END ====
2020-12-10 08:51:28,574	[INFO]	Reason: step budget
2020-12-10 08:51:28,575	[INFO]	
2020-12-10 08:51:28,575	[INFO]	========== EPOCH 20 ==========
2020-12-10 08:51:28,576	[INFO]	==== WARMUP ====
2020-12-10 08:51:31,833	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:51:31,833	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:51:35,077	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:51:35,077	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:51:38,415	[INFO]	WARM	SUCCESS	 13.0	
2020-12-10 08:51:38,416	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:51:41,675	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-10 08:51:41,675	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-10 08:51:41,676	[INFO]	==== START ====
2020-12-10 08:51:42,557	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:51:45,860	[INFO]	2	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:51:45,861	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,45 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             int j = 0;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 08:51:45,861	[INFO]	3	SUCCESS	+13.0	
2020-12-10 08:51:45,862	[DEBUG]	
2020-12-10 08:51:46,715	[INFO]	4	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:51:47,583	[INFO]	5	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:51:50,975	[INFO]	6	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:51:50,976	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,29 ****
--- 24,38 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:51:50,977	[INFO]	7	SUCCESS	+13.0	
2020-12-10 08:51:50,977	[DEBUG]	
2020-12-10 08:51:51,855	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:51:52,740	[INFO]	9	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:51:53,654	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:51:54,532	[INFO]	11	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:51:55,410	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:51:56,302	[INFO]	13	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:51:57,188	[INFO]	14	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:52:00,438	[INFO]	15	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:52:00,439	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int i = 0;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:52:00,439	[INFO]	16	SUCCESS	+13.0	
2020-12-10 08:52:00,440	[DEBUG]	
2020-12-10 08:52:01,406	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:52:02,291	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:52:03,185	[INFO]	19	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:52:03,187	[INFO]	20	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:52:03,188	[INFO]	21	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:52:03,188	[DEBUG]	
2020-12-10 08:52:03,189	[INFO]	22	SUCCESS	+13.0	
2020-12-10 08:52:03,189	[DEBUG]	
2020-12-10 08:52:06,497	[INFO]	23	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:52:06,498	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:52:09,681	[INFO]	24	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:52:09,682	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:52:09,683	[INFO]	25	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:52:09,683	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,41 ****
--- 36,42 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:52:09,684	[INFO]	26	SUCCESS	+13.0	
2020-12-10 08:52:09,684	[DEBUG]	
2020-12-10 08:52:10,584	[INFO]	27	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:52:13,818	[INFO]	28	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:52:13,820	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:52:13,821	[INFO]	29	SUCCESS	+13.0	
2020-12-10 08:52:13,821	[DEBUG]	
2020-12-10 08:52:14,704	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:52:15,571	[INFO]	31	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:52:16,466	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:52:19,744	[INFO]	33	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:52:19,745	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:52:19,746	[INFO]	34	SUCCESS	+13.0	
2020-12-10 08:52:19,746	[DEBUG]	
2020-12-10 08:52:20,605	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:52:21,499	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:52:24,733	[INFO]	37	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'before'})
2020-12-10 08:52:24,734	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         result.add(right.get(j));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:52:24,734	[INFO]	38	SUCCESS	+13.0	
2020-12-10 08:52:24,735	[DEBUG]	
2020-12-10 08:52:28,004	[INFO]	39	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:52:28,005	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:52:31,319	[INFO]	40	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:52:31,322	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 i++;
                  j++;
              }
          }
***************
*** 42,47 ****
--- 43,51 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:52:31,324	[INFO]	41	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:52:31,325	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,50 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:52:32,201	[INFO]	42	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:52:32,203	[INFO]	43	SUCCESS	+13.0	
2020-12-10 08:52:32,203	[DEBUG]	
2020-12-10 08:52:33,090	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:52:33,999	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:52:34,842	[INFO]	46	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:52:35,737	[INFO]	47	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:52:36,616	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:52:37,485	[INFO]	49	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:52:38,396	[INFO]	50	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:52:41,636	[INFO]	51	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:52:41,638	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:52:44,872	[INFO]	52	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:52:44,873	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,36 ****
--- 25,38 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         j++;
          return result;
      }
  

2020-12-10 08:52:44,874	[INFO]	53	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:52:44,874	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 i++;
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:52:44,875	[INFO]	54	SUCCESS	+13.0	
2020-12-10 08:52:44,875	[DEBUG]	
2020-12-10 08:52:44,876	[INFO]	55	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:52:45,758	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:52:46,646	[INFO]	57	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:52:50,021	[INFO]	58	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:52:50,022	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:52:50,023	[INFO]	59	SUCCESS	+13.0	
2020-12-10 08:52:50,023	[DEBUG]	
2020-12-10 08:52:50,928	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:52:51,799	[INFO]	61	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:52:55,014	[INFO]	62	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:52:55,015	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:52:55,866	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:52:55,867	[INFO]	64	SUCCESS	+13.0	
2020-12-10 08:52:55,867	[DEBUG]	
2020-12-10 08:52:56,792	[INFO]	65	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:52:57,669	[INFO]	66	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:52:58,554	[INFO]	67	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:52:59,433	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:53:02,667	[INFO]	69	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:53:02,667	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
  
              return merge(left, right);
          }

2020-12-10 08:53:03,539	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:53:03,540	[INFO]	71	SUCCESS	+13.0	
2020-12-10 08:53:03,540	[DEBUG]	
2020-12-10 08:53:04,265	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:53:05,126	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 20)})
2020-12-10 08:53:06,021	[INFO]	74	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:53:06,936	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:53:07,829	[INFO]	76	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:53:08,742	[INFO]	77	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:53:12,066	[INFO]	78	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:53:12,067	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:53:12,068	[INFO]	79	SUCCESS	+13.0	
2020-12-10 08:53:12,068	[DEBUG]	
2020-12-10 08:53:15,287	[INFO]	80	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:53:15,289	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,49 ****
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             left.addAll(arr.subList(0,middle));
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:53:16,160	[INFO]	81	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:53:16,161	[INFO]	82	SUCCESS	+13.0	
2020-12-10 08:53:16,162	[DEBUG]	
2020-12-10 08:53:17,064	[INFO]	83	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 08:53:17,950	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:53:18,828	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:53:19,753	[INFO]	86	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:53:23,031	[INFO]	87	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:53:23,033	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 08:53:23,035	[INFO]	88	SUCCESS	+13.0	
2020-12-10 08:53:23,035	[DEBUG]	
2020-12-10 08:53:23,906	[INFO]	89	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:53:24,794	[INFO]	90	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:53:25,680	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:53:29,041	[INFO]	92	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:53:29,042	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:53:29,721	[INFO]	93	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:53:29,722	[INFO]	94	SUCCESS	+13.0	
2020-12-10 08:53:29,722	[DEBUG]	
2020-12-10 08:53:30,582	[INFO]	95	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:53:31,312	[INFO]	96	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:53:32,177	[INFO]	97	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:53:33,062	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:53:36,433	[INFO]	99	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:53:36,433	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  j++;
              }
          }

2020-12-10 08:53:36,434	[INFO]	100	SUCCESS	+13.0	
2020-12-10 08:53:36,434	[DEBUG]	
2020-12-10 08:53:37,297	[INFO]	101	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:53:38,164	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:53:39,053	[INFO]	103	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:53:39,931	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:53:40,835	[INFO]	105	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:53:41,731	[INFO]	106	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:53:44,958	[INFO]	107	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:53:44,960	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:53:44,962	[INFO]	108	SUCCESS	+13.0	
2020-12-10 08:53:44,962	[DEBUG]	
2020-12-10 08:53:44,964	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:53:45,860	[INFO]	110	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:53:46,561	[INFO]	111	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:53:47,449	[INFO]	112	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:53:48,368	[INFO]	113	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:53:49,285	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:53:50,171	[INFO]	115	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:53:51,105	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:53:51,997	[INFO]	117	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:53:55,287	[INFO]	118	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:53:55,288	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 45,50 ****
--- 45,51 ----
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 08:53:55,289	[INFO]	119	SUCCESS	+13.0	
2020-12-10 08:53:55,289	[DEBUG]	
2020-12-10 08:53:58,532	[INFO]	120	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:53:58,533	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 right = mergesort(right);
                  j++;
              }
          }

2020-12-10 08:53:58,534	[INFO]	121	SUCCESS	+13.0	
2020-12-10 08:53:58,534	[DEBUG]	
2020-12-10 08:54:01,750	[INFO]	122	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:54:01,751	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         right = mergesort(right);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:54:01,752	[INFO]	123	SUCCESS	+13.0	
2020-12-10 08:54:01,752	[DEBUG]	
2020-12-10 08:54:02,608	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:54:05,896	[INFO]	125	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:54:05,897	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
                  result.add(left.get(i));
                  i++;
              } else {

2020-12-10 08:54:05,897	[INFO]	126	SUCCESS	+13.0	
2020-12-10 08:54:05,898	[DEBUG]	
2020-12-10 08:54:06,780	[INFO]	127	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:54:07,488	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:54:08,352	[INFO]	129	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:54:09,224	[INFO]	130	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:54:10,103	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:54:13,372	[INFO]	132	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:54:13,373	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
--- 23,29 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
!                 
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:54:14,072	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:54:14,952	[INFO]	134	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:54:15,832	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:54:15,833	[INFO]	136	SUCCESS	+13.0	
2020-12-10 08:54:15,834	[DEBUG]	
2020-12-10 08:54:16,742	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:54:20,034	[INFO]	138	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:54:20,035	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:54:20,917	[INFO]	139	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:54:20,918	[INFO]	140	SUCCESS	+13.0	
2020-12-10 08:54:20,919	[DEBUG]	
2020-12-10 08:54:24,195	[INFO]	141	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:54:24,195	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.add(right.get(j));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:54:25,070	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:54:25,071	[INFO]	143	SUCCESS	+13.0	
2020-12-10 08:54:25,072	[DEBUG]	
2020-12-10 08:54:25,956	[INFO]	144	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:54:26,865	[INFO]	145	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:54:30,210	[INFO]	146	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:54:30,211	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:54:31,093	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:54:32,021	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:54:32,943	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:54:33,873	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 08:54:33,875	[INFO]	151	SUCCESS	+13.0	
2020-12-10 08:54:33,876	[DEBUG]	
2020-12-10 08:54:37,158	[INFO]	152	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:54:37,159	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:54:38,041	[INFO]	153	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:54:41,275	[INFO]	154	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:54:41,276	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 08:54:44,474	[INFO]	155	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:54:44,475	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 44,50 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 08:54:47,697	[INFO]	156	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:54:47,698	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 45,51 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 08:54:48,597	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:54:51,942	[INFO]	158	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:54:51,944	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  

2020-12-10 08:54:51,945	[INFO]	159	SUCCESS	+13.0	
2020-12-10 08:54:51,945	[DEBUG]	
2020-12-10 08:54:55,190	[INFO]	160	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:54:55,191	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,35 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 08:54:55,192	[INFO]	161	SUCCESS	+13.0	
2020-12-10 08:54:55,192	[DEBUG]	
2020-12-10 08:54:56,054	[INFO]	162	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:54:56,903	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:54:57,794	[INFO]	164	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:54:58,691	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:54:59,403	[INFO]	166	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:55:02,670	[INFO]	167	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:55:02,672	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,45 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
          return result;
      }
  

2020-12-10 08:55:02,673	[INFO]	168	SUCCESS	+13.0	
2020-12-10 08:55:02,674	[DEBUG]	
2020-12-10 08:55:03,363	[INFO]	169	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:55:04,237	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:55:05,135	[INFO]	171	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:55:06,030	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:55:09,281	[INFO]	173	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:55:09,282	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,36 ****
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
+         result.add(left.get(i));
          return result;
      }
  

2020-12-10 08:55:09,283	[INFO]	174	SUCCESS	+13.0	
2020-12-10 08:55:09,283	[DEBUG]	
2020-12-10 08:55:12,535	[INFO]	175	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:55:12,536	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:15,891	[INFO]	176	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:55:15,892	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 44,49 ****
--- 45,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:55:19,081	[INFO]	177	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:55:19,082	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 30,35 ****
--- 31,38 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 44,49 ****
--- 47,55 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:55:22,374	[INFO]	178	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:55:22,375	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
***************
*** 30,35 ****
--- 31,38 ----
                  j++;
              }
          }
+ 
+         j++;
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:55:23,254	[INFO]	179	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:55:24,159	[INFO]	180	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 08:55:24,161	[INFO]	181	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:55:24,162	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         right = mergesort(right);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:24,163	[INFO]	182	SUCCESS	+13.0	
2020-12-10 08:55:24,163	[DEBUG]	
2020-12-10 08:55:25,045	[INFO]	183	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:55:25,924	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:55:29,273	[INFO]	185	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:55:29,274	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int i = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:55:29,275	[INFO]	186	SUCCESS	+13.0	
2020-12-10 08:55:29,275	[DEBUG]	
2020-12-10 08:55:32,558	[INFO]	187	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:55:32,560	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:55:33,480	[INFO]	188	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:55:34,364	[INFO]	189	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:55:38,505	[INFO]	190	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '>='})
2020-12-10 08:55:38,506	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 36,42 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() >= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:55:38,507	[INFO]	191	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:55:38,507	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 left = mergesort(left);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:55:38,508	[INFO]	192	SUCCESS	+13.0	
2020-12-10 08:55:38,508	[DEBUG]	
2020-12-10 08:55:39,257	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:55:42,584	[INFO]	194	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:55:42,585	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:42,587	[INFO]	195	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:55:42,587	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:42,588	[INFO]	196	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:55:42,589	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:43,447	[INFO]	197	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:55:44,365	[INFO]	198	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:55:45,295	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:55:46,008	[INFO]	200	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:55:46,889	[INFO]	201	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:55:47,795	[INFO]	202	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:55:47,800	[INFO]	203	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:55:47,801	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:48,671	[INFO]	204	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:55:49,400	[INFO]	205	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:55:49,403	[INFO]	206	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:55:49,404	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 17,22 ****
--- 17,23 ----
  	//System.out.println(String.valueOf(left.getClass()));
  	//System.out.println(String.valueOf(left.get(0)));
  	//System.out.println(String.valueOf(left.get(0).getClass()));
+         left = mergesort(left);
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;

2020-12-10 08:55:49,406	[INFO]	207	SUCCESS	+13.0	
2020-12-10 08:55:49,406	[DEBUG]	
2020-12-10 08:55:50,373	[INFO]	208	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:55:53,765	[INFO]	209	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 15), 'value': '<='})
2020-12-10 08:55:53,768	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,41 ****
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
!         if (arr.size() <= 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;

2020-12-10 08:55:53,769	[INFO]	210	SUCCESS	+13.0	
2020-12-10 08:55:53,770	[DEBUG]	
2020-12-10 08:55:54,622	[INFO]	211	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:55:55,548	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:55:56,488	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:55:57,376	[INFO]	214	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:55:57,377	[INFO]	215	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:55:57,377	[DEBUG]	
2020-12-10 08:55:57,378	[INFO]	216	SUCCESS	+13.0	
2020-12-10 08:55:57,378	[DEBUG]	
2020-12-10 08:55:58,261	[INFO]	217	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:55:59,001	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:55:59,718	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:56:00,559	[INFO]	220	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:56:01,463	[INFO]	221	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:56:04,818	[INFO]	222	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:56:04,819	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,30 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+ 
+         if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:56:04,820	[INFO]	223	SUCCESS	+13.0	
2020-12-10 08:56:04,820	[DEBUG]	
2020-12-10 08:56:05,683	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:56:06,389	[INFO]	225	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:56:07,263	[INFO]	226	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:56:08,160	[INFO]	227	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:56:09,073	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:56:09,942	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 16)})
2020-12-10 08:56:13,244	[INFO]	230	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:56:13,246	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:56:13,247	[INFO]	231	SUCCESS	+13.0	
2020-12-10 08:56:13,247	[DEBUG]	
2020-12-10 08:56:14,154	[INFO]	232	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:56:17,387	[INFO]	233	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:56:17,388	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:18,259	[INFO]	234	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:56:21,541	[INFO]	235	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:56:21,544	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:21,546	[INFO]	236	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:56:21,547	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:24,745	[INFO]	237	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:56:24,746	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 36,47 ****
--- 36,49 ----
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
+             int middle = arr.size() / 2;
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:24,747	[INFO]	238	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:56:24,747	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:25,620	[INFO]	239	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:56:28,943	[INFO]	240	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:56:28,944	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int j = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:56:29,817	[INFO]	241	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 08:56:33,075	[INFO]	242	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:56:33,076	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(left.get(i));
                  j++;
              }
          }

2020-12-10 08:56:33,077	[INFO]	243	SUCCESS	+13.0	
2020-12-10 08:56:33,077	[DEBUG]	
2020-12-10 08:56:33,954	[INFO]	244	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:56:34,845	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:56:35,739	[INFO]	246	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:56:36,628	[INFO]	247	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:56:37,526	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:56:40,855	[INFO]	249	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:56:40,856	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                  j++;
              }
          }
+         left = mergesort(left);
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:56:41,710	[INFO]	250	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:56:42,605	[INFO]	251	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:56:42,606	[INFO]	252	SUCCESS	+13.0	
2020-12-10 08:56:42,606	[DEBUG]	
2020-12-10 08:56:43,597	[INFO]	253	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:56:44,487	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:56:45,366	[INFO]	255	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:56:46,254	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:56:49,581	[INFO]	257	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:56:49,582	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 37,42 ****
--- 37,45 ----
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
+         }
+         if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);

2020-12-10 08:56:49,583	[INFO]	258	SUCCESS	+13.0	
2020-12-10 08:56:49,583	[DEBUG]	
2020-12-10 08:56:50,481	[INFO]	259	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'after'})
2020-12-10 08:56:51,438	[INFO]	260	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:56:52,331	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:56:53,190	[INFO]	262	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:56:56,343	[INFO]	263	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:56:56,344	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:56:59,534	[INFO]	264	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:56:59,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,52 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
!             return merge(left, right);
          }
      }
  }
--- 43,52 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
!             return result;
          }
      }
  }

2020-12-10 08:56:59,540	[INFO]	265	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:56:59,542	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,49 ****
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
              return merge(left, right);
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
!             ArrayList<Integer> result = new ArrayList<Integer>(100);
              right = mergesort(right);
  
              return merge(left, right);

2020-12-10 08:56:59,544	[INFO]	266	SUCCESS	+13.0	
2020-12-10 08:56:59,545	[DEBUG]	
2020-12-10 08:57:00,418	[INFO]	267	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:57:01,307	[INFO]	268	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:57:02,205	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 2)})
2020-12-10 08:57:05,470	[INFO]	270	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:57:05,471	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:57:05,472	[INFO]	271	SUCCESS	+13.0	
2020-12-10 08:57:05,472	[DEBUG]	
2020-12-10 08:57:06,339	[INFO]	272	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:57:07,239	[INFO]	273	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:57:08,135	[INFO]	274	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:57:11,480	[INFO]	275	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 9)})
2020-12-10 08:57:11,481	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,33 ****
                  i++;
              } else {
                  result.add(right.get(j));
!                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
!                 i++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:57:11,482	[INFO]	276	SUCCESS	+13.0	
2020-12-10 08:57:11,482	[DEBUG]	
2020-12-10 08:57:12,370	[INFO]	277	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 08:57:13,255	[INFO]	278	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:57:14,148	[INFO]	279	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:57:15,055	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:57:15,947	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:57:16,814	[INFO]	282	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:57:17,699	[INFO]	283	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:57:20,971	[INFO]	284	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:57:20,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 08:57:21,858	[INFO]	285	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:57:22,752	[INFO]	286	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'after'})
2020-12-10 08:57:23,644	[INFO]	287	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:57:23,645	[INFO]	288	SUCCESS	+13.0	
2020-12-10 08:57:23,645	[DEBUG]	
2020-12-10 08:57:24,516	[INFO]	289	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:57:27,791	[INFO]	290	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'})
2020-12-10 08:57:27,793	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 46,51 ****
--- 46,53 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int j = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:57:28,735	[INFO]	291	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:57:32,034	[INFO]	292	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:57:32,037	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
***************
*** 46,51 ****
--- 47,54 ----
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  
+             int j = 0;
+ 
              return merge(left, right);
          }
      }

2020-12-10 08:57:35,314	[INFO]	293	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:57:35,316	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:57:36,172	[INFO]	294	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'before'})
2020-12-10 08:57:39,392	[INFO]	295	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:57:39,393	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,35 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
!             if (left.get(i) <= right.get(j)) {
!                 result.add(left.get(i));
!                 i++;
!             } else {
!                 result.add(right.get(j));
!                 j++;
!             }
!         }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:57:39,394	[INFO]	296	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:57:39,394	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:57:40,254	[INFO]	297	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:57:40,255	[INFO]	298	SUCCESS	+13.0	
2020-12-10 08:57:40,256	[DEBUG]	
2020-12-10 08:57:41,161	[INFO]	299	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:57:44,369	[INFO]	300	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:57:44,370	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(right.get(j));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:57:44,371	[INFO]	301	SUCCESS	+13.0	
2020-12-10 08:57:44,371	[DEBUG]	
2020-12-10 08:57:45,251	[INFO]	302	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:57:46,145	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:57:47,025	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:57:47,900	[INFO]	305	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:57:48,820	[INFO]	306	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:57:52,137	[INFO]	307	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:57:52,137	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:57:52,996	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:57:56,168	[INFO]	309	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:57:56,169	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:57:57,058	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 08:58:00,297	[INFO]	311	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:58:00,299	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,35 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 24,36 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
***************
*** 41,46 ****
--- 42,48 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             int j = 0;
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:58:01,188	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:58:04,535	[INFO]	313	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'before'})
2020-12-10 08:58:04,536	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,35 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
--- 24,36 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;
              }
          }
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:58:04,537	[INFO]	314	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:58:04,537	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 return merge(left, right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:58:04,538	[INFO]	315	SUCCESS	+13.0	
2020-12-10 08:58:04,538	[DEBUG]	
2020-12-10 08:58:05,413	[INFO]	316	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:58:06,284	[INFO]	317	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:58:07,172	[INFO]	318	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 08:58:08,036	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:58:11,253	[INFO]	320	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:58:11,254	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 42,47 ****
--- 42,48 ----
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
+             int i = 0;
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);

2020-12-10 08:58:11,255	[INFO]	321	SUCCESS	+13.0	
2020-12-10 08:58:11,255	[DEBUG]	
2020-12-10 08:58:12,122	[INFO]	322	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'after'})
2020-12-10 08:58:13,007	[INFO]	323	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:58:13,880	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:58:14,769	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:58:15,654	[INFO]	326	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:58:16,565	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:58:17,272	[INFO]	328	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:58:18,153	[INFO]	329	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:58:19,015	[INFO]	330	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:58:19,925	[INFO]	331	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:58:19,927	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:58:20,801	[INFO]	333	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:58:21,667	[INFO]	334	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:58:22,577	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:58:23,473	[INFO]	336	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 08:58:24,357	[INFO]	337	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:58:25,246	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 08:58:26,137	[INFO]	339	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 08:58:29,400	[INFO]	340	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:58:29,401	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,35 ****
--- 30,37 ----
                  j++;
              }
          }
+ 
+         result.add(left.get(i));
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }

2020-12-10 08:58:29,402	[INFO]	341	SUCCESS	+13.0	
2020-12-10 08:58:29,403	[DEBUG]	
2020-12-10 08:58:30,275	[INFO]	342	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 08:58:30,987	[INFO]	343	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:58:31,875	[INFO]	344	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'before'})
2020-12-10 08:58:32,787	[INFO]	345	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:58:33,524	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 13)})
2020-12-10 08:58:36,805	[INFO]	347	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 08:58:36,806	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> result = new ArrayList<Integer>(100);
          int i = 0;
          int j = 0;
+         result.add(left.get(i));
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {

2020-12-10 08:58:37,700	[INFO]	348	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'after'})
2020-12-10 08:58:37,701	[INFO]	349	SUCCESS	+13.0	
2020-12-10 08:58:37,702	[DEBUG]	
2020-12-10 08:58:38,598	[INFO]	350	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:58:39,492	[INFO]	351	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:58:40,389	[INFO]	352	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:58:40,390	[INFO]	353	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:58:40,390	[DEBUG]	
2020-12-10 08:58:40,391	[INFO]	354	SUCCESS	+13.0	
2020-12-10 08:58:40,391	[DEBUG]	
2020-12-10 08:58:41,287	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:58:42,176	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 08:58:43,052	[INFO]	357	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:58:43,923	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:58:44,810	[INFO]	359	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 08:58:45,706	[INFO]	360	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:58:46,597	[INFO]	361	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'before'})
2020-12-10 08:58:47,483	[INFO]	362	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:58:48,362	[INFO]	363	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:58:49,268	[INFO]	364	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 08:58:50,169	[INFO]	365	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'})
2020-12-10 08:58:53,433	[INFO]	366	SUCCESS	+13.0	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 08:58:53,434	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,32 ****
                  result.add(left.get(i));
                  i++;
              } else {
!                 result.add(right.get(j));
                  j++;
              }
          }
--- 26,32 ----
                  result.add(left.get(i));
                  i++;
              } else {
!                 
                  j++;
              }
          }

2020-12-10 08:58:54,314	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 10)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:58:54,315	[INFO]	368	SUCCESS	+13.0	
2020-12-10 08:58:54,315	[DEBUG]	
2020-12-10 08:58:55,239	[INFO]	369	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:58:55,242	[INFO]	370	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 08:58:55,243	[DEBUG]	
2020-12-10 08:58:55,245	[INFO]	371	SUCCESS	+13.0	
2020-12-10 08:58:55,246	[DEBUG]	
2020-12-10 08:58:58,549	[INFO]	372	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 08:58:58,551	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,29 ****
--- 23,37 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:59:01,835	[INFO]	373	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:59:01,836	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
--- 23,45 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:59:05,032	[INFO]	374	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 08:59:05,033	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
--- 23,46 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:59:05,905	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 08:59:06,808	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:59:06,809	[INFO]	377	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'})
2020-12-10 08:59:06,810	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 23,33 ****
--- 23,45 ----
  
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:59:10,110	[INFO]	378	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 6), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:59:10,111	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,33 ****
--- 22,54 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
                  result.add(right.get(j));
                  j++;
+             }
+         }
+             if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+                 if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             }
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 08:59:13,415	[INFO]	379	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:59:13,416	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,29 ****
--- 22,46 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
+             if (left.get(i) <= right.get(j)) {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  i++;
              } else {
                  result.add(right.get(j));

2020-12-10 08:59:14,341	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 17)})
2020-12-10 08:59:17,770	[INFO]	381	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 08:59:17,772	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,27 ****
--- 22,36 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:59:18,691	[INFO]	382	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:59:19,612	[INFO]	383	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 08:59:19,613	[INFO]	384	SUCCESS	+13.0	
2020-12-10 08:59:19,614	[DEBUG]	
2020-12-10 08:59:20,472	[INFO]	385	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:59:21,385	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 08:59:22,296	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:59:23,224	[INFO]	388	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 08:59:24,150	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 08:59:25,020	[INFO]	390	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 08:59:25,926	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 08:59:26,801	[INFO]	392	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'after'})
2020-12-10 08:59:27,687	[INFO]	393	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 08:59:28,636	[INFO]	394	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 08:59:29,521	[INFO]	395	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 08:59:30,417	[INFO]	396	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 08:59:31,341	[INFO]	397	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'before'})
2020-12-10 08:59:32,206	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 14)})
2020-12-10 08:59:33,092	[INFO]	399	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 08:59:33,979	[INFO]	400	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 3), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 08:59:37,223	[INFO]	401	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='})
2020-12-10 08:59:37,224	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:59:38,089	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:59:38,983	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 08:59:42,254	[INFO]	404	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'before'})
2020-12-10 08:59:42,255	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:59:42,256	[INFO]	405	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='})
2020-12-10 08:59:42,257	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 21,27 ****
          int i = 0;
          int j = 0;
  
!         while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
--- 21,27 ----
          int i = 0;
          int j = 0;
  
!         while (i <= left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;

2020-12-10 08:59:43,116	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/MERGESORT.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 08:59:43,118	[INFO]	407	SUCCESS	+13.0	
2020-12-10 08:59:43,118	[DEBUG]	
2020-12-10 08:59:46,390	[INFO]	408	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 08:59:46,391	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 25,30 ****
--- 25,31 ----
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
+                 right = mergesort(right);
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 08:59:47,320	[INFO]	409	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:59:47,322	[INFO]	410	SUCCESS	+13.0	
2020-12-10 08:59:47,323	[DEBUG]	
2020-12-10 08:59:50,622	[INFO]	411	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:59:50,623	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:59:53,969	[INFO]	412	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 08:59:53,970	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(left.get(i));
          return result;
      }
  
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:59:53,971	[INFO]	413	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 08:59:53,972	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 08:59:57,199	[INFO]	414	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 08:59:57,201	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
+             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 08:59:58,078	[INFO]	415	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 19), 'direction': 'after'})
2020-12-10 08:59:58,797	[INFO]	416	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 08:59:59,708	[INFO]	417	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 09:00:00,440	[INFO]	418	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'after'})
2020-12-10 09:00:01,328	[INFO]	419	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 09:00:04,746	[INFO]	420	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'})
2020-12-10 09:00:04,748	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                  i++;
              } else {
                  result.add(right.get(j));
+                 result.add(left.get(i));
                  j++;
              }
          }
***************
*** 40,46 ****
--- 41,49 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
+             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 09:00:05,616	[INFO]	421	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 09:00:06,475	[INFO]	422	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 8), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 09:00:06,477	[INFO]	423	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'})
2020-12-10 09:00:06,477	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,46 ****
--- 40,48 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
+             left = mergesort(left);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 09:00:07,398	[INFO]	424	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 09:00:07,400	[INFO]	425	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 09:00:07,400	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             left = mergesort(left);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 09:00:07,401	[INFO]	426	SUCCESS	+13.0	
2020-12-10 09:00:07,401	[DEBUG]	
2020-12-10 09:00:08,286	[INFO]	427	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 09:00:11,543	[INFO]	428	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 09:00:11,544	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 41,46 ****
--- 41,47 ----
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 09:00:14,832	[INFO]	429	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 09:00:14,834	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,46 ****
--- 35,48 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));

2020-12-10 09:00:18,072	[INFO]	430	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 09:00:18,073	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 35,40 ****
--- 35,41 ----
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
+         int i = 0;
          if (arr.size() == 0) { // <= 1 in correct version
              return arr;
          } else {

2020-12-10 09:00:18,073	[INFO]	431	SUCCESS	+13.0	
2020-12-10 09:00:18,074	[DEBUG]	
2020-12-10 09:00:18,946	[INFO]	432	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 09:00:19,823	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 09:00:23,176	[INFO]	434	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 09:00:23,177	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 09:00:26,407	[INFO]	435	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 09:00:26,408	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
              } else {
                  result.add(right.get(j));
                  j++;
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 09:00:26,410	[INFO]	436	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 09:00:26,411	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             int i = 0;
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 09:00:26,412	[INFO]	437	SUCCESS	+13.0	
2020-12-10 09:00:26,412	[DEBUG]	
2020-12-10 09:00:27,305	[INFO]	438	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 21), 'direction': 'after'})
2020-12-10 09:00:28,178	[INFO]	439	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 0), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 09:00:29,105	[INFO]	440	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 09:00:32,354	[INFO]	441	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 09:00:32,355	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,49 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             right = mergesort(right);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 09:00:32,356	[INFO]	442	SUCCESS	+13.0	
2020-12-10 09:00:32,356	[DEBUG]	
2020-12-10 09:00:33,231	[INFO]	443	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 20), 'direction': 'after'})
2020-12-10 09:00:34,097	[INFO]	444	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 09:00:35,028	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 09:00:36,164	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 1)})
2020-12-10 09:00:37,076	[INFO]	447	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 8), 'ingredient': ('java_programs/MERGESORT.java.xml', 2), 'direction': 'after'})
2020-12-10 09:00:37,078	[INFO]	448	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'after'})
2020-12-10 09:00:37,976	[INFO]	449	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 09:00:38,885	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 18)})
2020-12-10 09:00:42,096	[INFO]	451	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 09:00:42,097	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 43,48 ****
--- 43,51 ----
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
  

2020-12-10 09:00:42,098	[INFO]	452	SUCCESS	+13.0	
2020-12-10 09:00:42,098	[DEBUG]	
2020-12-10 09:00:42,987	[INFO]	453	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 9), 'direction': 'before'})
2020-12-10 09:00:43,866	[INFO]	454	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 22), 'direction': 'after'})
2020-12-10 09:00:44,780	[INFO]	455	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 17), 'direction': 'before'})
2020-12-10 09:00:45,670	[INFO]	456	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 09:00:48,872	[INFO]	457	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'})
2020-12-10 09:00:48,873	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 right = mergesort(right);
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 09:00:49,743	[INFO]	458	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 18), 'direction': 'before'})
2020-12-10 09:00:49,744	[INFO]	459	SUCCESS	+13.0	
2020-12-10 09:00:49,744	[DEBUG]	
2020-12-10 09:00:50,657	[INFO]	460	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'before'})
2020-12-10 09:00:53,991	[INFO]	461	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'})
2020-12-10 09:00:53,992	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 26,31 ****
--- 26,40 ----
                  result.add(left.get(i));
                  i++;
              } else {
+                 while (i < left.size() && j < right.size()) {
+             if (left.get(i) <= right.get(j)) {
+                 result.add(left.get(i));
+                 i++;
+             } else {
+                 result.add(right.get(j));
+                 j++;
+             }
+         }
                  result.add(right.get(j));
                  j++;
              }

2020-12-10 09:00:54,853	[INFO]	462	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 0)})
2020-12-10 09:00:54,854	[INFO]	463	SUCCESS	+13.0	
2020-12-10 09:00:54,854	[DEBUG]	
2020-12-10 09:00:58,110	[INFO]	464	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 9), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 09:00:58,111	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 24,30 ****
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 i++;
              } else {
                  result.add(right.get(j));
                  j++;
--- 24,30 ----
          while (i < left.size() && j < right.size()) {
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
!                 result.add(left.get(i));
              } else {
                  result.add(right.get(j));
                  j++;

2020-12-10 09:00:58,112	[INFO]	465	SUCCESS	+13.0	
2020-12-10 09:00:58,113	[DEBUG]	
2020-12-10 09:01:01,319	[INFO]	466	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'before'})
2020-12-10 09:01:01,320	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 28,33 ****
--- 28,34 ----
              } else {
                  result.add(right.get(j));
                  j++;
+                 j++;
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));

2020-12-10 09:01:01,321	[INFO]	467	SUCCESS	+13.0	
2020-12-10 09:01:01,321	[DEBUG]	
2020-12-10 09:01:02,246	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 3)})
2020-12-10 09:01:03,174	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 8)})
2020-12-10 09:01:04,052	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 24), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 09:01:04,927	[INFO]	471	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 2), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 09:01:05,833	[INFO]	472	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 11), 'direction': 'after'})
2020-12-10 09:01:06,729	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 21), 'ingredient': ('java_programs/MERGESORT.java.xml', 12)})
2020-12-10 09:01:07,636	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 22)})
2020-12-10 09:01:08,349	[INFO]	475	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 12), 'direction': 'after'})
2020-12-10 09:01:11,641	[INFO]	476	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 12), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 09:01:11,642	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 30,36 ****
                  j++;
              }
          }
!         result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
          return result;
      }
  
--- 30,36 ----
                  j++;
              }
          }
!         result.add(right.get(j));
          return result;
      }
  

2020-12-10 09:01:11,643	[INFO]	477	SUCCESS	+13.0	
2020-12-10 09:01:11,643	[DEBUG]	
2020-12-10 09:01:12,486	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 17), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 09:01:13,386	[INFO]	479	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 11), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'before'})
2020-12-10 09:01:16,623	[INFO]	480	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 19), 'ingredient': ('java_programs/MERGESORT.java.xml', 0), 'direction': 'before'})
2020-12-10 09:01:16,625	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 40,45 ****
--- 40,46 ----
          } else {
              int middle = arr.size() / 2;
              ArrayList<Integer> left = new ArrayList<Integer>(100);
+             ArrayList<Integer> result = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);

2020-12-10 09:01:16,627	[INFO]	481	SUCCESS	+13.0	
2020-12-10 09:01:16,628	[DEBUG]	
2020-12-10 09:01:17,522	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 6)})
2020-12-10 09:01:18,446	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 09:01:21,724	[INFO]	484	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)})
2020-12-10 09:01:21,725	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 31,37 ****
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return result;
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {
--- 31,37 ----
              }
          }
          result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
!         return merge(left, right);
      }
  
      public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {

2020-12-10 09:01:22,616	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 11)})
2020-12-10 09:01:23,492	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 24)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 20), 'ingredient': ('java_programs/MERGESORT.java.xml', 16), 'direction': 'after'})
2020-12-10 09:01:23,493	[INFO]	487	SUCCESS	+13.0	
2020-12-10 09:01:23,494	[DEBUG]	
2020-12-10 09:01:23,495	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 09:01:24,208	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 14), 'ingredient': ('java_programs/MERGESORT.java.xml', 10)})
2020-12-10 09:01:25,072	[INFO]	490	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 22), 'ingredient': ('java_programs/MERGESORT.java.xml', 13), 'direction': 'before'})
2020-12-10 09:01:28,349	[INFO]	491	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 09:01:28,350	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 09:01:29,268	[INFO]	492	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 23)})
2020-12-10 09:01:30,172	[INFO]	493	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 1), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 09:01:33,472	[INFO]	494	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'})
2020-12-10 09:01:33,473	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,50 ****
--- 39,56 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
              right = mergesort(right);
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
  
              return merge(left, right);
          }

2020-12-10 09:01:34,313	[INFO]	495	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'after'}) | StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 19)})
2020-12-10 09:01:34,314	[INFO]	496	SUCCESS	+13.0	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 18), 'ingredient': ('java_programs/MERGESORT.java.xml', 14), 'direction': 'before'})
2020-12-10 09:01:34,315	[DEBUG]	*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 39,44 ****
--- 39,47 ----
              return arr;
          } else {
              int middle = arr.size() / 2;
+             if (arr.size() == 0) { // <= 1 in correct version
+             return arr;
+         }
              ArrayList<Integer> left = new ArrayList<Integer>(100);
              left.addAll(arr.subList(0,middle));
              left = mergesort(left);

2020-12-10 09:01:34,315	[INFO]	497	SUCCESS	+13.0	
2020-12-10 09:01:34,315	[DEBUG]	
2020-12-10 09:01:35,215	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 21)})
2020-12-10 09:01:36,098	[INFO]	499	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 13), 'ingredient': ('java_programs/MERGESORT.java.xml', 10), 'direction': 'after'})
2020-12-10 09:01:36,992	[INFO]	500	PARSE_ERROR	 None	StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 16), 'ingredient': ('java_programs/MERGESORT.java.xml', 24), 'direction': 'before'})
2020-12-10 09:01:36,993	[INFO]	==== END ====
2020-12-10 09:01:36,993	[INFO]	Reason: step budget
2020-12-10 09:01:36,993	[INFO]	
2020-12-10 09:01:36,993	[INFO]	========== REPORT ==========
2020-12-10 09:01:36,994	[INFO]	==== Epoch 1 ====
2020-12-10 09:01:36,994	[INFO]	Termination: step budget
2020-12-10 09:01:36,994	[INFO]	Number of interations: 500
2020-12-10 09:01:36,994	[INFO]	==== Epoch 2 ====
2020-12-10 09:01:36,994	[INFO]	Termination: step budget
2020-12-10 09:01:36,994	[INFO]	Number of interations: 500
2020-12-10 09:01:36,994	[INFO]	==== Epoch 3 ====
2020-12-10 09:01:36,994	[INFO]	Termination: step budget
2020-12-10 09:01:36,994	[INFO]	Number of interations: 500
2020-12-10 09:01:36,994	[INFO]	==== Epoch 4 ====
2020-12-10 09:01:36,994	[INFO]	Termination: step budget
2020-12-10 09:01:36,994	[INFO]	Number of interations: 500
2020-12-10 09:01:36,994	[INFO]	==== Epoch 5 ====
2020-12-10 09:01:36,994	[INFO]	Termination: step budget
2020-12-10 09:01:36,994	[INFO]	Number of interations: 500
2020-12-10 09:01:36,995	[INFO]	==== Epoch 6 ====
2020-12-10 09:01:36,995	[INFO]	Termination: step budget
2020-12-10 09:01:36,995	[INFO]	Number of interations: 500
2020-12-10 09:01:36,995	[INFO]	==== Epoch 7 ====
2020-12-10 09:01:36,995	[INFO]	Termination: step budget
2020-12-10 09:01:36,995	[INFO]	Number of interations: 500
2020-12-10 09:01:36,995	[INFO]	==== Epoch 8 ====
2020-12-10 09:01:36,995	[INFO]	Termination: step budget
2020-12-10 09:01:36,995	[INFO]	Number of interations: 500
2020-12-10 09:01:36,995	[INFO]	==== Epoch 9 ====
2020-12-10 09:01:36,995	[INFO]	Termination: target fitness reached
2020-12-10 09:01:36,995	[INFO]	Number of interations: 155
2020-12-10 09:01:36,995	[INFO]	Best fitness: 0.0
2020-12-10 09:01:36,995	[INFO]	Best patch: StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 10), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/MERGESORT.java.xml', 23)}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 23), 'ingredient': ('java_programs/MERGESORT.java.xml', 1), 'direction': 'after'}) | StmtInsertion({'target': ('java_programs/MERGESORT.java.xml', 6), 'ingredient': ('java_programs/MERGESORT.java.xml', 23), 'direction': 'before'})
2020-12-10 09:01:36,995	[INFO]	Diff:
*** before: java_programs/MERGESORT.java.xml
--- after: java_programs/MERGESORT.java.xml
***************
*** 22,31 ****
--- 22,33 ----
          int j = 0;
  
          while (i < left.size() && j < right.size()) {
+             right = mergesort(right);
              if (left.get(i) <= right.get(j)) {
                  result.add(left.get(i));
                  i++;
              } else {
+                 right = mergesort(right);
                  result.add(right.get(j));
                  j++;
              }
***************
*** 44,50 ****
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             right = mergesort(right);
  
              return merge(left, right);
          }
--- 46,53 ----
              left = mergesort(left);
              ArrayList<Integer> right = new ArrayList<Integer>(100);
              right.addAll(arr.subList(middle, arr.size()));
!             
!             int i = 0;
  
              return merge(left, right);
          }

2020-12-10 09:01:36,996	[INFO]	==== Epoch 10 ====
2020-12-10 09:01:36,996	[INFO]	Termination: step budget
2020-12-10 09:01:36,996	[INFO]	Number of interations: 500
2020-12-10 09:01:36,996	[INFO]	==== Epoch 11 ====
2020-12-10 09:01:36,996	[INFO]	Termination: step budget
2020-12-10 09:01:36,996	[INFO]	Number of interations: 500
2020-12-10 09:01:36,996	[INFO]	==== Epoch 12 ====
2020-12-10 09:01:36,996	[INFO]	Termination: step budget
2020-12-10 09:01:36,996	[INFO]	Number of interations: 500
2020-12-10 09:01:36,996	[INFO]	==== Epoch 13 ====
2020-12-10 09:01:36,996	[INFO]	Termination: step budget
2020-12-10 09:01:36,996	[INFO]	Number of interations: 500
2020-12-10 09:01:36,997	[INFO]	==== Epoch 14 ====
2020-12-10 09:01:36,997	[INFO]	Termination: step budget
2020-12-10 09:01:36,997	[INFO]	Number of interations: 500
2020-12-10 09:01:36,997	[INFO]	==== Epoch 15 ====
2020-12-10 09:01:36,997	[INFO]	Termination: step budget
2020-12-10 09:01:36,997	[INFO]	Number of interations: 500
2020-12-10 09:01:36,997	[INFO]	==== Epoch 16 ====
2020-12-10 09:01:36,997	[INFO]	Termination: step budget
2020-12-10 09:01:36,997	[INFO]	Number of interations: 500
2020-12-10 09:01:36,997	[INFO]	==== Epoch 17 ====
2020-12-10 09:01:36,997	[INFO]	Termination: step budget
2020-12-10 09:01:36,997	[INFO]	Number of interations: 500
2020-12-10 09:01:36,997	[INFO]	==== Epoch 18 ====
2020-12-10 09:01:36,998	[INFO]	Termination: step budget
2020-12-10 09:01:36,998	[INFO]	Number of interations: 500
2020-12-10 09:01:36,998	[INFO]	==== Epoch 19 ====
2020-12-10 09:01:36,998	[INFO]	Termination: step budget
2020-12-10 09:01:36,998	[INFO]	Number of interations: 500
2020-12-10 09:01:36,998	[INFO]	==== Epoch 20 ====
2020-12-10 09:01:36,998	[INFO]	Termination: step budget
2020-12-10 09:01:36,998	[INFO]	Number of interations: 500
2020-12-10 09:01:37,002	[INFO]	Experiment duration: 12410.176760435104
